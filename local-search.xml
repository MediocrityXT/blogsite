<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>读《沧浪之水》</title>
    <link href="/blogsite/2022/07/07/%E8%AF%BB%E3%80%8A%E6%B2%A7%E6%B5%AA%E4%B9%8B%E6%B0%B4%E3%80%8B%E6%9C%89%E6%84%9F/"/>
    <url>/blogsite/2022/07/07/%E8%AF%BB%E3%80%8A%E6%B2%A7%E6%B5%AA%E4%B9%8B%E6%B0%B4%E3%80%8B%E6%9C%89%E6%84%9F/</url>
    
    <content type="html"><![CDATA[<blockquote><p>《楚辞 渔父》</p><p>屈原既放，游于江潭，行吟泽畔，颜色憔悴，形容枯槁。渔父见而问之曰：“子非三闾大夫与？何故至于斯？”屈原曰：“<strong>举世皆浊我独清，众人皆醉我独醒，是以见放。</strong>”</p><p>渔父曰：“圣人不凝滞于物，而能与世推移。世人皆浊，何不淈其泥而扬其波？众人皆醉，何不哺其糟而歠其醨<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="哺：吃。糟：酒糟。歠（chuò）：《说文》“歠，饮也。”醨（lí）：《说文》醨，薄酒也。成语：哺糟歠醨）">[1]</span></a></sup>?何故深思高举，自令放为？”</p><p>屈原曰：“吾闻之，新沐者必弹冠，新浴者必振衣；安能以身之察察，受物之汶汶者乎？宁赴湘流，葬于江鱼之腹中。安能以皓皓之白，而蒙世俗之尘埃乎？”</p><p>渔父莞尔而笑，鼓枻而去。</p><p>乃歌曰：“<strong>沧浪之水清兮，可以濯吾缨；沧浪之水浊兮，可以濯吾足。</strong>”遂去，不复与言。</p></blockquote><p>两千年前的文人心态，竟然一直能延续到现在？文人总觉得这个世界应该按照自己的构想来运行，若有违反就是社会的问题他人的问题；渔夫则看的更清楚，在社会中生存最重要的是适应环境、利用环境来达成自己的目标。大丈夫能屈能伸，屈这个字有太多隐忍太多坚强太多痛苦不与人言，但这是大丈夫必须懂的道理。</p><p>现代主义对一切旧的最终价值的消解，自我和永恒之间已经不存在应许的桥梁，只剩下对发展的无限崇拜。</p><p>现有社会制度对每个人的异化，不论内心想法如何每个人都要扮演好自己的角色，不然难以在社会中生存。美好的心灵并不适合作为现实生活的根本原则，人首先是物质的人，才是思想的人。坐而言不如起而行，当你有了改变世界的力量，才有可能改变世界。</p><p>制度内部存在不均衡不公正的现象，但由于内部既得利益集团的阻力，制度本身很难自我完善，而就算一个人在制度内地位很高，也很难改动制度，因为他个人的全部力量来自于制度本身。</p><p>书里还有很多为人处事、处理人际关系的细节道理。</p><p>人总是惯于从自己的视角自己的想法出发去观察世界观察他人观察自己，所以人认知中的一些偏见和偏差就合理反映于他们对其他事物的看法中。有心人可以利用这种偏差来扭曲/迎合他们的看法，赢取他们的情感。比如恭维的艺术，怎么揣摩到他某方面的自我感觉良好，并对其加以夸大和修饰，令他极其受用而又难以自觉。比如让别人听话的最高境界，是微微点拨一下不明说，让他以为这个想法是他听了你的话之后自己想出来的。</p><p>“世界上的事实在很简单，谁对你负责，你就对谁负责。当官没有别的门道，对给他那张椅子的人负责就行。只要对他一个人负责，老百姓一万个都没用。”目标决定行动，行动也需要目标。如果目标清楚，主要矛盾就好抓，计划和工作就好推进。人际关系就是两方面，利益和情感，拿捏住这两条线方可无往不利。</p><p>警惕把思考本身看成自尊和骄傲，不要以为人家不思考，也许人家想到了你没想到的只是你不知道。如果思考导致的结果还不如不思考，那你那些自以为骄傲的思考的意义是什么呢？</p><p>低调，谦虚，没有必要不要树敌，但自己要争取的必须主动争取。完善自我，软件条件提升需要多听多看少说话，硬件条件提升需要提高业务能力多争取明面的荣誉和成就。不要对社会的冷酷程度保持幻想。</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>哺：吃。糟：酒糟。歠（chuò）：《说文》“歠，饮也。”醨（lí）：《说文》醨，薄酒也。成语：<a href="https://baike.baidu.com/item/哺糟歠醨">哺糟歠醨</a>）<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>读后感</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感悟</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>读《新媒体批判导论》</title>
    <link href="/blogsite/2022/05/11/%E8%AF%BB%E3%80%8A%E6%96%B0%E5%AA%92%E4%BD%93%E6%89%B9%E5%88%A4%E5%AF%BC%E8%AE%BA%E3%80%8B/"/>
    <url>/blogsite/2022/05/11/%E8%AF%BB%E3%80%8A%E6%96%B0%E5%AA%92%E4%BD%93%E6%89%B9%E5%88%A4%E5%AF%BC%E8%AE%BA%E3%80%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>批判性研究不代表“太阳底下没啥新鲜事” ，是潜到海面以下，剖析事物中符合旧的历史规律的部分以及新出现的东西，去伪存真，拨开让人看不清的迷雾，让人的思考和理解有了新与旧两个抓手的过程。批判不是盖帽子，如果不具体问题具体分析，不分析本质和特点，而是抓住新媒体的作用和潜在的影响“批判”其为资本主义的骗局，这是可笑的逃避思考的行为。</p><h1 id="第一章-什么是新？"><a href="#第一章-什么是新？" class="headerlink" title="第一章 什么是新？"></a>第一章 什么是新？</h1><p>新媒体是一个宏观的社会、科技、文化变革过程中的一部分。</p><p>现代性向后现代性转型：没找到具体的权威的解释，但我觉得可以这么理解——</p><ol><li>现代性自启蒙运动始；后现代性从二战、越战之后</li><li>现代性相信人可以通过自己的理性和智慧获得无限的发展，并且发展是理所应当的、正确的、正义的；后现代性则是否定这些曾被看作绝对正确的思想，反而质疑这些“正确”的意义，寻找另一套自己的意义。（骆驼-&gt;狮子-&gt;婴儿）</li><li>现代性代表着人从敬畏自然到征服自然；后现代性则是否定了现代性的内涵，要重建人和自然的关系，但也在纠结什么才是对的关系，或者说存在合理的不变的正确关系吗？</li><li>现代性终结了传统的封建和宗教国家，建立了民族国家；后现代性之下民族国家的边界逐渐消融，跨地区的文化交流、物质交换在跨国公司的领导下，他们逐渐变为权力的所有者</li></ol><p>新是相对于旧的定义，如果我们对旧的定义狭窄或简单肤浅，那么新媒体的新也将肤浅。现代主义信仰把社会进步变得更好当成理所应当，从而给新媒体的新也加上了一层“新即是好”的意思。</p><p>书中探讨的新媒体囊括下面的方面：</p><ol><li>文本经验的新类型</li><li>再现世界的新方式</li><li>主体之间的新关系（例如使用者与消费者的角色变化）</li><li>具体化、身份认同、共同体之间关系的新体验</li><li>生理性身体和技术型媒体的新概念</li><li>组织与生产之间的新模式（各类产业行业内部、之间的重组整合与新形态）</li></ol><p>技术本质主义是只考虑技术的物质特性而没有纳入人的主观意愿和看法。——即忽视了设计理论中的“可供性”Affordance，如玻璃是透明的易碎的，可供人打碎可供人看透，但也可供人欣赏。</p>]]></content>
    
    
    <categories>
      
      <category>读后感</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感悟</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>22年杂绪</title>
    <link href="/blogsite/2022/04/23/22%E5%B9%B4%E6%9D%82%E7%BB%AA/"/>
    <url>/blogsite/2022/04/23/22%E5%B9%B4%E6%9D%82%E7%BB%AA/</url>
    
    <content type="html"><![CDATA[<h1 id="你知道人生需要一个题目，可你不知道填什么才好。"><a href="#你知道人生需要一个题目，可你不知道填什么才好。" class="headerlink" title="你知道人生需要一个题目，可你不知道填什么才好。"></a>你知道人生需要一个题目，可你不知道填什么才好。</h1><h2 id="4月23日"><a href="#4月23日" class="headerlink" title="4月23日"></a>4月23日</h2><p>压力就像一台碾子，把你的外壳狠狠挤碎，才能把精华的本质榨出来。</p><p>在该忙毕设的时候，我才发现写点博客是种多么解压的方法，是疲惫航船的避风港。<del>等我后面有空了，记得把今年考研的感受和参加小说续写的快乐写下来。</del></p><h2 id="4月29日"><a href="#4月29日" class="headerlink" title="4月29日"></a>4月29日</h2><p>身体是革命的本钱。</p><p>从医院针灸回来感觉自己老了十岁，像个老人一样行动缓慢怕闪着腰了。不免想到未来更大的工作压力，健康换金钱真的值吗。没钱但健康的人 身在福中不知福啊。</p><h2 id="5月2日于银杏大道"><a href="#5月2日于银杏大道" class="headerlink" title="5月2日于银杏大道"></a>5月2日于银杏大道</h2><p>盛夏的残光，磅礴的失语。</p><p>天是蓝色，太阳盛放。没有云朵的轻舞水袖，落在叶子上的锈色光线穿透空气，把沉默的长街封在琥珀里。我像一只寻不着方向的蚊虫，在虚无的黏稠中挣扎窒息。 </p><h2 id="5月14日"><a href="#5月14日" class="headerlink" title="5月14日"></a>5月14日</h2><p>毕设已经定稿。本科四年基本宣告结束。但是我却没有感觉到轻松和快乐。生活会越来越好的这个童话似乎逐渐变得不再可信。生活会变好的——生活不会一帆风顺，无耻的语言游戏将两句话都放入了常识，怎么说都是对的。“好的开端是臭的一半”我以为蛋糕掉地上了捡起来还能吃，现在发现要吃坏肚子了。低着头不敢看萦绕于天际的乌云，在闪电落地的时候才发现没有任何可以值得夸耀的遮羞布。被养鱼了。</p><p>当一颗子弹已经上膛，最安全的时候是它击发之后。just chill，人生不会是一腔情愿，就算是天地倒转，那就大不了在云里游泳咯，how to handle failure caused by uncertainty才是人生必修课。当然理论上要吸取教训，不过我想这辈子联系导师这种事也不会需要发生很多次。</p><p>关于考研我好像也没有什么太多想说。<strong>态度认真重视，做事积极主动。</strong>凡事预则立不预则废。不仅仅是指规划，更是指<strong>现在能预先做的不要想着以后做</strong>。人生的每时每刻都是在跟过去的我臆想中的未来的我在缠斗罢了。</p><h2 id="7月7日"><a href="#7月7日" class="headerlink" title="7月7日"></a>7月7日</h2><p>在家待了一段时间，我终于想着要写点什么，做点什么，一切都只是想，可在要付出的努力前却又觉得不是很想。那我就打打字吧，倒是不是很累。</p><p>考研的经历仿佛就像我窗外正在坠下的夕阳，只剩一抹淡橙还没有被渐暗的天色挤出地平线。苦痛、紧张、舒张、惋惜，各种颜色的情绪都在时间的大手下被推出我的世界。去年的我的样子，就像记忆里的太阳模样一样模糊。我想，对于未来的我，现在的我也不过是可有可无的一段言语的碎片，存放在简历“x年x月-x年x月”的破折号里。但是，人总不能为过去而活，过去的我是墓碑上的青苔不断生长，我会带着未来的我常来拜访的，如果我们不吵起来的话。</p>]]></content>
    
    
    <categories>
      
      <category>文</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感悟</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>边缘系统故障</title>
    <link href="/blogsite/2022/02/27/%E8%BE%B9%E7%BC%98%E7%B3%BB%E7%BB%9F%E6%95%85%E9%9A%9C/"/>
    <url>/blogsite/2022/02/27/%E8%BE%B9%E7%BC%98%E7%B3%BB%E7%BB%9F%E6%95%85%E9%9A%9C/</url>
    
    <content type="html"><![CDATA[<p>十二度的晚风在我面前打了个旋，将我的疲倦拧毛巾似的挤了出来，我被抖开舒展。如果痛苦真的存在，他也并非与美好势不两立。新长出的绿叶随风飘落，但地上枯黄的冬草下藏着极水嫩的青芽，在偷偷地期待如期而至的橙色阳光。看起来讽刺般热带的棕榈树，垂着宽大结实的叶面，在斑驳侧墙边无言颓废。</p><p>古老的爬虫脑在不断的震颤，感应到了——是的那是令人垂涎的无法抗拒的诱惑，放在现代化的玻璃展柜里，这让边缘系统高速运转发热过载也无法解开的厚障壁。蜜蜂继续撞击假装它并不存在；豺狼眼冒红光吐着舌头绕着它打圈圈；艺术家拿起画笔在它之上挥洒着极尽嘲讽之能事的涂鸦。</p><p>我看着自己，撕毁最后一片玫瑰花瓣，如同一滴雨水奔向大地一般注定。将人文摧毁，让上帝掷那无情的骰子，在远古的海中随机生成的维纳斯走上岸看见的会是轰然倒塌的高楼还是山火后的森林，没有人给出答案，也没有人能见证答案。若是一切过去皆为虚妄，是否我这一刻也正在湮灭。死亡不是永久，恐惧才会永恒。</p><p>漂流的野人，只能在一座荒岛远远看向另一座荒岛，同样的枯败，同样的寂静，就让海浪继续咆哮，让海风继续厉嚎，从十亿年前便如此。</p>]]></content>
    
    
    <categories>
      
      <category>文</category>
      
    </categories>
    
    
    <tags>
      
      <tag>散文</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Fly Me To The Moon</title>
    <link href="/blogsite/2021/10/29/FlyMeToTheMoon/"/>
    <url>/blogsite/2021/10/29/FlyMeToTheMoon/</url>
    
    <content type="html"><![CDATA[<p>高楼上结出一颗月亮<br>我不顾狼狈忐忑爬向<br>玫瑰随着松手而破碎<br>失联的阿波罗在下坠</p><p><code>考研前一晚于酒店</code></p><hr><p><img src="image-20220104023346299.png" alt="画了四十分钟"></p><hr><p>风铃扫过孤塔的沉默<br>黑色在高墙蔓延<br>从枯井里捞出一轮明月<br>掰下一块月光，碾作银辉<br>涂抹在世界溃烂的伤口<br>乌鸦立于山门之上，半睡半醒</p><p>2021年10月29日16:14</p><blockquote><p>遗憾    应对梦想俯首称臣<br>我不是讨厌安逸<br>只是不想辜负自己那盲目燃烧着的自傲</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>诗</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一柄断剑</title>
    <link href="/blogsite/2021/07/13/%E4%B8%80%E6%9F%84%E6%96%AD%E5%89%91/"/>
    <url>/blogsite/2021/07/13/%E4%B8%80%E6%9F%84%E6%96%AD%E5%89%91/</url>
    
    <content type="html"><![CDATA[<p>把银河漏下的点滴碎梦掬成绝世的海伦<br>我拔出佩剑杀意涌向天边<br>坟茔间的磷火闪烁着吟游诗人传颂的史诗<br>那把剑的诅咒<br>在杀掉自己的爱情前无法停手<br>烈日源自阿波罗驾圣车来欣赏你的美好<br>奥林匹斯山上的主神争先执掌嫉妒<br>凡躯难敌冥河一渡<br>愿塞壬的歌声不会纠缠我这亡魂<br>三头犬分别咬下我的贪婪我的侥幸我的痴狂<br>当地狱归来之剑直指你的咽喉<br>我方才洞悉那宿命的阿喀琉斯之踵</p><p><code>2021-7-13 03:05 一杯whiskey后 朦胧浅睡时</code></p>]]></content>
    
    
    <categories>
      
      <category>文</category>
      
    </categories>
    
    
    <tags>
      
      <tag>诗</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>最优化导论</title>
    <link href="/blogsite/2021/06/29/%E6%9C%80%E4%BC%98%E5%8C%96/"/>
    <url>/blogsite/2021/06/29/%E6%9C%80%E4%BC%98%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="线性代数"><a href="#线性代数" class="headerlink" title="线性代数"></a>线性代数</h1><h2 id="向量（默认指列向量）"><a href="#向量（默认指列向量）" class="headerlink" title="向量（默认指列向量）"></a>向量（默认指列向量）</h2><p>向量从数组-》坐标系中箭头的本质：数组中保存的基的系数x坐标系的基向量-》从原点指向目标位置的箭头（因为都是从原点出发，所以只考虑端点也可以）</p><p>线性无关的向量集：两种定义</p><ul><li>除非系数全为0，否则他们的线性组合永不为0</li><li>不存在某一向量可被其他向量的线性组合表示</li></ul><p>线性组合</p><p>张成子空间：向量集中任意向量之间所有线性组合的集合。张成子空间中的一组线性无关向量则称为子空间的一组基。</p><h2 id="线性变换"><a href="#线性变换" class="headerlink" title="线性变换"></a>线性变换</h2><p>线性代数中的变换遵守两个原则，1. 所有直线还是直线（所有空间中的向量变换后线性组合系数依然不变，实质上是对基向量的变换实现了所有向量的变换。）、2. 原点不动。[若满足1不满足2则为仿射变换]</p><h3 id="相似"><a href="#相似" class="headerlink" title="相似"></a>相似</h3><p>（基变换） 若存在非奇异矩阵T，令$A=T^{-1}BT$，则A与B相似。相似矩阵表示相同线性变换。证明：</p><p>同一个空间可以用不同基向量形成的坐标系来描述。假设B是默认坐标系里的某种线性变换，A则是新坐标系下对空间相同的线性变换。</p><script type="math/tex; mode=display">A\vec x=T^{-1}BT\vec x</script><p>可以看出当x用新坐标系描述的某向量，则Tx相当于默认坐标系下的该向量。而T就相当于将新坐标系变换到默认坐标系，T的逆则是将默认坐标系再变回新坐标系。</p><p><strong>一句话总结：</strong>将陌生坐标系下的向量，左乘T翻译为默认坐标系下的向量，所以左乘B得到默认坐标系下发生变换得到的结果向量，再左乘T的逆，将结果向量翻译成陌生坐标系下的结果向量。所以$A=T^{-1}BT$，陌生坐标系下的线性变换A与默认坐标系下的线性变换B相同。</p><h2 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h2><h3 id="直观理解"><a href="#直观理解" class="headerlink" title="直观理解"></a>直观理解</h3><p>矩阵本质是一组基。<strong>这组基是单位正交基经过线性变换后得到的向量。</strong>矩阵因为包含了这组变换后的基，可以表示这次线性变换。类似</p><p>现在看三维的单位矩阵</p><script type="math/tex; mode=display">I=\begin{bmatrix}1 & 0 & 0 \\0 & 1 & 0 \\0 & 0 & 1 \\\end{bmatrix}</script><p>为什么$Ix=x$？</p><p>因为右侧默认的三维空间基向量就是I的列向量，也即单位正交基。</p><script type="math/tex; mode=display">e_1=\begin{bmatrix}1\\0\\0\end{bmatrix},\quade_2=\begin{bmatrix}0\\1\\0\end{bmatrix},\quade_3=\begin{bmatrix}0\\0\\1\end{bmatrix}</script><p>看一个n维矩阵</p><script type="math/tex; mode=display">A=\begin{bmatrix}a_1,a_2,\cdots,a_n\end{bmatrix}\\</script><p>$a_i$均为长度为n的列向量，表示某单位正交基<strong>$e_i$在经过A表示的变换之后的基向量</strong>在空间中的位置（向量$a_i$中的数字为用单位正交基表示该位置的线性组合系数）。</p><p>矩阵相乘，如AB=C，可理解为B中每列所表示的基向量都经历了A所表示的线性变换后，该列向量成为新的能够表示先B后A的两次线性变换的基向量保存在C中。</p><h3 id="行列式：-detA、-A"><a href="#行列式：-detA、-A" class="headerlink" title="行列式：$detA、|A|$"></a>行列式：$detA、|A|$</h3><p>首先定义在原本空间$\mathbb{R}^n$中由单位正交基作为边，定义的<strong>单位大小空间</strong>（在2维空间中是单位正方形；3维空间中是单位立方体）。经过A的线性变换后得到的<strong>新空间$\mathbb{R}^m$的单位大小空间</strong>是由A中保存的新空间的基向量作为边定义的。</p><p>而detA的值（绝对值）就是新空间$\mathbb{R}^m$的单位大小空间在原本空间$\mathbb{R}^n$中的大小，也表示空间大小变化的比例。</p><p>detA=0表示空间降维，m&lt;n；否则m=n。若detA&lt;0，则还表示新空间的定向发生变化（相当于发生镜面对称：在二维世界相当于平面翻转成原本的背面；三维世界相当于从右手螺旋镜面为左手螺旋）</p><p><em>奇异矩阵——该方阵A不为满秩——detA=0——降维的线性变换——A的逆矩阵不存在</em></p><p>detA=0时A能够降维，将某一维上的所有向量全部降到同一个点。但是任何函数，包括线性变换，不能将某一个点升维，变为新维度上的无限个点。所以逆矩阵不存在。</p><p>A的<strong>列空间</strong>就是A的列向量张成的空间，即Ax，其中x为任意向量。</p><p>A的零空间，又称为核，是Ax=0的解空间，即所有在线性变换后落到原点的向量的集合。</p><h3 id="秩"><a href="#秩" class="headerlink" title="秩"></a>秩</h3><p>矩阵A中线性无关列的最大数目。rank(A)表示这个变换后的空间有多少维度。</p><blockquote><p>保秩运算有：</p><p>a)矩阵的初等变换；<br>b)矩阵中加入一列，且该列式列向量组的线性组合；<br>c)矩阵乘以可逆矩阵<br>d) 转置、旋转、镜像、……</p></blockquote><h3 id="列空间与零空间的关系"><a href="#列空间与零空间的关系" class="headerlink" title="列空间与零空间的关系"></a>列空间与零空间的关系</h3><p>【来自MIT公开课：以 2020 年的全新眼光审视线性代数】矩阵转置：$A$的列空间是$A^T$的行空间。$A^T$的列空间是$A$的行空间。</p><script type="math/tex; mode=display">\left\{\begin{array}{r}Ax=0\\A^Ty=0\end{array}\right.</script><p>上式中所有$x$的集合为A的零空间，A的零空间中任意向量都与A的任意行向量正交，所以称A的零空间与A的行空间正交，又因为转置的性质，所以有：</p><script type="math/tex; mode=display">N(A)\perp C(A^T),N(A^T)\perp C(A)\\N(A)表示A的零空间，C(A)表示A的列空间</script><p>根据零空间定义，所以A的行空间中任意向量x都有Ax=b，b不为0。b的全体集合为A的列空间。</p><p><img src="image-20210303205435001.png" alt="image-20210303205435001"></p><h2 id="线性方程组"><a href="#线性方程组" class="headerlink" title="线性方程组"></a>线性方程组</h2><p>$Ax=b$</p><p>指找到某向量x能经过A变换为b；或者找到b经过$A^{-1}$变换后的向量x。</p><p>特解+基础解系：对A的0空间进行平移(Manifold,流形)</p><h2 id="向量的内积与范数（欧氏空间）"><a href="#向量的内积与范数（欧氏空间）" class="headerlink" title="向量的内积与范数（欧氏空间）"></a>向量的内积与范数（欧氏空间）</h2><p>两向量内积可以刻画两向量相差的角度，内积函数具有非负性、对称性、可加性、齐次性。</p><p><img src="image-20210309092601106.png" alt="image-20210309092601106"></p><p>欧式内积为$<x,y>=x^T y$，还可以定义许多不同内积函数。<x,y>=0则x,y正交。</p><p>复空间内积定义与实空间不同。</p><h3 id="【来自线性代数的本质】向量点积："><a href="#【来自线性代数的本质】向量点积：" class="headerlink" title="【来自线性代数的本质】向量点积："></a>【来自线性代数的本质】向量点积：</h3><script type="math/tex; mode=display">u\cdot v=\begin{bmatrix}u_1\\u_2\end{bmatrix}\cdot \begin{bmatrix}v_1\\v_2\end{bmatrix}\Leftrightarrow\begin{bmatrix}u_1\space u_2\end{bmatrix} \begin{bmatrix}v_1\\v_2\end{bmatrix}=Uv</script><p>$u\cdot v=|u||v|cos\theta$可以理解为v向u做投影，投影与u相乘；或者理解为将二维平面进行降维的线性变换U——因为$[1,0]$投影到u所在直线上的长度为$cos\theta$，因为$[0,1]$投影到u所在直线上的长度为$sin\theta$，而$\frac{u_1}{u_2}=|u|\frac{cos\theta}{sin\theta}$所以这个变换U相当于<strong>把整个二维平面投影到u所在的直线上然后进行|u|倍缩放</strong>。</p><p>引申到n维向量uv点乘，可以理解为n维空间中的v向量投影到u所在直线然后缩放，输入为n维，输出为1维。</p><h3 id="向量范数"><a href="#向量范数" class="headerlink" title="向量范数"></a>向量范数</h3><p>范数可以刻画向量长度。范数有非负性、齐次性、三角不等式。欧式范数（2范数）$||x||=\sqrt{<x,x>}=\sqrt{x^Tx}$。还有1-范数、p-范数、inf-范数。范数等价性：某范数的上下界能被其他范数表示。</p><p>1范数：所有分量绝对值之和<br>2范数：所有元素平方和的平方根（欧氏距离）<br>inf-范数（无穷范数）：元素绝对值中最大的一个<br>p范数：2范数的平方、开平方改为p次方、开p次方(p&gt;=1)</p><h3 id="柯西-施瓦兹不等式"><a href="#柯西-施瓦兹不等式" class="headerlink" title="柯西-施瓦兹不等式"></a>柯西-施瓦兹不等式</h3><script type="math/tex; mode=display">对于R^n中任意x,y有\\|\langle x,y\rangle|\le||x||\space||y||</script><h3 id="叉积"><a href="#叉积" class="headerlink" title="叉积"></a>叉积</h3><script type="math/tex; mode=display">二维情况下：\\|\vec{v} \times\vec{w}|=det([\vec{v},\vec{w}])=det(\begin{bmatrix}v_1 &w_1\\v_2&w_2\end{bmatrix})\\|\vec{v} \times\vec{w}|=|\vec v||\vec w|sin\theta</script><p>两向量作为列向量组合成一个矩阵，叉乘得到两向量平面的法向量（右手定则确定方向），长度等于该矩阵行列式。【一般只考虑3维情况】</p><h4 id="叉乘计算方法证明："><a href="#叉乘计算方法证明：" class="headerlink" title="叉乘计算方法证明："></a>叉乘计算方法证明：</h4><p>三维空间下，将任意向量x投影到法向量直线上，长度再与v和w夹成的平行四边形面积相乘，等于矩阵$[\vec x,\vec v,\vec w]$的行列式，也即这三个向量夹成的平行六面体的体积。只要定义$\vec{v} \times\vec{w}$表示其长度为平行四边形面积，根据空间定向有其正方向的法向量则得到：</p><script type="math/tex; mode=display">设\quad\vec{v} \times\vec{w}=p_1\hat i+p_2\hat j+p_3\hat k\\det([\vec x,\vec v,\vec w])=(\vec{v} \times\vec{w})\cdot \vec x=p_1x_1+p_2x_2+p_3x_3\\将x_1,x_2,x_3替换为\hat i,\hat j,\hat k\\则\quad\vec{v} \times\vec{w}=det(\begin{bmatrix}\hat i&v_1&w_1\\\hat j&v_2&w_2\\\hat k&v_3&w_3\\\end{bmatrix})</script><p>四维下：vw也依然是一个法向量。需要解决非方阵行列式。$det(A_{3\times 4})$</p><h2 id="矩阵范数与其他性质"><a href="#矩阵范数与其他性质" class="headerlink" title="矩阵范数与其他性质"></a>矩阵范数与其他性质</h2><h3 id="矩阵范数"><a href="#矩阵范数" class="headerlink" title="矩阵范数"></a>矩阵范数</h3><p>F范数：所有元素平方和的平方根<br>1范数：各列中最大的列元素绝对值之和<br>2范数：$\sqrt \lambda，\lambda $是$A^HA$的最大特征值。（AH是共轭转置矩阵，对每个元素取共轭复数，再转置。A全为实数时AH等于A的转置。）<br>无穷范数：各行中最大的行元素绝对值之和</p><p>导出范数：（如谱范数）<br><img src="image-20210617143201449.png" alt="image-20210617143201449"></p><h3 id="特征值"><a href="#特征值" class="headerlink" title="特征值"></a>特征值</h3><script type="math/tex; mode=display">\begin{aligned}A\vec v&=\lambda\vec v\\A\vec v&=\lambda I\vec v\\(A- \lambda I)\vec v&=0\\\end{aligned}</script><p>该线性方程组要有非零解则需</p><script type="math/tex; mode=display">det(A- \lambda I)=0</script><p>按定义展开行列式则得到矩阵A的特征多项式，多项式的根则为特征值（若根为虚数，则一般对应旋转变换，行列式不为0）</p><p>特征向量矩阵P</p><script type="math/tex; mode=display">\Lambda=P^{-1}AP</script><h3 id="实对称矩阵"><a href="#实对称矩阵" class="headerlink" title="实对称矩阵"></a>实对称矩阵</h3><p>实对称矩阵特征值全是实数；反对称矩阵特征值为0或纯虚数。</p><p>实对称矩阵A可以被特征分解为</p><script type="math/tex; mode=display">A=Q^{-1}\Lambda Q</script><p>所以A相当于对原本空间只在正交的特征向量方向上缩放而不旋转空间。</p><h3 id="正交矩阵"><a href="#正交矩阵" class="headerlink" title="正交矩阵"></a>正交矩阵</h3><p>$Q^T=Q^{-1}$，它的转置矩阵等于它的逆矩阵。该方阵的列向量都是标准正交(orthonormal)向量。</p><h3 id="正交投影"><a href="#正交投影" class="headerlink" title="正交投影"></a>正交投影</h3><p>子空间与其正交补空间可以张成全空间。</p><p>正交分解</p><p>正交投影算子P，能使所有Px与x-Px正交</p><h2 id="二次型"><a href="#二次型" class="headerlink" title="二次型"></a>二次型</h2><script type="math/tex; mode=display">f(x) = x^\top Q x\\一般令Q为对称矩阵</script><p>正定二次型/半正定/负定</p><p>Q是否为正定矩阵的判定方法：</p><ul><li><p>Q行列式小于等于0，则不可能正定</p></li><li><p>特征值均为正</p></li><li><p>【正定的充要条件】西尔维斯特准则（只能判断是否正定，半正定无法判断。）：<br>矩阵的各阶顺序主子式都大于0</p><blockquote><p>i阶主子式：选定1到n的i个整数作为下标，从原始行列式取都属于这i行与这i列的元素（行列交汇处元素），组成新的i阶行列式。</p><p>各阶顺序主子式：沿原矩阵对角线从左向右扩大的阶数从1到n的主子式。</p></blockquote></li></ul><h2 id="瑞利不等式"><a href="#瑞利不等式" class="headerlink" title="瑞利不等式"></a>瑞利不等式</h2><p><img src="image-20210617152537264.png" alt="image-20210617152537264"></p><h1 id="解析几何"><a href="#解析几何" class="headerlink" title="解析几何"></a>解析几何</h1><h2 id="R-N-线段"><a href="#R-N-线段" class="headerlink" title="$R^N$线段"></a>$R^N$线段</h2><p>x,y两向量（可以看做两个点）</p><script type="math/tex; mode=display">\{\alpha \textbf x +(1-\alpha)\textbf y \}</script><p><strong>凸组合</strong>=&gt;线段 ：$\alpha \in [0,1]$</p><p>线性组合=&gt;直线</p><h2 id="超平面"><a href="#超平面" class="headerlink" title="超平面"></a>超平面</h2><p>相当于n维空间中找一个法向量u,令<u,x>=v的所有向量x集合就是一个超平面。</p><h2 id="线性簇"><a href="#线性簇" class="headerlink" title="线性簇"></a>线性簇</h2><p>满足Ax=b的x集合</p><p>b=0则线性簇是A的零空间，过零点，所以是R^n的子空间；<br>b不为0，则线性簇是一个流形。</p><blockquote><p>可能指线性流形Linear Manifold。为n维空间中任意小于等于n-1维的空间，可平移。可以理解为有限个超平面的交集。</p></blockquote><h2 id="凸集"><a href="#凸集" class="headerlink" title="凸集"></a>凸集</h2><p>任意两点连成的线段上的所有点在该集合中。<br>若不存在u,v两不同于x的点，令uv线段上有x点，则x为凸集的极点。=（极点无法表达为凸集内点的凸组合。）</p><p>开集：集合所有点都是内点，即集合中各点邻域内的所有点都在集合中。<br>闭集：全部边界点都在集合中。（边界点：邻域内有集合中的点，也有集合外的点。）<br>有界集：能被有限半径的球体包围的集合。<br>紧集：有界集且为闭集。</p><p>极值原理（魏尔斯特拉斯定理）：<strong>紧集上一定能取到极小值</strong>。</p><h2 id="多面体"><a href="#多面体" class="headerlink" title="多面体"></a>多面体</h2><p>多面体是有限个半空间的交集。<br>半空间是凸集，因为<strong>有限个凸集的交集是凸集</strong>，所以多面体是凸集。</p><p>多胞体是非空有界多面体。</p><h2 id="支撑超平面"><a href="#支撑超平面" class="headerlink" title="支撑超平面"></a>支撑超平面</h2><p>过边界点，且凸集完全在其一个半空间内。<br>一个凸集可被多个支撑超平面包围。</p><h2 id="多面体-1"><a href="#多面体-1" class="headerlink" title="多面体"></a>多面体</h2><p>这种集合可以表示为有限个半空间的交集。</p><p>k维多面体的包：唯一包含凸多面体的k维空间（k维线性簇）<br>k维多面体的边界：有限个k-1维多面体。</p><p>k维多面体的面：边界中的任何一个k-1维多面体，以及组成该k-1维多面体的k-2维多面体，以及组成k-2维多面体的……<br>每个k维多面体都具有维数为k-1、k-2、…、1、0的多个面。</p><p>一个多面体的零维面称为顶点，一维面称为棱。</p><h2 id="凸函数"><a href="#凸函数" class="headerlink" title="凸函数"></a>凸函数</h2><p>函数曲线上方所有点形成一个凸集。</p><p>凸函数定义域上任意两点x1、x2，总有</p><script type="math/tex; mode=display">f(\frac{x1+x2}{2})\le \frac {f(x1)+f(x2)} 2</script><h1 id="微积分"><a href="#微积分" class="headerlink" title="微积分"></a>微积分</h1><h2 id="雅可比矩阵（导数）"><a href="#雅可比矩阵（导数）" class="headerlink" title="雅可比矩阵（导数）"></a>雅可比矩阵（导数）</h2><p>第i行第j列是f_i对x_j的偏导。函数值为标量则雅可比矩阵是行向量。</p><h2 id="梯度"><a href="#梯度" class="headerlink" title="梯度"></a>梯度</h2><p>雅可比矩阵的转置得到梯度。</p><p>梯度是函数具有最大变化率的方向。</p><h2 id="方向导数"><a href="#方向导数" class="headerlink" title="方向导数"></a>方向导数</h2><p>梯度与指向某方向的单位向量的内积。</p><h2 id="黑塞矩阵"><a href="#黑塞矩阵" class="headerlink" title="黑塞矩阵"></a>黑塞矩阵</h2><p>要求<strong>函数值必须是一维向量</strong>（标量），否则这里应是三阶张量而非矩阵。</p><p>对雅可比矩阵在另一维展开，第i行第j列是f先对x_i求偏导再对x_j求偏导的二阶导数。</p><p><strong>若标量函数二次连续可微，则黑塞矩阵对称。</strong></p><h2 id="链式法则"><a href="#链式法则" class="headerlink" title="链式法则"></a>链式法则</h2><p>可以先用偏导方法确定好雅可比矩阵的维度匹配，再计算。<a href="https://www.cnblogs.com/yifanrensheng/p/12639539.html">参考</a></p><p>比如当z为标量，x,y为m,n维列向量时，若x-&gt;y-&gt;z，则</p><script type="math/tex; mode=display">\frac {\partial z}{\partial \textbf x}= (\frac {\partial y}{\partial \textbf x})^\top \frac {\partial z}{\partial \textbf y}</script><p><img src="image-20210620132314622.png" alt="image-20210620132314622"></p><h2 id="求导公式"><a href="#求导公式" class="headerlink" title="求导公式"></a>求导公式</h2><p><img src="image-20210402144741983.png" alt="image-20210402144741983"></p><h2 id="局部极小点-条件"><a href="#局部极小点-条件" class="headerlink" title="局部极小点-条件"></a>局部极小点-条件</h2><h3 id="一阶必要条件"><a href="#一阶必要条件" class="headerlink" title="一阶必要条件"></a>一阶必要条件</h3><p>（内点）驻点 梯度为0</p><p>（边界点）任意可行方向与梯度内积大于等于0</p><h3 id="二阶必要条件"><a href="#二阶必要条件" class="headerlink" title="二阶必要条件"></a>二阶必要条件</h3><p>（内点）黑塞矩阵半正定</p><p>（边界点）任意可行方向d满足$d^\top \textbf F(X^*)d \ge 0$</p><p><em>单变量函数x^3的点x=0处满足一阶、二阶必要条件，但依旧不是极值点。</em></p><h3 id="二阶充分条件"><a href="#二阶充分条件" class="headerlink" title="二阶充分条件"></a>二阶充分条件</h3><p>（内点）梯度为0，<strong>黑塞矩阵正定</strong>，则该点为严格局部极小点</p><h1 id="矩阵收敛"><a href="#矩阵收敛" class="headerlink" title="矩阵收敛"></a>矩阵收敛</h1><p>意义：对迭代是否收敛的判断</p><p>矩阵收敛$\Leftrightarrow$矩阵所有特征值的绝对值都小于1（谱半径&lt;1）</p><p>矩阵的幂级数收敛$\Leftrightarrow$矩阵收敛于零矩阵</p><p>矩阵值函数连续性：矩阵值函数在某点处所得矩阵可逆，则在该点处连续。</p><h1 id="一维搜索"><a href="#一维搜索" class="headerlink" title="一维搜索"></a>一维搜索</h1><p>一元单值函数（$\mathbb{R}\rightarrow\mathbb {R}$)的迭代寻找最值。要求该函数在区间上是<strong>单峰函数</strong>。</p><h2 id="黄金分割法"><a href="#黄金分割法" class="headerlink" title="黄金分割法"></a>黄金分割法</h2><p>计算两个分割点的函数值大小，两个分割点形成三个区间，极小值在<strong>函数值较小的点的左右两区间</strong>范围内。</p><p>黄金分割比的特性令上一次的较小分割点依然是下一次迭代中的一个分割点，减少计算量。</p><blockquote><p>e.g.<br>[0,1]区间内设定两个左右分割点$\lambda,\mu$满足</p><script type="math/tex; mode=display">\begin{cases}\lambda = 1-\mu \\\frac \mu 1 = \frac \lambda \mu\end{cases}\Rightarrow\begin{cases}\lambda = \frac {3-\sqrt 5}2 \approx 0.382 \\\mu = \frac {\sqrt 5 -1}2 \approx 0.618\end{cases}</script><p>意思是缩小到$[0,\mu]$区间后，只需要再加一个左分割点，原本的$\lambda$成为新区间的右分割点。</p></blockquote><p>总压缩比：0.618^N</p><blockquote><p>压缩比例：最左/最右区间长度 除以 三个区间总长度。</p><p>因为每次迭代都是只是抛弃最左或最右的一个区间。</p></blockquote><h2 id="斐波那契数列法"><a href="#斐波那契数列法" class="headerlink" title="斐波那契数列法"></a>斐波那契数列法</h2><p>动态改变压缩比例，达到效果最优（最后一次迭代的压缩比是$\frac{1}{2}-\epsilon$）<br>总压缩比为$\frac{1+2\epsilon}{F_{N+1}}$(F1=1,F2=2,……)</p><p>且这个动态的压缩比序列依然满足上一次迭代的较小分割点是下一次迭代的分割点的条件，也就是说计算量没有增加。</p><h2 id="二分法"><a href="#二分法" class="headerlink" title="二分法"></a>二分法</h2><p>利用连续可导单峰函数的<strong>一阶导数</strong>信息。每次找区间中点，根据导数正负选择缩小为左区间或右区间，导数为0则找到极值点。</p><p>总压缩比：0.5^N</p><h2 id="牛顿法"><a href="#牛顿法" class="headerlink" title="牛顿法"></a>牛顿法</h2><p>利用一阶二阶导数信息。将f(x)在x(k)点二阶泰勒展开得到二次多项式q(x)用来近似f(x)，取q’(x)=0则有牛顿法公式：</p><script type="math/tex; mode=display">x^{(k+1)}=x^{(k)}-\frac{f'(x^{(k)})}{f''(x^{(k)})}</script><blockquote><p>若f’’(x)&gt;0对于区间恒成立则牛顿法正常收敛到极小点；<br>若某些点处f’’(x)&lt;0则牛顿法可能收敛到极大点</p></blockquote><h3 id="牛顿切线法"><a href="#牛顿切线法" class="headerlink" title="牛顿切线法"></a>牛顿切线法</h3><p>令f’(x)=g(x),f’’(x)=g’(x)可以用牛顿法来求解方程g(x)=0</p><p>几何直观：就是在每个迭代点找到函数图像的切线，切线与x轴的交点作为下一个迭代点。</p><blockquote><p>如果起始点迭代变化值g(x0)/g’(x0)不是足够小，可能不收敛。</p></blockquote><h2 id="割线法"><a href="#割线法" class="headerlink" title="割线法"></a>割线法</h2><p>牛顿法的二次导数可用近似来代替。</p><script type="math/tex; mode=display">f''(x^{(k)})\approx\frac{f'(x^{(k)})-f'(x^{(k-1)})}{x^{(k)}-x^{(k-1)}}\\割线法需要两个起始点x^{(-1)}和x^{(0)}\\x^{(k+1)}=\frac{f'(x^{(k)})x^{(k-1)}-f'(x^{(k-1)})x^{(k)}}{f'(x^{(k)})-f'(x^{(k-1)})}</script><h2 id="插值类方法"><a href="#插值类方法" class="headerlink" title="插值类方法"></a>插值类方法</h2><p>搜索区间用低次（不超过三次）多项式插值近似目标函数。上一个点处插值多项式的驻点，就是下一个迭代点。</p><ul><li>牛顿法：一点二次插值（用该点的一阶导、二阶导来求多项式）</li><li>割线法：两点二次插值（用两个点的一阶导来求多项式）</li></ul><h2 id="划界法"><a href="#划界法" class="headerlink" title="划界法"></a>划界法</h2><p>寻找单峰函数极小点所在区间[a,b]的步骤：</p><ol><li>任选三点x0&lt;x1&lt;x2</li><li>若f(x1)&lt;f(x0)且f(x1)&lt;f(x2)，那么区间为[x0,x2]</li><li>若f(x0),f(x1),f(x2)递减，则选择一个点x3&gt;x2，计算f(x3)<ol><li>若f(x3)&gt;f(x2)，区间为[x1,x3]</li><li>否则继续向右找x3，使得f(x3)&gt;f(x2)</li></ol></li></ol><blockquote><p>核心思想就是找到三个点，两边高中间低；如果一边倒，就在最小点的另一边继续找能大于这个最小值的点</p></blockquote><h1 id="步长选取（第7章附-PPT）"><a href="#步长选取（第7章附-PPT）" class="headerlink" title="步长选取（第7章附-PPT）"></a>步长选取（第7章附-PPT）</h1><p>Armijo准则：该条直线之上的点不能选，比如离原点远的，防止步长过大。<br><img src="image-20210622100047166.png" alt="image-20210622100047166"></p><p>Goldstein准则：基于Armijo再加一条直线，该条直线之下的点不能选，比如离原点近的，防止步长过小。<br><img src="image-20210622100100902.png" alt="image-20210622100100902"></p><p>Wolfe准则：除了Armijo准则之外，还要求下一个迭代点处的斜率比较平缓——比xk点的切线斜率（小于0）的c2倍还大。这样它的区间大于Armijo-Goldstein准则，将迭代点邻域的极小值也包括了进去。<br><img src="image-20210622100122542.png" alt="image-20210622100122542"></p><h1 id="无约束优化方法"><a href="#无约束优化方法" class="headerlink" title="无约束优化方法"></a>无约束优化方法</h1><p>多维函数优化问题的迭代公式</p><script type="math/tex; mode=display">\textbf x^{(k+1)} = \textbf x^{(k)} + \alpha_k \textbf d^{(k)}</script><p>不同方法决定了不同的搜索方向；<br>对应的最优步长$\alpha_k$经常使用一维搜索来寻找。（参看步长选取）</p><p><img src="image-20210621145917491.png" alt="image-20210621145917491"></p><h2 id="最速下降法！"><a href="#最速下降法！" class="headerlink" title="最速下降法！"></a>最速下降法！</h2><blockquote><p>用临近点逼近来近似目标函数f(x)，该多项式满足一阶必要条件则得到梯度方向迭代公式</p></blockquote><p>每次沿负梯度方向一维搜索寻找最优步长，使得下一个迭代点的梯度方向与上一个梯度方向正交。</p><p>最速梯度下降法单调下降且对于任意初始点一定收敛。</p><p>用其求解二次型</p><script type="math/tex; mode=display">min\quad f(x)= \frac {1}{2}x^\top Qx-b^\top x</script><p>二次型问题最优步长计算公式：</p><script type="math/tex; mode=display">\alpha_k =\frac{g^{k\top}g^{k}}{g^{k\top}Qg^{k}}\\梯度g^k=Qx-b</script><p>若Q所有特征值相等，一步得到极值点（等值线是圆，各点梯度均直接指向极值点）；若不等，则只能无限步迭代尝试逼近。<br>最速下降法求解二次型的<strong>收敛率</strong>（下一个迭代点函数值与上一个迭代点函数值之比小于等于收敛率）：</p><script type="math/tex; mode=display">\frac{\lambda _{max}(\mathbf Q)-\lambda _{min}(\mathbf Q)}{\lambda _{max}(\mathbf Q)}</script><blockquote><p>注意与收敛阶的区分，收敛阶是迭代点</p></blockquote><p>定理8.3 P101：<strong>固定步长梯度法</strong>迭代收敛，当且仅当</p><script type="math/tex; mode=display">0<\alpha<\frac 2 {\lambda_{max}(Q)}</script><h2 id="收敛阶"><a href="#收敛阶" class="headerlink" title="收敛阶"></a>收敛阶</h2><p><img src="image-20210623205907085.png" alt="image-20210623205907085"></p><h2 id="牛顿法！"><a href="#牛顿法！" class="headerlink" title="牛顿法！"></a>牛顿法！</h2><p>用二阶泰勒展开来近似目标函数f(x)，根据一阶必要条件可得迭代公式</p><script type="math/tex; mode=display">x^{(k+1)}=x^{(k)}-\textbf F(x^{(k)})^{-1}g^{(k)}</script><p>牛顿法步骤</p><ol><li>先解方程求迭代方向</li></ol><script type="math/tex; mode=display">\textbf F(x^{(k)})d^{(k)}=-g^{(k)}=-\nabla f(x^{(k)})</script><ol><li>然后</li></ol><script type="math/tex; mode=display">x^{(k+1)}=x^{(k)}+d^{(k)}</script><ul><li>黑塞矩阵非正定时搜索方向不一定是函数值下降方向</li><li>就算正定，某些初始点远离极小点时也可能不下降</li></ul><h3 id="牛顿法求解非线性最小二乘问题"><a href="#牛顿法求解非线性最小二乘问题" class="headerlink" title="牛顿法求解非线性最小二乘问题"></a>牛顿法求解非线性最小二乘问题</h3><p><img src="image-20210623112458358.png" alt="image-20210623112458358"></p><p><img src="image-20210623112545881.png" alt="image-20210623112545881"><img src="image-20210623112606088.png" alt="image-20210623112606088"></p><h3 id="牛顿法收敛性"><a href="#牛顿法收敛性" class="headerlink" title="牛顿法收敛性"></a>牛顿法收敛性</h3><p>牛顿法任意初始点求解二次型，<strong>收敛阶</strong>为无穷大</p><p><img src="image-20210622152551045.png" alt="image-20210622152551045"></p><p>初始点靠近极值点时，牛顿法有非常好的收敛性；否则不一定收敛。</p><h3 id="修正："><a href="#修正：" class="headerlink" title="修正："></a>修正：</h3><ul><li>阻尼/带步长牛顿法（每次都在方向上进行一次一维搜索来确定步长</li><li>Levenberg-Marquardt 修正（只要参数足够大，总能保持正定矩阵</li></ul><blockquote><p>最速下降法、牛顿法用于求解无约束优化问题。</p></blockquote><h2 id="拟牛顿法"><a href="#拟牛顿法" class="headerlink" title="拟牛顿法"></a>拟牛顿法</h2><p>在拟牛顿法中构造黑塞矩阵的近似矩阵H时，只需要用到目标函数值和梯度，不涉及任何黑塞矩阵和线性方程求解的计算工作。</p><p><em>以下各种近似，我们都假定目标函数为二次型函数，使得黑塞矩阵为常数矩阵Q，与x的取值无关。</em></p><p>因为二次型的黑塞矩阵Q对于任意k满足</p><script type="math/tex; mode=display">\Delta g^{(k)} = Q \Delta x^{(k)}</script><p>我们希望第n次迭代中的近似矩阵Hn能够满足</p><script type="math/tex; mode=display">\textbf H_n \Delta g^{(k)} =\Delta x^{(k)}\quad (0 \le k \le n-1)</script><p>这样就可以用近似矩阵（并不唯一）替换牛顿法迭代公式里的黑塞矩阵的逆。<strong>能在n次迭代内完成n维二次型问题的求解。</strong><br><img src="image-20210623115237869.png" alt="image-20210623115237869"></p><h3 id="秩1算法"><a href="#秩1算法" class="headerlink" title="秩1算法"></a>秩1算法</h3><p>秩1矫正公式中，Hk到Hk+1迭代方向是秩1矩阵</p><script type="math/tex; mode=display">H_{k+1} = H_k + a_{k}z^{(k)}z^{(k)\top}</script><p>H0可以取为单位阵I，那么d0也是负梯度方向<br>拟牛顿法也是一种共轭方向法，所以$\alpha_k$计算公式依然为</p><script type="math/tex; mode=display">\alpha_k=-\frac{(g^k)^\top d^k}{(d^k)^\top Qd^k}</script><p><img src="image-20210520141649994.png" alt="image-20210520141649994"></p><p>秩1算法缺点：</p><ul><li>首先，该算法产生的矩阵 Hk+1 并不一定是正定的，导致d(k+l) 可能不是下降方向。即使对于二次型问题这种情况也有可能发生。<br>（秩2算法DFP可以避免这个问题）</li><li>如果迭代项分母接近于0，在计算 Hk+1 时可能会面临一些计算上的困难。</li></ul><h3 id="DFP算法"><a href="#DFP算法" class="headerlink" title="DFP算法"></a>DFP算法</h3><p>只要Hk正定，Hk+1正定。</p><p>也是共轭方向法</p><p>缺点：当处理一些规模较大的非二次型问题时， DFP 有时会被”卡住”，即迭代无法继续开展。造成这一现象的原因在于矩阵 Hk接近成为奇异矩阵了。</p><h3 id="BFGS算法"><a href="#BFGS算法" class="headerlink" title="BFGS算法"></a>BFGS算法</h3><p>类似DFP公式，但去近似黑塞矩阵本身。<br>最后迭代使用近似矩阵Bk+1的逆。</p><p>求Bk+1的逆，需要用两次Sherman-Morrison公式。</p><h2 id="共轭方向法"><a href="#共轭方向法" class="headerlink" title="共轭方向法"></a>共轭方向法</h2><p>A是实对称正定矩阵</p><script type="math/tex; mode=display">\alpha^\top A\beta=0</script><p>则这两个向量共轭</p><blockquote><p>核心思想：在空间中每个方向只走一次，所有搜索方向正交</p><p>拟牛顿法也是一种共轭方向法（书p135定理11.1）</p></blockquote><p>共轭方向法算法最耗时的是找二次型矩阵Q的所有共轭向量，复杂度O(n^3)<br>题目一般会给定一组Q共轭方向。<br>二次型目标函数有显式的精确步长</p><script type="math/tex; mode=display">\alpha_k=-\frac{(g^k)^\top d^k}{(d^k)^\top Qd^k}</script><p>任意初始点，基本的共轭方向算法都能在n次迭代之内收敛到唯一的全局极小点，因为只要步长（共轭向量的线性系数）正确，初始点+n个共轭向量能表示处在空间内任何位置的全局极小点。【书上p121有证明，最后公式Q(x*-xk)=-gk利用了二次型一阶导数性质】</p><p>共轭方向算法都有性质:</p><script type="math/tex; mode=display">g^{(k+1)\top}d^{(i)}=0\qquad(i\le k)</script><p>每个新迭代点梯度一定正交于之前所有共轭方向所在子空间</p><h2 id="共轭梯度法！"><a href="#共轭梯度法！" class="headerlink" title="共轭梯度法！"></a>共轭梯度法！</h2><p>不需要先用施密特方法找所有共轭方向，可以用-g(k+1)和d(k)迭代计算xk+1点处搜索方向（也就是下一个共轭方向d(k+1)）</p><p><img src="image-20210519102120451.png" alt="image-20210519102120451"></p><p>$\alpha_k$是x点迭代步长，$\beta_k$是共轭方向迭代步长。两者迭代公式推导过程：</p><ol><li>每个共轭方向上行动步长$\alpha_k$到一维搜索得到的极小点，有性质(书P123)。行动步长$\alpha_k$和最速下降法一致，dk换成gk。</li></ol><script type="math/tex; mode=display">g^{(k+1)\top}d^{(k)}=0\\所以需要\alpha_k = -\frac{g^{(k)\top}d^{(k)}}{d^{(k)\top}Qd^{(k)}}</script><ol><li>将共轭定义带入迭代公式</li></ol><script type="math/tex; mode=display">\begin{cases}d^{(k+1)\top}Qd^{(k)} = 0\\d^{(k+1)} = -g^{(k+1)}+\beta_kd^{(k)}\end{cases}\\所以得到\beta_k = \frac{g^{(k+1)\top}Qd^{(k)}}{d^{(k)\top}Qd^{(k)}}</script><h1 id="线性规划"><a href="#线性规划" class="headerlink" title="线性规划"></a>线性规划</h1><h2 id="标准型"><a href="#标准型" class="headerlink" title="标准型"></a>标准型</h2><script type="math/tex; mode=display">\begin{array}lmin\quad &\mathbf {c^\top x}\\s.t. \quad &\bf Ax=b\\&x\ge 0\end{array}</script><blockquote><p>书P220说明如何把不等式约束转换成等式</p><p>不等式蕴含几个线性无关基之间的约束关系，引入剩余变量/松弛变量xi（其实也是这几个线性无关基的线性组合）来量化这种约束要求，也就是对原本的x1向量<strong>升维</strong>；不等式本质是一个半空间，将这个半空间的限制放到增加的那一维的xi&gt;=0里</p></blockquote><h2 id="基本解"><a href="#基本解" class="headerlink" title="基本解"></a>基本解</h2><p>[A,b]通过初等行变换，得到不同的列单位向量作为基向量。再根据变换后的增广矩阵解方程则得到基本解。<br>基本解只有rank(A)个非0分量。<img src="image-20210624102010484.png" alt="image-20210624102010484"></p><h2 id="线性规划基本定理"><a href="#线性规划基本定理" class="headerlink" title="线性规划基本定理"></a>线性规划基本定理</h2><ol><li>如果存在可行解，那么一定存在基本可行解。</li><li>如果存在最优可行解，那么一定存在最优基本可行解。</li></ol><p>约束集的极点集合就是基本可行解的集合。</p><blockquote><p>参考<a href="https://mp.weixin.qq.com/s/N1jCOtfvLtYinrm0YtWi6Q">文章</a>，我理解<br>一个凸集就是由极点定义的；<br>而一个向量空间本质上是由线性无关基向量定义的。</p><p>基本可行解是所有约束条件的线性组合系数，来表示空间。它要求非基向量的系数为0(基本解)，且是基向量非负的线性组合（可行解），就像是依靠最少的线性无关基向量能走到的满足约束空间的尽头？</p><p>假设A为m*n维，rank = m &lt;n，我们的所有xb就在这个由m个线性无关基向量定义的m维空间里，这个Rm空间与Rn空间中Ax=b解空间相交，交点在Rn的坐标就是[xb,0]，也就是基本可行解。</p><p>基本可行解对应极点，不同基本可行解线性组合得到解空间所有点；直观上与对极点进行凸组合得到凸集内点非常相像。</p></blockquote><h2 id="单纯形法"><a href="#单纯形法" class="headerlink" title="单纯形法"></a>单纯形法</h2><p>利用增广矩阵规范性的枢轴变换，从一个基本可行解切换到另一个基本可行解，检验该基本可行解是否为最优解。</p><h3 id="检验数"><a href="#检验数" class="headerlink" title="检验数"></a>检验数</h3><p>基变量检验数等于0；<br>非基变量检验数$r_q$，用到c第q项，c前m项，非基变量对应那列y</p><script type="math/tex; mode=display">r_q=c_q-z_q \\z_q = c_1y_{1q}+\cdots+c_my_{mq}</script><p>若该基本可行解所有非基变量检验数大于等于0，则为最优解。<br>否则，选择检验数最小的那个列向量作为进基向量。</p><h3 id="枢轴变换"><a href="#枢轴变换" class="headerlink" title="枢轴变换"></a>枢轴变换</h3><p>选择离基向量$\alpha_p$</p><script type="math/tex; mode=display">p = \text{arg min}\{ y_{i0}/y_{iq}:y_{iq}\gt 0\}   \quad(计算中其实y_{i0} = b_i)</script><p>$\alpha_q$进基，$\alpha_p$（第p列的基向量）离基。以(p,q)元素进行枢轴变换</p><script type="math/tex; mode=display">y_{ij}'= y_{ij} - \frac{y_{pj}}{y_{pq}}y_{iq} ,\quad i\ne p,m\lt j \le n\\y_{pj}'=\frac {y_{pj}} {y_{pq}}</script><h3 id="矩阵形式"><a href="#矩阵形式" class="headerlink" title="矩阵形式"></a>矩阵形式</h3><p>价值系数加在[A,b]下方，初等行变换为关于基B的标准单纯形表。</p><script type="math/tex; mode=display">\begin{bmatrix}A&b\\c^\top&0\end{bmatrix}\Leftrightarrow\begin{bmatrix}I_m&B^{-1}D&B^{-1}b\\0^\top& c_D^\top-c_B^\top B^{-1}D& -c_B^\top B^{-1}b\end{bmatrix}</script><p>更新单纯形表的过程中能同时得到关于基B的基变量$B^{-1}b$和非基变量检验数$c_D^\top-c_B^\top B^{-1}D$，以及当前基本可行解下目标函数值取负的结果$-c_B^\top B^{-1}b$</p><h3 id="两阶段单纯形法"><a href="#两阶段单纯形法" class="headerlink" title="两阶段单纯形法"></a>两阶段单纯形法</h3><p>用于原问题没有明显的基本可行解的时候。</p><blockquote><p>定理：原线性规划问题存在基本可行解，当且仅当相应的人工问题存在一个使目标函数值为0的最优解</p></blockquote><p>在第1阶段，引入人工变量，构造人工目标函数（人工变量的和最小），求其最优解。<br><em>相当于指定用人工的基，有固定的初始基本可行解[0;b]。</em></p><p>在第2阶段，将第1阶段得到的最优解作为初始基本可行解，采用单纯形法求解原问题。<br><em>删掉人工列，最后一行改为原问题的价值系数，再变换成标准单纯形表</em></p><h1 id="对偶"><a href="#对偶" class="headerlink" title="对偶"></a>对偶</h1><h2 id="对偶线性规划"><a href="#对偶线性规划" class="headerlink" title="对偶线性规划"></a>对偶线性规划</h2><p>任意形式的线性规划问题都存在对偶问题。</p><p>对偶问题的对偶是原问题</p><h3 id="对称形式的对偶关系"><a href="#对称形式的对偶关系" class="headerlink" title="对称形式的对偶关系"></a>对称形式的对偶关系</h3><p>原问题中约束Ax&gt;=b</p><p>对偶问题要求$\lambda\ge 0$，与A点积&lt;=c</p><h3 id="非对称形式的对偶关系"><a href="#非对称形式的对偶关系" class="headerlink" title="非对称形式的对偶关系"></a>非对称形式的对偶关系</h3><p>原问题中约束Ax=b，为标准型</p><p>对偶问题不要求$\lambda$非负</p><p><img src="image-20210625151233484.png" alt="image-20210625151233484"></p><h2 id="弱对偶定理"><a href="#弱对偶定理" class="headerlink" title="弱对偶定理"></a>弱对偶定理</h2><p>假设$x,\lambda$分别是线性规划的原问题和对偶问题(对称形式或非对称形式)的可行解，则$c^\top x\ge\lambda^\top b$。</p><h2 id="强对偶定理"><a href="#强对偶定理" class="headerlink" title="强对偶定理"></a>强对偶定理</h2><p>假设$x,\lambda$分别是线性规划的原问题和对偶问题(对称形式或非对称形式)的可行解，若$c^\top x=\lambda^\top b$，则它们是各自问题的最优解。</p><h1 id="整数规划"><a href="#整数规划" class="headerlink" title="整数规划"></a>整数规划</h1><p>若A是幺模矩阵，则Ax=b的所有基本解是整数解。</p><p>单纯形法，只要基本可行解对应基矩阵B满足det(B)=1，即为整数解</p><h2 id="割平面法"><a href="#割平面法" class="headerlink" title="割平面法"></a>割平面法</h2><p>通过增加约束条件，把由单纯形法得到的非整数解从可行集中去除掉。新增的约束条件不去除可行集中的整数解。该方法通过不断增加约束条件，直到得到一个整数最优解。</p><h2 id="分支定界法"><a href="#分支定界法" class="headerlink" title="分支定界法"></a>分支定界法</h2><p>整数规划松弛为普通的线性规划标准型，若最优解有分量不是整数，则分成两个整数规划。</p><h1 id="等式约束优化"><a href="#等式约束优化" class="headerlink" title="等式约束优化"></a>等式约束优化</h1><h2 id="概念铺垫"><a href="#概念铺垫" class="headerlink" title="概念铺垫"></a>概念铺垫</h2><h3 id="正则点"><a href="#正则点" class="headerlink" title="正则点"></a>正则点</h3><p>该点满足所有约束函数等于0，且所有约束函数的梯度都线性无关</p><h3 id="维度"><a href="#维度" class="headerlink" title="维度"></a>维度</h3><p>曲面维度n-m，n是空间维度，m是约束方程组的秩</p><h3 id="切空间、法空间"><a href="#切空间、法空间" class="headerlink" title="切空间、法空间"></a>切空间、法空间</h3><p>切空间过原点</p><script type="math/tex; mode=display">T(\mathbf x^*) = \{\mathbf y:D\mathbf {h(x^*)y} = 0\}</script><p>切平面过x*</p><script type="math/tex; mode=display">TP(\mathbf x^*)  = T(\mathbf x^*)+x^*= \{\mathbf {x+x^*:x}\in T(\mathbf x^*)\}</script><p>法线空间就是约束函数梯度张成子空间，过原点</p><script type="math/tex; mode=display">N(\mathbf x^*) = \mathcal R(D\mathbf {h(x^*)^\top})</script><p>法平面过x*</p><script type="math/tex; mode=display">NP(\mathbf x^*)  = N(\mathbf x^*)+x^*</script><h2 id="拉格朗日条件"><a href="#拉格朗日条件" class="headerlink" title="拉格朗日条件"></a>拉格朗日条件</h2><p>优化问题</p><script type="math/tex; mode=display">\text{min}\quad f(x)\\ s.t.\quad h(x)=0</script><p>因为x*也是约束路径（h(x)=0的等值线）上的极小点，所以该处目标函数梯度与约束路径（满足约束函数为0）的参数方程一阶导正交；<br>又因为该点约束函数h(x)梯度与该约束路径参数方程一阶导（等值线该点处切线）正交；所以得到这两个梯度一定平行，线性相关。</p><blockquote><p>可以理解为：极小点处的目标函数梯度是多个约束函数梯度的线性组合。</p></blockquote><p>得到拉格朗日定理：<br>上述优化问题的局部极小点$x^<em>$若为**</em>正则点<em>**，必存在拉格朗日乘子向量$\lambda^</em>$使得</p><script type="math/tex; mode=display">Df(\textbf x^*)+\lambda^{*\top }Dh(\textbf x^*)=0^\top</script><p>其实这个拉格朗日条件只是极小点一阶必要条件。</p><h2 id="二阶必要条件-1"><a href="#二阶必要条件-1" class="headerlink" title="二阶必要条件"></a>二阶必要条件</h2><ol><li><p>满足拉格朗日条件</p></li><li><p>x*切空间内任意点y，有</p><script type="math/tex; mode=display">y^\top \textbf L(x^*,\lambda^*)y\ge0</script></li></ol><h2 id="二阶充分条件-1"><a href="#二阶充分条件-1" class="headerlink" title="二阶充分条件"></a>二阶充分条件</h2><ol><li><p>满足拉格朗日条件</p></li><li><p>x*切空间内任意不为0的点y，有</p><script type="math/tex; mode=display">y^\top \textbf L(x^*,\lambda^*)y\gt0</script></li></ol><p>则x*为严格局部极小点</p><h2 id="线性约束二次型极小化"><a href="#线性约束二次型极小化" class="headerlink" title="线性约束二次型极小化"></a>线性约束二次型极小化</h2><p><img src="image-20210625214639143.png" alt="image-20210625214639143"></p><h1 id="不等式约束优化"><a href="#不等式约束优化" class="headerlink" title="不等式约束优化"></a>不等式约束优化</h1><p>约束条件里的不等式分为【积极/起作用约束、非积极/不起作用约束】</p><h2 id="KKT条件-重要！"><a href="#KKT条件-重要！" class="headerlink" title="KKT条件[重要！]"></a>KKT条件[重要！]</h2><p>对于最小化问题</p><script type="math/tex; mode=display">\begin{array}\text{min}\quad &f(x)\\s.t.\quad&\textbf h(\textbf x)=\textbf 0\\&\textbf g(\textbf x)\le \textbf 0\\\end{array}</script><p>若x<em>是<em>*正则点</em></em>和局部极小点，存在以下性质</p><ol><li><p>原始可行性（满足所有约束）</p><script type="math/tex; mode=display">\textbf h(\textbf x^*)=\textbf 0\\\textbf g(\textbf x^*)\le \textbf 0\\</script></li><li><p>对偶可行性（不等式约束的KKT乘子非负）</p><script type="math/tex; mode=display">\bf{\mu^*}\ge \textbf 0\\</script></li><li><p>原始最优性（拉格朗日函数对x求导等于0）</p><script type="math/tex; mode=display">Df(\textbf x^*)+\lambda^{*\top }D\textbf h(\textbf x^*)+\mu^{*\top }D\textbf g(\textbf x^*)=\bf 0^\top</script></li><li><p>互补松弛性（非积极约束处乘子必为0）</p><script type="math/tex; mode=display">\mu^{*\top }\textbf g(\textbf x^*)=\bf 0</script></li></ol><p>解KKT条件时，可以按照KKT乘子大于0（积极约束），等于0（非积极约束）进行分情况讨论。</p><p>KKT条件也只是一阶必要条件，是拉格朗日条件在不等式约束情况下的拓展。</p><h2 id="二阶必要条件-2"><a href="#二阶必要条件-2" class="headerlink" title="二阶必要条件"></a>二阶必要条件</h2><ol><li><p>满足KKT条件</p></li><li><p>x*切空间（应该正交于所有此处等式约束h(x)和起作用约束gi(x)的梯度）内任意点y，有</p><script type="math/tex; mode=display">y^\top \textbf L(x^*,\lambda^*,\mu^*)y\ge0</script></li></ol><h2 id="二阶充分条件-2"><a href="#二阶充分条件-2" class="headerlink" title="二阶充分条件"></a>二阶充分条件</h2><ol><li><p>满足KKT条件</p></li><li><p>$\widetilde T(x^<em>,\mu^</em>)$内任意不为0的点y，有</p><script type="math/tex; mode=display">y^\top \textbf L(x^*,\lambda^*,\mu^*)y\gt0</script><p>该空间正交于等式约束的梯度和所有积极且起作用约束（mu&gt;0，意思是这个约束真的有限制作用）的梯度<br><img src="image-20210626141924234.png" alt="image-20210626141924234"></p></li></ol><p>则x*为严格局部极小点</p><h1 id="凸函数与凸优化"><a href="#凸函数与凸优化" class="headerlink" title="凸函数与凸优化"></a>凸函数与凸优化</h1><p>凸函数的“凸”来源于定义，该函数图形上方点集为凸集。</p><p>凸函数定义域必是凸集。</p><p>凸函数当且仅当定义域内任意两点x,y满足</p><script type="math/tex; mode=display">f(\alpha x +(1-\alpha)y)\le\alpha f(x) +(1-\alpha)f(y)  \qquad \forall \alpha \in (0,1)</script><p>严格凸函数——不等式严格小于</p><p>强凸函数——不等式右侧加入二次项</p><p><img src="image-20210626163618322.png" alt="image-20210626163618322"></p><p>凸集上凸函数的全局最小点=局部极小点</p><p><img src="image-20210626163548768.png" alt="image-20210626163548768"></p><h2 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h2><p>凸集上的凸函数，拉格朗日条件就是全局极小点的充分条件。</p><h1 id="约束优化迭代求解"><a href="#约束优化迭代求解" class="headerlink" title="约束优化迭代求解"></a>约束优化迭代求解</h1><h2 id="投影方法"><a href="#投影方法" class="headerlink" title="投影方法"></a>投影方法</h2><h2 id="拉格朗日法"><a href="#拉格朗日法" class="headerlink" title="拉格朗日法"></a>拉格朗日法</h2><h3 id="等式约束"><a href="#等式约束" class="headerlink" title="等式约束"></a>等式约束</h3><p>迭代中：</p><ul><li>用L函数梯度更新x_k（梯度算法求拉格朗日函数关于x的极小化）</li><li>用h函数更新lambda_k（梯度算法求拉格朗日函数关于lambda的极大化）</li></ul><h3 id="不等式约束"><a href="#不等式约束" class="headerlink" title="不等式约束"></a>不等式约束</h3><p><img src="image-20210626170319903.png" alt="image-20210626170319903"></p><p>迭代中：</p><ul><li>用L函数梯度更新x_k（梯度算法求拉格朗日函数关于x的极小化）</li><li>用g函数更新mu_k并保证非负（梯度算法求拉格朗日函数关于mu的极大化）</li></ul><h2 id="罚函数法"><a href="#罚函数法" class="headerlink" title="罚函数法"></a>罚函数法</h2><p>核心思想：约束条件变成惩罚项放入目标函数，约束优化转化成无约束优化问题。</p><h1 id="多目标优化"><a href="#多目标优化" class="headerlink" title="多目标优化"></a>多目标优化</h1><p>了解即可</p><h2 id="帕累托解"><a href="#帕累托解" class="headerlink" title="帕累托解"></a>帕累托解</h2><p>帕累托解意味着不存在一个可行的决策变量x能够使得在某些目标函数减少的同时不会导致至少一个其他目标函数增加。</p><p>帕累托前沿生成算法</p><h2 id="考虑转化为单目标，但有各种缺点"><a href="#考虑转化为单目标，但有各种缺点" class="headerlink" title="考虑转化为单目标，但有各种缺点"></a>考虑转化为单目标，但有各种缺点</h2><ol><li>多个目标函数凸组合</li><li>目标函数分量中最大的那个作为目标</li><li>若目标函数分量都非负，取目标函数向量p范数作为目标</li><li>一个分量作为目标，其他作为约束条件</li></ol>]]></content>
    
    
    <categories>
      
      <category>知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>复习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>读《安娜卡列尼娜》</title>
    <link href="/blogsite/2021/06/19/%E5%AE%89%E5%A8%9C%E5%8D%A1%E5%88%97%E5%B0%BC%E5%A8%9C/"/>
    <url>/blogsite/2021/06/19/%E5%AE%89%E5%A8%9C%E5%8D%A1%E5%88%97%E5%B0%BC%E5%A8%9C/</url>
    
    <content type="html"><![CDATA[<blockquote><p>幸福的家庭都是相似的，不幸的家庭各有各的不幸。</p></blockquote><p>婚姻和家庭是什么？ 我曾以为是，两个人的相互支持相濡以沫。 但实际上，它更是两个家族的利益连结、封建时代财产地位的传承仪式、一条老朽的用于捆绑责任的绳子。它与爱情无关，却是为因为爱情而漂浮上天的两人设置的安全网，没有它，摔在地上的悲剧只是早晚而已。</p><span id="more"></span><p>人类的情感如此丰富和微妙，托尔斯泰竟然能将其精髓的那些一闪而过的时刻逮住并准确地加以描绘。我真的还从没意识到文字能构筑如此微妙难以言明又让我感觉到美的情感体验，第六部四五两章这段瓦莲卡和谢尔盖的支线故事<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="http://www.dushu369.com/waiguomingzhu/HTML/93255.html">[1]</span></a></sup>，当时看完我击节赞叹，托翁之笔妙也！<br>还有恋爱期间的小鹿乱撞眉目传情、婚姻之外的动心、婚姻之内的幸福与矛盾、那个时代男人与女人对待婚姻的态度——男人认为婚姻是生活的一部分而不会是全部和一份责任，但男人总希望有外界的自由生活，有人忙事业有人玩风流；女人则希望所爱的男人能够一直陪伴在身边，过量的爱会逐渐衍化成嫉妒，这爱情的杀手。</p><blockquote><p>PS：在一个月之后，我偶然间读完了歌德很出名的一本小说《少年维特之烦恼》，突然发现，原来安娜最后自杀的选择无独有偶。维特同样也遇到了爱情的苦恼，如同麻花绳一样打了结。他的爱情太过浓烈，这就像是绞刑架上结实的绳子，他越挣扎就在他的脖子上缠的越紧。那难道炽烈的爱得不到回应终局只有走向死亡吗，是他们被情感所支配吗？没有体验那样澎湃情感的人又怎么可以站在高地上妄加评判呢？<br>唉，特别喜欢歌德自己的这首十四行诗。<br><img src="Sonnet.jpg" alt=""></p></blockquote><p>除了最细微的那些感情，在革命前夜的沙俄的广阔的生活画卷，也被托尔斯泰以大量人物——主要包括官僚、贵族、学者、地主、农民——的思想言行泼洒而成。举重若轻，只不过代价是极大的文本量和让人昏昏欲睡的细节轰炸。第27章里有非常有意思的三个想法不同的地主对话，就像是某种俄国农村社会考察报告，切入问题的各个角度都清晰而生动。</p><p>这就是一代文豪的实力，可惜他所处的那个时代与我的共鸣太少了，看他的作品就像看着一座残破的宫殿，但仍能从断壁残垣中对当年宫殿宏伟而精致感到震撼。</p><p>不过，虽然文学和艺术上成就辉煌，但托尔斯泰以男主角列文的口吻大量倾吐的他自己的哲学观点依然令我感到幼稚和无趣。尤其是全书最后一节的后记里，基本充斥着与主线剧情完全无关的哲学思想的自我表达，而不是对这个悲剧结局的进一步阐述，这让我略显失望。</p><p>看到列宁对托尔斯泰的评价，可谓一针见血： </p><blockquote><p>托尔斯泰以巨大的力量和真诚鞭笞了统治阶级，十分鲜明地揭露了现代社会所借以维持的一切制度——教会、法庭、军国主义、“合法”婚姻、资产阶级科学——的内在的虚伪。 他说的话是代表整个俄罗斯千百万人民群众的，人民群众已经憎恨现代生活的主宰者，但是还没有达到去同他们进行自觉的、一贯的、坚持到底的、不可调和的斗争的程度。</p><p>托尔斯泰逝世了，革命前的俄国也已成为过去，它的软弱和无力已被这位天才艺术家表现在他的哲学里，描绘在他的作品中。但是在他的遗产里，还有着没有成为过去而是属于未来的东西。俄国无产阶级正在接受这份遗产，研究这份遗产。</p><p>俄国无产阶级要向被剥削劳动群众阐明托尔斯泰对国家、教会、土地私有制的批判的意义，——这样做不是为了让群众局限于自我修身和对圣洁生活的憧憬，而是让他们振奋起来对沙皇君主制和地主土地占有制进行新的打击，这种君主制和土地占有制在 1905年只是受了些轻伤，必须把它们消灭干净。</p><p>俄国无产阶级要向群众阐明托尔斯泰对资本主义的批判，——这样做不是为了让群众局限于诅咒资本和金钱势力，而是<strong>让他们学会在自己的生活和斗争中处处依靠资本主义的技术成就和社会成就，学会把自己团结成一支社会主义战士的百万大军，去推翻资本主义，去创造一个人民不再贫困、人不再剥削人的新社会。</strong></p></blockquote><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="http://www.dushu369.com/waiguomingzhu/HTML/93255.html">http://www.dushu369.com/waiguomingzhu/HTML/93255.html</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>读后感</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感悟</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>KL散度=交叉熵=最大似然估计</title>
    <link href="/blogsite/2021/06/12/KL%E6%95%A3%E5%BA%A6%E4%B8%8E%E4%BA%A4%E5%8F%89%E7%86%B5/"/>
    <url>/blogsite/2021/06/12/KL%E6%95%A3%E5%BA%A6%E4%B8%8E%E4%BA%A4%E5%8F%89%E7%86%B5/</url>
    
    <content type="html"><![CDATA[<p>损失函数中常用到的KL散度、交叉熵，与最大似然估计，本质上是一样的啊！<br>就是希望我预测出来的与我的标注的概率分布越接近越好。</p><span id="more"></span><p>比较熵、KL散度和交叉熵的数学定义会发现：<br><code>KL散度 = 交叉熵 - 熵</code></p><h2 id="从编码的角度理解交叉熵"><a href="#从编码的角度理解交叉熵" class="headerlink" title="从编码的角度理解交叉熵"></a>从编码的角度理解交叉熵</h2><p><strong>熵</strong>的意义是：对一个随机变量A编码所需要的<strong>最小字节数</strong>，也就是使用哈夫曼编码根据A的概率分布对A进行编码所需要的字节数；</p><p><strong>KL散度</strong>的意义是：使用随机变量B的最优编码方式对随机变量A编码所需要的<strong>额外字节数</strong>，具体来说就是使用哈夫曼编码却根据B的概率分布对A进行编码，所需要的编码数比A编码所需要的最小字节数多的数量；</p><p><strong>交叉熵</strong>的意义是：使用随机变量B的最优编码方式对随机变量A编码所需要的<strong>字节数</strong>，具体来说就是使用哈夫曼编码却根据B的概率分布对A进行编码，所需要的编码数。</p><p>在损失函数中，ground-truth当做随机变量A，这个熵是常数。</p><p>最大似然估计的公式与这种情况下的交叉熵相同。</p>]]></content>
    
    
    <categories>
      
      <category>知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感悟</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自定义Fluid主题</title>
    <link href="/blogsite/2021/06/06/FluidModification/"/>
    <url>/blogsite/2021/06/06/FluidModification/</url>
    
    <content type="html"><![CDATA[<p>现在的根目录下<code>_config.fluid.yml</code>才是主题配置文件，覆盖themes/fluid中的配置文件。记得主题大版本更新时需要注意config内容是否随之更改。</p><h1 id="对Fluid主题的修改"><a href="#对Fluid主题的修改" class="headerlink" title="对Fluid主题的修改"></a>对Fluid主题的修改</h1><p><strong>强烈推荐博客设置<code>updated_option: &#39;date&#39;</code></strong>。否则下列修改启用后如果进行版本管理（如git pull)会导致涉及的所有未设置updated字段的博文全都自动显示updated时间为文件修改时间（如git pull时间），而非正常情况：若无updated字段/updated时间不晚于date（按天比较），则不显示updated时间。</p><p>改动目标：</p><ol><li>首页的每篇文章除了创建时间之外还能显示文档更新时间。</li><li>点进每篇文章之后都会显示创建时间和更新时间。</li></ol><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p>主题配置config文件中post_meta加入<code>updated: true</code></p><p>在主题的layout文件夹index.ejs内的<code>class=&quot;index-btm post-metas&quot;</code>的代码块加入下列代码，让index页面显示文章更新时间。</p><figure class="highlight applescript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs applescript">&lt;% <span class="hljs-keyword">if</span>(theme.index.post_meta.updated &amp;&amp; (post.updated &gt; post.<span class="hljs-built_in">date</span>)) &#123; %&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;post-meta mr-3&quot;</span>&gt;<br>    &lt;i <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;iconfont icon-pen&quot;</span>&gt;&lt;/i&gt;<br>    &lt;<span class="hljs-built_in">time</span> datetime=<span class="hljs-string">&quot;&lt;%= full_date(post.updated, &#x27;YYYY-MM-DD HH:mm&#x27;) %&gt;&quot;</span>&gt;<br>      &lt;%- <span class="hljs-built_in">date</span>(post.updated, config.date_format) %&gt;<br>    &lt;/<span class="hljs-built_in">time</span>&gt;<br>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;% &#125; %&gt;<br></code></pre></div></td></tr></table></figure><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p>主题配置config文件中post:meta:date部分加入updated选项。</p><figure class="highlight pgsql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs pgsql"># 文章日期，优先根据 front-matter 里 <span class="hljs-type">date</span> 字段，其次是 md 文件日期<br># updated_enable 显示 front-matter 里 updated 字段，如果updated晚于<span class="hljs-type">date</span>。如果<span class="hljs-keyword">enable</span>，则用两个单词区别两行日期。<br><span class="hljs-type">date</span>:<br>      <span class="hljs-keyword">enable</span>: <span class="hljs-keyword">true</span><br>      updated_enable: <span class="hljs-keyword">true</span><br>      date_updated_words: [<span class="hljs-string">&#x27;创建&#x27;</span>, <span class="hljs-string">&#x27;更新&#x27;</span>]<br>      # 格式参照 ISO<span class="hljs-number">-8601</span> 日期格式化<br>      # ISO<span class="hljs-number">-8601</span> <span class="hljs-type">date</span> <span class="hljs-keyword">format</span><br>      # See: http://momentjs.cn/docs/#/parsing/string-<span class="hljs-keyword">format</span>/<br>      <span class="hljs-keyword">format</span>: &quot;LL a&quot;<br></code></pre></div></td></tr></table></figure><p>找到_partial文件夹内post-meta.ejs，增加文章最近修改时间。显示updated时间时同时也要显示两个提示词来辨别两行日期，因为图标信息还是不够明确。</p><figure class="highlight reasonml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs reasonml">&lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;mt-1&quot;</span>&gt;<br>      &lt;span <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;post-meta&quot;</span>&gt;<br>        &lt;i <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;iconfont icon-date-fill&quot;</span> aria-hidden=<span class="hljs-string">&quot;true&quot;</span>&gt;&lt;/i&gt;<br>        &lt;time datetime=<span class="hljs-string">&quot;&lt;%= full_date(page.date, &#x27;YYYY-MM-DD HH:mm&#x27;) %&gt;&quot;</span> pubdate&gt;<br>          &lt;%= full<span class="hljs-constructor">_date(<span class="hljs-params">page</span>.<span class="hljs-params">date</span>, <span class="hljs-params">theme</span>.<span class="hljs-params">post</span>.<span class="hljs-params">meta</span>.<span class="hljs-params">date</span>.<span class="hljs-params">format</span>)</span> %&gt;<br>        &lt;/time&gt;<br>        &lt;% <span class="hljs-keyword">if</span> (theme.post.meta.date.updated_enable<span class="hljs-operator"> &amp;&amp; </span>(page.updated &gt; page.date)) &#123; %&gt;<br>          &lt;%- theme.post.meta.date.date_updated_words<span class="hljs-literal">[<span class="hljs-number">0</span>]</span> %&gt;<br>        &lt;% &#125; %&gt;<br>      &lt;/span&gt;<br>    &lt;/div&gt;<br>    <br>    &lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;mt-1&quot;</span>&gt;<br>      &lt;% <span class="hljs-keyword">if</span> (theme.post.meta.date.updated_enable<span class="hljs-operator"> &amp;&amp; </span>(page.updated &gt; page.date)) &#123; %&gt;<br>        &lt;span <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;post-meta&quot;</span>&gt;<br>          &lt;i <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;iconfont icon-pen&quot;</span> aria-hidden=<span class="hljs-string">&quot;true&quot;</span>&gt;&lt;/i&gt;<br>          &lt;time datetime=<span class="hljs-string">&quot;&lt;%= full_date(page.updated, &#x27;YYYY-MM-DD HH:mm&#x27;) %&gt;&quot;</span> pubdate&gt;<br>            &lt;%= full<span class="hljs-constructor">_date(<span class="hljs-params">page</span>.<span class="hljs-params">updated</span>, <span class="hljs-params">theme</span>.<span class="hljs-params">post</span>.<span class="hljs-params">meta</span>.<span class="hljs-params">date</span>.<span class="hljs-params">format</span>)</span> %&gt;<br>          &lt;/time&gt;<br>          &lt;%- theme.post.meta.date.date_updated_words<span class="hljs-literal">[<span class="hljs-number">1</span>]</span> %&gt;<br>        &lt;/span&gt;<br>      &lt;% &#125; %&gt;<br>    &lt;/div&gt;<br></code></pre></div></td></tr></table></figure><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="截屏2022-01-04 00.50.01.png" alt=""></p><p><img src="截屏2022-01-04 00.50.27.png" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>配置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>折腾</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>狂想/暗涌/呓语</title>
    <link href="/blogsite/2021/06/05/%E7%8B%82%E6%83%B3%E6%9A%97%E6%B6%8C%E5%91%93%E8%AF%AD/"/>
    <url>/blogsite/2021/06/05/%E7%8B%82%E6%83%B3%E6%9A%97%E6%B6%8C%E5%91%93%E8%AF%AD/</url>
    
    <content type="html"><![CDATA[<h2 id="狂想"><a href="#狂想" class="headerlink" title="狂想"></a>狂想</h2><p>将每一片云朵撕碎<br>沾点水把碎屑打湿<br>浇筑成我新的维纳斯<br>我要拥有你<br>要我拥抱你<br>使你成为我千年不朽的作品</p><p>我的激情我的欲望我的美好我的温柔<br>将你塞成一个可爱毛绒玩具<br>搂在怀里<br>藏在心里</p><h2 id="暗涌"><a href="#暗涌" class="headerlink" title="暗涌"></a>暗涌</h2><p>我不要你<br>像月光一样的白<br>像栀子花一样的白<br>像年前初雪一样的白</p><p>我要你<br>像我心头<br>刚剜出来<br>最鲜热的<br>血一样红</p><p>红到能将我的尸体点起火焰<br>为你的来临送上献祭</p><h2 id="呓语"><a href="#呓语" class="headerlink" title="呓语"></a>呓语</h2><p>我忏悔<br>我对你的三重亵渎</p><p>我尝试将你从圣洁的概念之所抽离赋予形体<br>我尝试将你最极致的美好用庸俗的文字代替<br>我尝试将你在还未到来的无尽时空偷偷放弃</p><p>所以我该赎罪<br>继续等你</p>]]></content>
    
    
    <categories>
      
      <category>文</category>
      
    </categories>
    
    
    <tags>
      
      <tag>诗</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CV知识</title>
    <link href="/blogsite/2021/06/05/CV%E7%9F%A5%E8%AF%86/"/>
    <url>/blogsite/2021/06/05/CV%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<h1 id="YOLO"><a href="#YOLO" class="headerlink" title="YOLO"></a>YOLO</h1><p>CV三任务：分类、目标检测、区域分割</p><p>YOLOv1-v5是目标检测经典算法</p><p>目标检测分两类：</p><ul><li>Region-free, one stage</li><li>Region-based, two stage</li></ul><p>YOLO是前者，一次读取图片同时完成网格划分和分类。</p><p>YOLOv1思想是通过每个grid预测(可n个)bounding box来标出目标，每个box的信息由box中间点在grid内的x/y坐标、box的框的高/宽、以及目标置信度 五个量组成。（划分grid不能太大，因为目前是设计为grid里面最多识别一个）<br>每个grid在预测出的bounding boxes中选择，输出该类别的one-hot 编码。<br>最后通过非极大值抑制去掉邻近同类grid中所有置信度较差的bounding box</p><p>这个bounding box预测过程是一种用卷积网络实现的回归问题，需要ground-truth标注</p><p>NMS(非极大值抑制)适用于多目标检测，尤其是不同bounding box重合时，可以抑制掉非中心的框，每个区域内最大置信度的box代表一个目标。NMS不需要提前知道有多少个目标。</p><h1 id="轻量化神经网络MobileNet"><a href="#轻量化神经网络MobileNet" class="headerlink" title="轻量化神经网络MobileNet"></a>轻量化神经网络MobileNet</h1><p>MobileNet大量使用深度可分离卷积，是常用于手机的轻量级网络。</p><h2 id="V1"><a href="#V1" class="headerlink" title="V1"></a>V1</h2><p>深度可分离卷积减少了参数量，减少了计算量。<a href="https://blog.csdn.net/flyfish1986/article/details/94006907">https://blog.csdn.net/flyfish1986/article/details/94006907</a></p><p>我理解的深度卷积Depthwise Conv是指沿着深度方向（不同通道）依次卷积。</p><p>MobileNetV1的网络结构如上图所示。首先是一个3x3的标准卷积，s2进行下采样。然后就是堆积深度可分离卷积，并且其中的部分深度卷积会利用s2进行下采样。然后采用平均池化层将feature变成1x1，根据预测类别大小加上全连接层，最后是一个softmax层。整个网络有28层，其中深度卷积层有13层。</p><h2 id="V2"><a href="#V2" class="headerlink" title="V2"></a>V2</h2><p>MobileNetV2：</p><p><img src="https://pic1.zhimg.com/80/v2-367f4025a0d45fc8e2769db6a119a530_1440w.jpg" alt="v2结构"></p><p>参考ResNet中三层残差神经元结构，但先PW升维，DW在6维度空间卷积来过滤数据，再PW降维，这就叫Inverted bottleneck</p><blockquote><p>ResNet的思想:output(x) = f(x)+x，学习f(x)=0能更快收敛、output里的x解决了梯度消失问题</p></blockquote><p>ReLU函数在低维会导致信息丢失问题，把最后一层低维状态的的ReLU换成线性激活函数。再加上shortcut，所以叫Inverted residual and linear bottleneck。</p><h2 id="V3"><a href="#V3" class="headerlink" title="V3"></a>V3</h2><p>MobileNet V2之后谷歌在18年7月发布了MnasNet，思想是针对特定平台（比如Pixel手机）进行网络架构的搜索，使模型运行的延迟更低。它在ImageNet分类任务上是MobileNetV2的1.5倍快，在COCO目标检测任务上也比MobileNet更快且更准。（但是这个搜索时长以天计数）</p><p>受到这个模型中的<a href="https://muzhan.blog.csdn.net/article/details/108523659">Squeeze And Excitation</a>部分（看做一种轻型的attention模块）的启发，MobileNet V3的block也将SE加在DWconv之后，与MnasNet不同的是它将sigmoid函数换成了hard swish激活函数</p><p>在用MnasNet和NetAdap搜索之后作者还主要对得到的网络进行了如下优化：</p><ol><li><p>原本最后几层的设计计算代价太高。原本在bottleneck和池化层之间还有一个1x1conv来生成高维特征；现在将这个1x1conv移到7x7池化层后面，在池化之后卷积的计算量从7x7倍减少到1倍。因为这个重要的特征生成层的计算量大大减小，那么前面的升维滤波的inverted bottleneck就多余了，直接删除。最后的结果就是在相似的准确度下减少了11%的Latency。<br><img src="https://img-blog.csdnimg.cn/20190606161948714.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDQ3NDcxOA==,size_16,color_FFFFFF,t_70" alt=""></p></li><li><p>V3的模型后半部分使用h-swish激活函数。</p><script type="math/tex; mode=display">\text {h-swish}[x]=x\frac{\text {ReLU6} (x+3)} 6</script><p>相较于普通的swish函数，用ReLU代替Sigmoid大大减少计算量，且由于使用ReLU6还减少了不同的sigmoid计算方法带来的数值误差，且这个可被当分段函数计算还减少了内存访问带来的延迟。<br><img src="https://img-blog.csdnimg.cn/2019060616204688.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDQ3NDcxOA==,size_16,color_FFFFFF,t_70" alt=""></p></li></ol><h1 id="Pytorch-CUDA安装注意事项"><a href="#Pytorch-CUDA安装注意事项" class="headerlink" title="Pytorch CUDA安装注意事项"></a>Pytorch CUDA安装注意事项</h1><p>为了GPU训练，折磨了很久，踩了一些坑。</p><ol><li>首先检查gpu支不支持cuda，一般起码是gtx1050以上</li><li>保证显卡驱动不是太低（高版本驱动可兼容低版本）</li><li>Conda安装合适的pytorch（pytorch只兼容conda里特定版本的cudatoolkit，因为这里的toolkit是编译好的dll库）</li><li>如果pip安装了torch需要uninstall，不然会重复导致冲突。(pip下载的包名好像是torch，conda下载的包名是pytorch）</li><li>cudnn库也要装</li><li>（可选）下载英伟达的cuda toolkit且安装。这是一个全面的安装包包含了许多其他工具，它安装出来的toolkit版本不重要。因为最终pytorch调用的库版本还是conda装的那个小运行库版本</li></ol>]]></content>
    
    
    <categories>
      
      <category>知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>恶之花 &amp; Night</title>
    <link href="/blogsite/2021/03/01/%E6%81%B6%E4%B9%8B%E8%8A%B1/"/>
    <url>/blogsite/2021/03/01/%E6%81%B6%E4%B9%8B%E8%8A%B1/</url>
    
    <content type="html"><![CDATA[<h1 id="恶之花"><a href="#恶之花" class="headerlink" title="恶之花"></a>恶之花</h1><p>爱是残忍的开膛手<br>她能剜出你的一只眼球<br>在喷涌的鲜血中兴奋颤抖<br>从老旧的刑具箱中取出寸许钢钉藏于背后<br>她用甘露般的柔舌搅动着你发不出声的呼救<br>蛛网上的小虫在无谓的苦痛期盼中放弃争斗<br>钉入另一只眼中 她终于使你第二次陷入盲目</p><p>死吧 快快死去 这是时间能赐予你唯一的恩泽</p><p>可是不死的诅咒将你从宁静中唤出<br>触及的十字架 只是棺材内部的纹路<br>你将永远得不到救赎<br>摇尾乞怜者归宿于淤泥与沙土</p><h1 id="Night"><a href="#Night" class="headerlink" title="Night"></a>Night</h1><p>Oh night,the mighty night<br>Blocked all my vision and sight<br>Though the winds blow and the moon washes,the dark soul can’t be clarified </p><p>Oh night,the solemn night<br>Quenched your inner bright fire<br>Shall fuel it with spirits but running out of whiskey,voyager sails without guide</p><p>March,2021</p>]]></content>
    
    
    <categories>
      
      <category>文</category>
      
    </categories>
    
    
    <tags>
      
      <tag>诗</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>21年杂绪</title>
    <link href="/blogsite/2021/01/08/21%E5%B9%B4%E6%9D%82%E7%BB%AA/"/>
    <url>/blogsite/2021/01/08/21%E5%B9%B4%E6%9D%82%E7%BB%AA/</url>
    
    <content type="html"><![CDATA[<p>很久没有写下语句了。每天的生活只需要单词和意识的碎片就能够驱动。那样的日子我觉得是浪费了的。</p><p>我只是想把支离破碎的思绪，在这个地方放一放。</p><span id="more"></span><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p>一人思。二人说。三人听。四人则泯然矣。</p><p>这算是我最近独处时间增长之后的一个领悟。Solitude creates Solid Thinking。</p><p>对外界的认知来自对自我的深究。没有独处时间则不会有深思时间。</p><p>在两个人的时候互相可以创造许多交流，但大部分都是各自想法的倾倒。因为理解另一个人真的需要花费许多理性、感性、耐心，而不是所有人都愿意付出这必要的代价去真正理解与共鸣你的想法。我会尽力去共鸣与我对话的人，但我也会累。如果我所输出的文字、语言的接受者愿意花上一些精力去共鸣去感受，不论是否能成功传达，我都需要送上我真挚的敬意，至少值得我为你喝上一杯。</p><p>三个人的时候，我已经很难在另外两个人的虎伺之下持续输出，大多数时我会被动的听取他人的言语，但在高密度信息下，你如果不想被定义为走神，那根本没有深度思考的时间和空间，如果能当时理解和共鸣就已经很不错了。</p><p>人再多时，我的大脑就已经不属于自己了，更多人的交流之中，我就像风暴中的一叶扁舟，我的想法我的言语出口之后犹如一颗石子悄无声息地被大浪吞没，泯然于众是最好的归宿，乌合之众。</p><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p>之前有句话，“你那么普通却那么自信”用来嘲笑普通男生。我从来不能理解这句话的普遍性。谁会真正的有自信呢。反省的燃料就是自信，如果谁不怀疑自己的自信，那他一定是被现实的烟雾所迷晕而放弃了自我审视。但是我并不害怕，因为我并不把自不自信当作自己的评判标准，我唯一的要求是不要活的拧巴，想做什么要做什么就去做什么，这样的我，起码不会被无意义的烦恼所左右。</p><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><p>当第四片雪花落在我亮起的手机屏幕上，我终于将注意力从5.2寸的牢笼脱离，看到纯白的一小片晶体在一瞬间从边缘向内塌陷和融解扩散，屏幕光线的色散令它的颜色从纯白却变为了透明的彩虹。这时候，我才意识到雪的来临。成都的初雪。挺美的，但我的感受是凄凉的美。不是旋转舞动的精灵，也不是晚春飘落的柳絮，它应是人间的那些碎梦与零落的想法。那些本应被人珍视和注意的情感和感觉，都在无声无息中落下并消解。雨雪风雷，只有雪，是寂静的。那些话外画外的倔强和美好，宁愿作为世界背景中的一点儿被正当地忽略。那些被人惊喜的接住和注视的雪花，都该是幸福的吧。</p><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><p>我在想，孤独到底是什么。</p><p>我曾经以为一个人呆着就叫孤独，但我后来发现与自己和解，活在当下自己快乐就不再孤独。</p><p>后来我以为当你有话想说不知道对谁人诉说的欲说还休就叫孤独，但我发现原来这个时候还可以把它抒发到文字里，就像是从月亮上带回土壤，纵笔力不逮只能管中窥豹，也总有着烛火般的希望将孤独的影子驱散。</p><p>以前我相信，每个人生来都是孤独的，一直到死，但我后来又发现，不是每个人都是完美主义者，抓不住天上的月亮，那享受它在水中的极为相似的倒影也不失为一种折衷的智慧。</p><p>这个问题，看来我还得想一阵子，吹吹更多的冷风，晒晒更多的太阳，见见更多的人，或许有天我会找到我的答案。</p><p><del>我想知道，你们的孤独是什么呢？</del></p><h2 id="5"><a href="#5" class="headerlink" title="5"></a>5</h2><p>躁动的尘土勒住奔跑者的呼吸<br>夕阳里那抹橙色的余晖像是疲惫者残余的荷尔蒙<br>欲望和现实交织可是故事被生活啪的一声拉断<br>我要飞翔！<br>上帝不予回应，于是我等待驳杂的黑的告慰<br>厌烦雨的喃喃，我寂静而炽烈地与自己相拥</p><p>——天气不错。5月27日。晴。</p><h2 id="8"><a href="#8" class="headerlink" title="8"></a>8</h2><p>这几天看考研、保研等等出路去向比较好的人的经历，深深感受到</p><p><strong>格局真的太重要了</strong></p><p>有的人从最开始就能看到未来<br>并且为自己立马规划一条可以落地执行的路线：</p><p>搜集信息、制定目标、规划路线、稳步执行</p><h2 id="9"><a href="#9" class="headerlink" title="9"></a>9</h2><p>明明查到图书馆有《霍乱时期的爱情》，书架上却不见其踪。<br><del>就像你知道爱情存在，但就是见不着它一样。</del></p><p>随手挑了一本，才发现胡里奥科塔萨尔的短篇小说《南方高速》有种到结尾才爆发出来的余味让我欲罢不能，确实值得一读。<br><del>希望爱情也能有这么多有趣的岔路与美好的相遇。</del></p><h2 id="10"><a href="#10" class="headerlink" title="10"></a>10</h2><p>西湖水位降了，邻水长廊也不再邻水。我探出头望了望，栏杆下多了窄窄一条泥径。两三道笔直向前的水鸟足迹，伴着一道犹豫不定的狗爪印，沿壁逐渐消失在长廊拐弯处。是哪位先发现这新出现的软软的小路的呢？</p><p>立人楼我常走的路上，今天发现一个摇摇欲坠的消防灯，一根灰色的电线堪堪从墙里伸出扯住灯具的前倾之势，像是静止的一幅离别的诗。蛛网与灰尘佐证了它们的牢固关系，但我想积蓄已久的两米高的重力势能总会在某一刻变成一次脆响，就像冗长而难以离席的音乐会的最后一声断奏。</p><p>在天色还未至墨蓝时，我在走廊侧头眺望。远远一艘瘦长的铁船拉着汽笛从海面的白雾里轻鸣而过，眼前一支飞鸟扇扇翅膀一下就从后面超到前头，转转停停像是给航船领航的海豚。那淡蓝色的深远和白纱一样的水汽，就这么随意装在天穹这个大罐子里。楼宇背后像是藏着一块温暖的闪着金光的海绵，它把蓝色的海水与雾都吸走了吧，就像一个漩涡，铁船与飞鸟就这样被吸了去，我的心神也被吸了去。容纳一切明亮和美好的这块海绵藏了起来，只剩下冷冷的墨蓝色的罐底与我对视。我憋住最后一口气，期待着金色海绵明天按时出现，以明亮与美好赏赐我一场沐浴。</p><p><em>2021年6月25日于校园</em></p><h2 id="12"><a href="#12" class="headerlink" title="12"></a>12</h2><p>中国的古文在流传誊抄中有很多变化，比如根据一個<a href="https://www.douban.com/note/702324257/">敦煌寫本</a>P2567，《将进酒》很可能当年李白的原題為《惜罇空》，具體內容如下：</p><p>“君不見黃河之水天上來，奔流到海不複迴。君不見床頭明鏡悲白髪，朝如青雲暮成雪。人生得意須盡歡，莫使金罇空對月。天生吾徒有俊才，千金散盡還複來。烹羊宰牛且為樂，會須一飲三百盃。岑夫子，丹丘生，與君哥一曲，請君為我傾。鐘鼓玉帛豈足貴，但願長醉不用醒。古來賢聖皆死盡，唯有飲者留其名。陳王昔時宴平樂，斗酒十千恣歡謔。主人何為言少錢，徑須沽取對君酌。五花馬，千金裘，呼兒將出換美酒，与爾同銷萬古愁。” </p><p>相比课文，这才更符合我心中的诗仙形象。</p><h2 id="13"><a href="#13" class="headerlink" title="13"></a>13</h2><p>FUN FACT:<br>Cache在大陆地区翻译成缓存，在台湾地区翻译成快取。<br>缓与快，存与取，意思相反的两组字用来表示同一个词！🆒🤨</p><h2 id="14"><a href="#14" class="headerlink" title="14"></a>14</h2><blockquote><p>大城市的郊区有着明亮的月亮，明天的露水在墙上凝结</p></blockquote><p>摘于弹幕，12月3日2021</p>]]></content>
    
    
    
    <tags>
      
      <tag>感悟</tag>
      
      <tag>诗</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Homebrew On Mac</title>
    <link href="/blogsite/2020/12/06/HomebrewOnMac/"/>
    <url>/blogsite/2020/12/06/HomebrewOnMac/</url>
    
    <content type="html"><![CDATA[<h1 id="homebrew安装"><a href="#homebrew安装" class="headerlink" title="homebrew安装"></a>homebrew安装</h1><p>homebrew是mac下的包管理器，类似linux下的apt-get。下载和卸载都比较简单，而Windows上的包管理器还在曲折发展中……</p><p>不过更新支持m1芯片的homebrew更换了根目录，所以我需要重新安装。</p><p>先<code>brew bundle dump</code>将已安装的包目录备份下来。</p><p>卸载旧版本：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">/bin/bash -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)</span>&quot;</span><br></code></pre></div></td></tr></table></figure><p>官网上的使用终端一键安装的命令：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">/bin/bash -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span><br></code></pre></div></td></tr></table></figure><p>可惜，raw.githubusercontent.com被dns污染了。</p><p>我的解决方式是用vpn翻出去用浏览器访问这个所需脚本，然后把内容复制到本地。</p><p><code>sudo chmod -R 777 文件目录</code> 提权之后把上面命令中字符串换成install.sh的本地路径。</p><blockquote><p>curl命令访问目标地址，直接输出内容，用$(curl xxx)就表示目标文件内容，如果想要表示本地文件内容可以用$(&lt;”/xxx.abc”)</p></blockquote><p>安装好之后<code>brew bundle</code>恢复安装的包目录。</p><p>好起来了🥳。</p>]]></content>
    
    
    <categories>
      
      <category>配置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感悟</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>电影分享</title>
    <link href="/blogsite/2020/11/24/%E7%94%B5%E5%BD%B1%E5%88%86%E4%BA%AB/"/>
    <url>/blogsite/2020/11/24/%E7%94%B5%E5%BD%B1%E5%88%86%E4%BA%AB/</url>
    
    <content type="html"><![CDATA[<p>想在这里分享一下近期看的一些电影，我会打分再辅以一些简短的影评。我总觉得电影是所有影视媒体里最有力量的，可以影响人的情绪，花点时间看一些佳作真的是审美体验和人生经验的双重洗礼。</p><span id="more"></span><h1 id="出租车司机"><a href="#出租车司机" class="headerlink" title="出租车司机"></a>出租车司机</h1><p>You talking to me?</p><h1 id="疤面煞星"><a href="#疤面煞星" class="headerlink" title="疤面煞星"></a>疤面煞星</h1><h3 id="7-5-10"><a href="#7-5-10" class="headerlink" title="7.5/10"></a>7.5/10</h3><p>在我心里算不上好看的电影，但是还是蛮有意思的。</p><p>1983年的电影里面刻画的迈阿密，是粉色霓虹灯下由罪恶、金钱、欲望构筑成的复杂都市，也是美国资本主义的缩影。电影以迈阿密毒贩主角之口，对资本主义的虚伪和丑陋毫不留情地抨击，也鲜活地展示了，当人的目的异化为赚钱时，金币如何将人奴役。</p><h1 id="普罗米亚"><a href="#普罗米亚" class="headerlink" title="普罗米亚"></a>普罗米亚</h1><h3 id="10-10"><a href="#10-10" class="headerlink" title="10/10"></a>10/10</h3><p>超越预期的燃系动漫电影！！简单但沉浸的剧情，精彩帅炸的机甲打斗，合适而激燃的泽野弘之的配乐（战斗的时候女声高音一出直接让我get goosebumps），总而言之是绝对值回票价的一场几何画风和艳丽颜色相辅相成的视觉盛宴！</p><p>剧情没有明显短板，作为一个仅两个小时的单集电影，剧情紧凑但连贯，全程无尿点。激燃和放松搞笑的节奏把控堪称将我拿捏。<br>唯一可惜的是限于篇幅对角色侧面的勾勒太少了，整体来说模板化比较严重，主角就是无脑热血八嘎。不过就像速激一样大家来看就是来看看硬汉（光头）飙车，谁想看你铁汉柔情伐木累？今石洋之导演就很明智，扬长避短，彻底把男人的浪漫这一块玩明白了属于是。</p><p>累了困了看下这个电影，绝对让你满电归来！</p><h1 id="颐和园"><a href="#颐和园" class="headerlink" title="颐和园"></a>颐和园</h1><h3 id="8-5-10"><a href="#8-5-10" class="headerlink" title="8.5/10"></a>8.5/10</h3><p>余虹！</p><p>斯人若彩虹，遇上方知有。</p><p>她的坚强她的热烈是人群中的一抹异色。可是钢强易折，时代和自我像绳结的两端不断收紧，将她困在一个打不开的结里。最终，那一抹天上的虹，也落在地上，成为泯然于众的幻影。</p><p>这部电影我最开始就是冲着女主角郝蕾去看的，或许是性格相似，余虹被她演绎出了立体的灵魂。<del>而且真的超级超级超级好看</del></p><p>电影里掺杂的政治私货虽然只是某些侧面，但是导向性还是很明显。我后来看了很久的维基百科资料感觉从各个角度看这个事件可以有各种解释，但是故意这么拍不是找封吗？</p><h1 id="苏州河"><a href="#苏州河" class="headerlink" title="苏州河"></a>苏州河</h1><h3 id="7-10"><a href="#7-10" class="headerlink" title="7/10"></a>7/10</h3><blockquote><p>如果有一天我走了,你会像马达一样来找我吗?</p><p>“会。”</p><p>会一直找吗?</p><p>“会。”</p><p>会一直找到死吗?</p><p>“会。” </p><p>你撒谎。</p><p>可是我宁愿一个人闭上眼睛，等待下一次的爱情。</p></blockquote><p>娄烨早期很出名的文艺片，而我对它没有任何感觉。我不想考虑他拍摄的技巧和致敬的外国影片，而它的故事就已经没有给我带来好感。</p><p>两段说来极其简单的爱情故事，被作者用复杂的蒙太奇和第三人称叙述给纠缠在了一起。40分钟以后的故事不应该存在。</p><p>牡丹和美美在影片里的形象片面且单纯近乎幼稚。仿佛她们的生活里最崇高的意义永远就是所谓的“爱情”。我非常不喜欢这样的角色。</p><p>同样，故事里的马达柔弱得令人可憎，仿佛后来的寻找就可以救赎曾经的罪过，一厢情愿而且还酒驾害人。摄影师也不是什么好东西，但只有他能依然漂流在苏州河上，因为同流合污也是一种有用的选择。</p><h1 id="教父2"><a href="#教父2" class="headerlink" title="教父2"></a>教父2</h1><h3 id="10-10-1"><a href="#10-10-1" class="headerlink" title="10/10"></a>10/10</h3><blockquote><p>暴力垒起的金字塔，每块砖都一直渗着鲜血；最初是敌人的血，最后是自己的血。在无血可流之时，这座曾经宏伟的金字塔也将化成尘埃。</p></blockquote><p>教父1和教父2，均夺得了奥斯卡最佳影片奖。有人说它近乎完美；有人说它是男人一生必看的电影；</p><p>它的内核不是黑帮的阴谋诡计、打打杀杀。它的内核关于忠诚、关于家庭、关于人性。</p><p>教父2的主线剧情穿插着一代教父的成长历程与二代教父的铁血手腕，精彩之余对比强烈，这种紧张的对比来到影片末尾升华至巅峰。同一间大宅，同一张餐桌，两条故事线交汇处，从家人满座到孤身一人，十年一瞬。——“荣耀的背后刻着一道孤独”</p><h1 id="钢的琴"><a href="#钢的琴" class="headerlink" title="钢的琴"></a>钢的琴</h1><h3 id="9-10"><a href="#9-10" class="headerlink" title="9/10"></a>9/10</h3><p>东北，下岗潮。讲述那个剧烈变化的时代下物质生活与精神需求冲突之下如何面对那种迷茫。工人阶级兄弟姐妹们的友谊以及团结起来为理想出力的感觉刻画非常生动。画面极美，它是中国小成本文艺片里的经典之作。</p><p>如果开脑洞的话也可以这么理解：新中国一穷二白，想要“现代化/工业化”（用钢琴指代），那想从人家那里偷来（苏联）不成功，想自己买（投靠西方）也是不可能，那大不了我们就团结一切力量自己实现”现代化“（钢琴钢琴，我们自己拿废弃材料造一台钢的琴，能正常弹不就OK吗）。</p><h1 id="天使爱美丽"><a href="#天使爱美丽" class="headerlink" title="天使爱美丽"></a>天使爱美丽</h1><h3 id="10-10-2"><a href="#10-10-2" class="headerlink" title="10/10"></a>10/10</h3><p>很多天过去了，我觉得我可能需要再看一遍。</p><p>治愈两个字，是她教给我怎么写的。</p><p>两颗孤独的✨，将为彼此闪耀。</p><h1 id="一九四二"><a href="#一九四二" class="headerlink" title="一九四二"></a>一九四二</h1><h3 id="9-10-1"><a href="#9-10-1" class="headerlink" title="9/10"></a>9/10</h3><p>时代的颠簸，有人觉得只是屁股下轿子的轻晃，但却能听到无数生命破碎的声音。</p><p>普通农民、长工、地主、传教士、小吏、外国记者、中国官员、常凯申，形形色色的人与事，都被搅和在了这一年的破事里。这就像是一个巨大的漩涡，底层的人旋转更快，上层的旋转更慢；当底层的生活已经天翻地覆时，上层可能仍未感知到任何变化；但无论你是哪一层，只要进入了这个巨大的漩涡，你就出不来了，只能慢慢下沉、渐渐窒息。</p><p>演员全是老戏骨，表演很耐琢磨。</p><p>冯小刚可能不行，但是刘震云是真的彳亍。</p><p><del>正宗荷兰话教学，中嘞</del></p><h1 id="卧虎藏龙"><a href="#卧虎藏龙" class="headerlink" title="卧虎藏龙"></a>卧虎藏龙</h1><h3 id="8-5-10-1"><a href="#8-5-10-1" class="headerlink" title="8.5/10"></a>8.5/10</h3><p>玉娇龙，李慕白。</p><p>都是武学天才。但是彼此都认为对方的生活更加美好。</p><p>冲突最后只能以死解决。我为什么想到了那个杀手不太冷。</p><p>八爷的武指无可挑剔。功夫片就是这个味。</p><h1 id="金陵十三钗"><a href="#金陵十三钗" class="headerlink" title="金陵十三钗"></a>金陵十三钗</h1><h3 id="8-5-10-2"><a href="#8-5-10-2" class="headerlink" title="8.5/10"></a>8.5/10</h3><p>“零落成泥碾作尘，只有香如故”</p><p>她们是橱窗中最闪耀的一朵玻璃罩中的娇艳玫瑰，看起来脆弱不堪的玩物。当这个繁华的商店被强盗劫掠，一切都被破坏殆尽。她们的玻璃罩被子弹击碎，她们的安危无人关心，枝叶根根折断，花瓣片片凋零。但是恶土中顽强生长出的玫瑰却意外地浓香四溢，用自己最美好的躯体保护着土壤里剩余的生机。</p><p>同样是描写抗日战争中人民的苦难，1942给我的画面是一场时代卷起的巨大沙暴，其中没有人能安然无恙；而金陵十三钗给我的画面是一座华丽但脆弱 的楼台，在垮塌的最后绽放出一道耀眼的光。</p><p>1942横跨数月几百公里，金陵局限于南京一座教堂里的几天。一大一小，一动一静。冯小刚与张艺谋，以各自的方式，拍下了那个时代的印记，不论美好与苦难。</p>]]></content>
    
    
    <categories>
      
      <category>文</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感悟</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>他的世界</title>
    <link href="/blogsite/2020/11/04/%E4%BB%96%E7%9A%84%E4%B8%96%E7%95%8C/"/>
    <url>/blogsite/2020/11/04/%E4%BB%96%E7%9A%84%E4%B8%96%E7%95%8C/</url>
    
    <content type="html"><![CDATA[<blockquote><p>每个人都像一个气泡 有的气泡会汇聚到一起<br>而我像一个失散的 沸水壶内壁上最不起眼的一个小泡 看着壶中央那许许多多的沉沉浮浮的汇聚与消散<br>我维持着自己的形态 但是 这又有什么用呢</p></blockquote><span id="more"></span><p>撤下冰箱上前天写下的便利贴，他拉开冰箱门拿出一瓶牛奶轻轻的旋开盖子。两片没有烤过的吐司吃起来松松垮垮并不可口。就着冰凉的牛奶，他啜饮着窗外荷叶上间或滴下的忧愁 愁是什么味道 是夜晚的最后一丝云雾的凝结 最终被引力拽入同类汇聚的墓地 或许存在或许也并不存在 或许是风或许是雨或许是雪或许是雷 他在坐着他在站着他在飞着他在坠着 他的思想与他的身体割裂 就像是两台放在一起却只能通过短信交流的手机，距离很近却相隔很远，被同一个东西连接也被同一个东西隔开。“滴滴滴滴，滴滴滴滴”手机闹钟响了。他耸耸肩，抖开套上一件晒干后扔进衣柜蜷缩起来的褪色黑t，拿起昨天穿过的廉价牛仔外套披上，在许久没洗的球鞋堆里挑了一双稍微干净的穿起。他面对着镜子双手撑在洗漱台上左右端详着镜中自己的模样，随后挺起身来拍了拍自己的脸告诉自己it&apos;s another normal day。门口垃圾桶里每天碰到最早的伙伴是那攥成一团的日历纸，日历纸飞进空空的垃圾桶时还会打声招呼“你永远都是老样子没变啊” 。没变过的还有他仍然期望着未来的未来。他期望着彩票中奖，他期望着能够捡到现金，他期望着出门就能碰上昨天喂过的小猫，他期望碰着一路的绿灯，他期望今晚的月亮会比昨晚更加明亮，他期望着，总是期望着，也只是期望着。<br>甩开纷杂的念头，他终于离家走入世界中。没错，世界是他给自己的座驾起的小名。一辆已经上了年纪的二手雪铁龙。至于他选择了它的原因，仅仅是他在手机上翻阅厂商目录时，比较喜欢雪铁龙这个听起来十分硬朗结实耐用的名字罢了。等到这辆白色已经微微斑驳的小车真正出现在他的面前，他才琢磨出味儿来，他喜欢的并不是铁龙，而是雪。等到世界一声轰鸣，回忆随着轮胎的嘶叫碎裂，一块块的落在地面，在不会有人知道的地方慢慢融化。<br>曾经，他住的这个区域是很温暖的，不知道为什么气候却逐渐变得阴冷潮湿，也是这个原因，这周遭的住户陆续搬走，只有他心念旧情故土难离。<br>“All the leaves are brown,<br>And the sky is grey,<br>I&apos;ve been for a walk,<br>On a winter&apos;s day.”<br>车窗紧闭，抵御着外界的寒风，护着他在《California Dreaming》的乐声里安静地独自享受一个人的时间。一个小时三十二分钟十五秒之后，他发现了自己的错误。他今天不该出门的。</p><p>从出门以来，他没有看见过一个人。按理来说，早上这个时候正是上班通勤高峰期，尽管是冬季，城里也应该公路车水马龙，人行道熙熙攘攘才对。而现在，天色已经大亮，整座城市却依旧沉睡着。听不见踢踏踢踏的脚步声，听不见嘹亮刺耳的喇叭声，听不见此起彼伏的叫卖声，听不见早点铺升腾起的滴滴答答的水雾，听不见阳光炙烤绿叶响起的毕毕剥剥的香气。他很害怕，他不知道他在害怕什么。他恐惧某种后验的对于他的存在的否定正在成立。他的车速与他的恐惧一并飙升。<br>任怀疑在罐头里发酵，开盖的那一下，将会爆出所有沉寂已久的味道。<br>终于，一记急刹。他已经不在乎他的车轮抵达了什么地域，因为所有一切熟悉的或陌生的楼栋与街道都已经没有区别。只有固化的物，却没有活动的人！物质世界离开了人，还是物质世界。人离开了人，还是人吗？他一路驱驰，好像经历了许多，却反而觉得这些经历并不存在，只是臆想罢了！他简直是宣判了自己的死亡！他在车里大喊，在车里哭泣，在车里祈祷，在车里冷笑，在车里无穷无尽的思考和放弃，在车里不断相信并击碎自己的相信。他死了！</p><p>感受到无数的时刻从身上划过，默默地摸着背后它划开的滴着鲜血的痕，再把指尖折回送进嘴里，人类身上最原始的味觉感受器给出了所有最发达的脑都给予不了的存在的证据。<br>我活着。我还存在着。我没有被世界否定。我环顾四周，车内的摆设已经被破坏殆尽。残存的记忆告诉我，这些并不是突然发生在一瞬间，我对自己的世界一直如此粗鲁。我惊出一身冷汗，我对这一切竟然没有任何警觉和惊醒。我将视线投向车窗外，透过遮阳膜，一切依然冷冰冰地藏在阴影中，我试图寻觅，却不见任何人的踪迹，窗上倒映出的我自己的身影是我唯一的陪伴。我闭上双眼，深呼吸几口，背后的刺痛随着气流进出我的思绪。将胸中积郁的最后一口气吐出，我猛睁双眼，以最快速度用左手抓住车门把手运起气力将门推开并翻身出去。</p><p>我笑了。不是为荒谬笑，不是为愚蠢笑，不是为痛苦笑。只是为了一切如常而笑，笑得纯粹至极。<br>阳光之下，这个城市的每个角落都在像往常一样运转，街上人来人往，集市吵闹嘈杂，每条马路上车辆奔流不息。气温依旧不高，无数车辆默契十足地紧闭车窗，而在他们之间，有一辆白色的小车却选择了摇下车窗，传出《California Dreaming》的乐声掺杂着难以辨认的笑声，渐渐远去，溶于车流之中。</p>]]></content>
    
    
    <categories>
      
      <category>文</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小说</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网络环境的语境之争</title>
    <link href="/blogsite/2020/09/21/%E8%AF%AD%E5%A2%83/"/>
    <url>/blogsite/2020/09/21/%E8%AF%AD%E5%A2%83/</url>
    
    <content type="html"><![CDATA[<p>碎片时代的语境：严肃——娱乐</p><span id="more"></span><h2 id="语境与隐喻"><a href="#语境与隐喻" class="headerlink" title="语境与隐喻"></a>语境与隐喻</h2><p>狭义的语境指上下文。</p><p>在神经语言学研究里，语境包括：共有的知识，文本的上下文，体裁，还有说者以及听者本身。</p><p>当然我要强调语境是一个广泛的概念，没有绝对正确的概念。我对它的理解可能也与该定义不完全相同。</p><hr><p>语境是言语产生意义的前提。</p><p>限制作用：将一个原义非常多的语句限制到符合语境的一个确定的语义。</p><blockquote><p>“柜子没有锁”</p><p>室友让你给他带东西，跟你说：柜子没有锁。</p><p>和</p><p>你报道第一天到宿舍正在打扫，室友跟你说：柜子没有锁。</p></blockquote><p>补充作用：通过语境中的信息，对模糊和残缺的语句进行隐含的信息补充。</p><blockquote><p>“鲁迅是日语，钱钟书是英语“</p><p>单看这句话是说不通的，放到语境里：</p><p>说话的人正在讨论许多文学家都精通一门外语。</p></blockquote><hr><p>“媒介即隐喻”——尼尔波兹曼《娱乐至死》</p><p>与我想说的语境问题其实很像，你在什么环境下接触到信息，决定了你如何理解信息；我说的语境不止包括媒介（网络、app）还包括自己的心态、认知等等。</p><p>语境会强化信息某一方面的特质，也会让人选择性地忽视一方面。</p><p>例子：成电男生的失败。</p><p>在QQ空间上看到，最早我还以为是曾校看不下去了，鞭策我们成电男性单身狗。</p><p>但是看完他给新生演讲的全文，才看懂这句话不是强调没谈恋爱的成电男生很失败，而是强调我们成电的女生很优质还不快去抢。</p><hr><p>我将互联网上的语境分为两类。</p><h2 id="严肃语境"><a href="#严肃语境" class="headerlink" title="严肃语境"></a>严肃语境</h2><p>严肃、认真、理性、全面</p><blockquote><p>提供思考空间，鼓励寻找信息之间的联系，主动组织和建构。</p><p>书籍、论文就是典型的严肃语境。</p><p>它本身携带关于主题足够的信息，提供可以相互联系的上下文。</p><p>它对应的预设心态是认真、理性。</p></blockquote><p>如果你花费精力去思考和理解，这种语境中的信息可以被串联起来构建和补充你的认知体系。对于思维的培养和发展是有益的。</p><h2 id="娱乐语境"><a href="#娱乐语境" class="headerlink" title="娱乐语境"></a>娱乐语境</h2><p>娱乐、解构、忽视、戏谑</p><p>短视频运营流行着“三秒钟法则“，前三秒不能吸引到观众的注意力的，会被其他内容淘汰。</p><blockquote><p>用娱乐化信息填满用户的无聊时间。有人看就有人输出。真正重要的永远不是内容本身的意义。</p><p>微博、QQ空间是典型的娱乐语境。它本身信息量大，但散乱无章，没有中心。有组织的信息也会在传播过程中被主动解构。至于解构后传播的信息本身有没有价值不重要。</p><p>它对应的预设心态是娱乐、戏谑。</p></blockquote><p>大数据推荐机制：助长娱乐语境的扩张，因为严肃语境的接受程度因人而异，而娱乐内容则对大众同质化传播。</p><p>需要思考，需要联想，需要对比的都会被抛在一旁。最为广泛传播的，是娱乐大众、博人眼球的内容。</p><p><del>尤其喜欢“咀嚼好的食物”，三分钟带你看电影等等。</del></p><h2 id="两方变化的示例：新闻"><a href="#两方变化的示例：新闻" class="headerlink" title="两方变化的示例：新闻"></a>两方变化的示例：新闻</h2><p>新闻领域：逐渐转向 短、平、快。</p><p>微博是现在新闻传播的一个重要前沿阵地，但是，微博的新闻风格是140字以内的新闻简介加一个非常短的小视频，在这么小的空间内，如何以尽量全面客观的角度去阐述新闻的各个方面？</p><p>再加上微博上消息与消息的割裂化、碎片化的特点，没有提供对于新闻消息的前言后语的直接索引，很难让读者找到新闻的背景和后续。这个基本靠缘分。</p><p>那么，新闻，原本媒介主要是报纸的一种严肃文学，在顺应时代潮流，来到微博等移动互联网平台上，竟然也会难以避免地沾染上娱乐主义气息。</p><p>那么在这种信息输出者和接受者双向作用下，网络环境的娱乐语境逐渐固化。连新闻都可以娱乐化解读，那什么不可以娱乐化呢？</p><h2 id="可能出现的危害"><a href="#可能出现的危害" class="headerlink" title="可能出现的危害"></a>可能出现的危害</h2><p>在娱乐语境下呆久了，丧失对严肃语境的接受能力。或者逃避思考。</p><p>人家在说正经事，下面有人断章取义、插科打诨，把无聊当风趣。</p><p>网络自媒体喜欢把严肃的现实解构，提取最有噱头的部分，添油加醋输出，造成网络上信息的质量下降。</p><p>语境会塑造人的思维方式。</p><p>不管消除娱乐语境带来的负面影响的办法存不存在，到底是什么，</p><p>我觉得都应该做到两点：</p><p>第一点是 意识到娱乐语境的存在和它对思维产生的影响，不要迷失在娱乐浪潮里。</p><p>第二点是重视严肃语境的意义，保护严肃语境的表达空间，不让互联网被娱乐支配。</p>]]></content>
    
    
    <categories>
      
      <category>知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感悟</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>心病调查记录</title>
    <link href="/blogsite/2020/09/13/%E5%BF%83%E7%97%85%E8%B0%83%E6%9F%A5%E8%AE%B0%E5%BD%95/"/>
    <url>/blogsite/2020/09/13/%E5%BF%83%E7%97%85%E8%B0%83%E6%9F%A5%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>人啊，容易得病。所谓病，是异于平常的状态。有种病，它传染性不强，一旦发展起来却十分严重。它是心病。而且有很多明显的症状和表象。</p><span id="more"></span><h1 id="行为"><a href="#行为" class="headerlink" title="行为"></a>行为</h1><ul><li><p>当你与她在同一范围里，你会忍不住看向她，将她印刷在你瞳孔的最深处，将她用石凿镌刻在你视网膜的绝壁，不管你在做什么，不管她在做什么。</p><blockquote><p>有时候，这个行为在别人眼中非常明显，但病人依然不会有所收敛。自我意识和自控能力会大幅度降低。</p></blockquote></li><li><p>你会反复查看可能的与她相关的信息来源，确认无一遗漏，但是大部分时间都并没有获得有效信息。</p><blockquote><p>病人症状极其类似”强迫症”(OCD)，会不受控制地反复进行无效操作。</p></blockquote></li><li><p>你会提前规划要说的话以及可能出现的应答，并尝试推断并执行最优化方案。</p><blockquote><p>该症状会导致注意力下降以及精神衰弱，但病人并不自知，反而部分人会沉溺于此。</p></blockquote></li></ul><h1 id="意识"><a href="#意识" class="headerlink" title="意识"></a>意识</h1><ul><li><p>内心难以自我平静，有强烈的诉说欲望。—— “疏影横斜水清浅，暗香浮动月黄昏。”</p><blockquote><p>病人在情绪被调动而无人交流的情况下会产生强烈的诉说欲望。如果无法及时与关键人物交流，或通过写作/运动等方式疏解，将会导致病人焦躁好动和忧愁善感、患得患失。另外：强烈的诉说欲望可能会产出更富有情感的文学作品例如诗歌等。</p></blockquote></li><li><p>常常会质疑自己，对于自己行为后果的预测偏向负面。</p></li></ul><h1 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h1><p>当某些东西触动到你的时候，它在你身上产生的回馈既非大脑的澄明，也非泪腺的崩摧——而是胃的抽动。你会感到胃的位置有些东西在孕育和孵化，你会感觉到异样但却不会感到痛苦，那种感觉会告诉你：你不再是你，而是你胃里新出现的那些东西的载体。</p><blockquote><p>Butterflies in someone’s stomach. That’s it.</p><p>当病人在共情程度处于波峰时常出现该症状，并且可能会伴随着眼泪的分泌和情绪的深沉。人类一般会称之为“感动”。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>文</category>
      
    </categories>
    
    
    <tags>
      
      <tag>散文</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>被WSL2折磨到win本刷Linux</title>
    <link href="/blogsite/2020/09/08/linux/"/>
    <url>/blogsite/2020/09/08/linux/</url>
    
    <content type="html"><![CDATA[<p>因为数据库和docker听说都是linux内核，所以我准备弄一个Linux系统玩玩。</p><p>虽然已经用VMware装过ubuntu了，但是出于折腾精神以及希望更快更方便的想法，暂时不考虑双系统的话还有一种方法：WSL。</p><h1 id="安装WSL2"><a href="#安装WSL2" class="headerlink" title="安装WSL2"></a>安装WSL2</h1><blockquote><p>现在最新的WSL2是完全的linux内核，而WSL1则是模仿的linux api。按需下载。</p></blockquote><p>首先是更新win10。<del>这一步耽搁了我好久</del></p><p>WSL2需要1909以及小版本1049以上的系统。docker desktop需要家庭版系统达到2004以上。不妨直接来个最新的系统。</p><p>如果系统自带更新太慢，去微软官网下一个win10易升，更新更快更直接。</p><p>在应用和功能里打开WSL功能，进微软商店下载Ubuntu。下好直接点进去就可以设置用户名密码然后使用了。</p><p>这样方法装的Ubuntu重装系统非常方便。只需要右键Ubuntu应用设置中重置应用即可。</p><h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h1><p>安好WSL去docker官网下一个docker desktop，一路确定就可以了。docker安好之后可以直接在WSL的Ubuntu中使用。</p><p>具体步骤在它的<a href="https://docs.docker.com/get-started">官方文档</a>中非常详细。</p><p>另外这篇<a href="https://blog.csdn.net/hadues/article/details/104961149">博客</a>从原理到步骤写的都不错。</p><h1 id="安装图形化界面"><a href="#安装图形化界面" class="headerlink" title="安装图形化界面"></a>安装图形化界面</h1><p>主流的linux图形化界面<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="可以参考https://www.cnblogs.com/chenmingjun/p/8506995.html">[1]</span></a></sup>之中，我在xfce和gnome中纠结了一段时间。</p><p>我原本打算在主力电脑上装gnome，轻薄本上来xfce试试。</p><p>结果wsl上怎么装vnc和xlaunch怎么配置都没获取到视频信号输入，气得我^@&amp;)($&amp;^@)$)@(&amp;*</p><hr><p>经历了漫长的痛苦之后，放弃了原想法。现在WSL上准备不做图形化了，WSL定位在于跑一些大型的linux程序。轻薄本上ubuntu desktop，自带gnome图形化界面，轻松许多。</p><h1 id="轻薄本改造"><a href="#轻薄本改造" class="headerlink" title="轻薄本改造"></a>轻薄本改造</h1><p>我决定对我的千元本中柏ezbook2进行改造。原本的win10系统跑起来非常慢，不够流畅；我突发奇想，既然要装linux，为什么不直接在这个本子上装一个呢？</p><blockquote><p>“查拉图斯特拉的沉沦自此开始”</p></blockquote><p>我用u盘下了ubuntu镜像之后，直接覆盖掉原本的win10，系统看起来运行正常。然后问题来了：</p><ul><li>找不到wifi适配器。用<code>lspci</code>和<code>ip a</code>指令都无法看到我的网卡。</li><li>触摸板没有任何反应。</li></ul><h2 id="无线网卡"><a href="#无线网卡" class="headerlink" title="无线网卡"></a>无线网卡</h2><p>中柏用的到底是什么网卡我到现在仍然不知道。我尝试过以下方法，都失败了。</p><ul><li>安装系统盘自带的dkms和broadcom驱动</li><li>用NdisWrapper工具安装新款ezbook2的驱动</li></ul><p>然后依然没有找到网卡。</p><p>问了淘宝客服，没有给予任何帮助，服务态度贼差。小心中柏！</p><hr><p>在售后群里下到我这个老款ezbook2的驱动包，发现我的wifi和蓝牙是同一个集成模块：AP6212。</p><p><del>人家开发板上用这个小模块。你给我笔记本上装个网卡就这？？</del></p><p>继续google，发现AP6212使用的固件是broadcom的43430。</p><p>不断谷歌之后采取了如下办法：</p><ol><li>重装最新版本ubuntu——从18.04升到20.04（新系统自带许多驱动，装完新系统声卡和触摸板立即能用了）</li><li>输入<code>dmesg | grep &quot;brcm&quot;</code> 查看linux内核关于brcm的日志。这一步非常重要，提供非常多关键信息！</li><li>发现问题在于某些固件并没有加载上。</li><li>在看了200+帖子和文章之后，找到一个奇妙的方法<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="感谢ask ubuntu！https://askubuntu.com/questions/1156698/wifi-driver-not-found-in-mini-pc-ubuntu-18-04">[2]</span></a></sup>：将/lib/firmware/brcm中43430的已有驱动文件直接复制改名成所需驱动文件(比如<code>brcmfmac43430a0-sdio.AP6212.txt</code>改成<code>brcmfmac43430a0-sdio.txt</code>) <del>你还别说 真有用 绝了</del></li><li>通过上述方法，将wifi和蓝牙所需固件放入brcm文件夹后<code>reboot</code></li><li>Wi-Fi and bluetooth work well~XD</li></ol> <section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>可以参考<a href="https://www.cnblogs.com/chenmingjun/p/8506995.html">https://www.cnblogs.com/chenmingjun/p/8506995.html</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>感谢ask ubuntu！<a href="https://askubuntu.com/questions/1156698/wifi-driver-not-found-in-mini-pc-ubuntu-18-04">https://askubuntu.com/questions/1156698/wifi-driver-not-found-in-mini-pc-ubuntu-18-04</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>配置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>折腾</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>物联网复习</title>
    <link href="/blogsite/2020/08/30/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0/"/>
    <url>/blogsite/2020/08/30/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="Chap5-传感器性能与电参数测量"><a href="#Chap5-传感器性能与电参数测量" class="headerlink" title="Chap5 传感器性能与电参数测量"></a>Chap5 传感器性能与电参数测量</h1><h2 id="传感原理"><a href="#传感原理" class="headerlink" title="传感原理"></a>传感原理</h2><p><strong>信息感知</strong>是要将物体的力学、热学、磁等变换为电阻、电容、电感、电流、电压等<strong>基本电参量的变化</strong>。</p><h3 id="传感器："><a href="#传感器：" class="headerlink" title="传感器："></a>传感器：</h3><p>能感受被测量并按一定规律转换成可用信号的器件或装置，通常由敏感元件和转换元件组成。</p><h3 id="含义："><a href="#含义：" class="headerlink" title="含义："></a>含义：</h3><ul><li><p>传感器是测量装置，能完成检测任务；</p></li><li><p>其输入是某种被测量，可能是物理量或化学量、生物量等;</p></li><li>其输出是某种便于传输、转换、处理和显示的物理量，如气、光、电等，目前主要是电量;</li><li>输出量与输入量有单值确定的对应关系，且有一定精确度</li></ul><h2 id="传感器类型"><a href="#传感器类型" class="headerlink" title="传感器类型"></a>传感器类型</h2><p>同种参量可用不同原理的传感器测量<br>基于一种传感原理可制作多种参量传感器</p><ul><li>按基本效应分类：物理型、化学型和生物型</li><li>按构成原理分类：物性型传感器和结构型传感器</li><li>按能量转换原理分类：有源传感器和无源传感器</li><li>按输出信号的性质分类：模拟式传感器和数字式传感器</li><li>按输入物理量分类：位移传感器、压力传感器、速度传感器、温度传感器及流量传感器等</li><li>按工作原理分类：电阻式、电感式、电容式及光电式等。</li><li>按测量方式分类：接触式传感器和非接触式传感器</li></ul><h2 id="传感器组成"><a href="#传感器组成" class="headerlink" title="传感器组成"></a>传感器组成</h2><p>敏感元件：感知+输出<br>转换元件：参量类型变换<br>转换电路：有用信号输出<br>最基本的：敏感+转换</p><p><img src="image-20200830210426447.png" alt="image-20200830210426447"></p><h2 id="传感器的信号调理与接口"><a href="#传感器的信号调理与接口" class="headerlink" title="传感器的信号调理与接口"></a>传感器的信号调理与接口</h2><h3 id="信号调理"><a href="#信号调理" class="headerlink" title="信号调理"></a>信号调理</h3><h4 id="作用："><a href="#作用：" class="headerlink" title="作用："></a>作用：</h4><p><strong>调理敏感/转换元件或者传感器的输出信号</strong>，使其更好地满足后续信号传输、处理或显示的要求。</p><h4 id="位置："><a href="#位置：" class="headerlink" title="位置："></a>位置：</h4><p>敏感元件(非电量)—[检测电路]—&gt;电参量(电压、电流等)—[信号调理]—&gt;电压—[DAQ]—&gt;数字量</p><h4 id="主要类型："><a href="#主要类型：" class="headerlink" title="主要类型："></a>主要类型：</h4><p>电平调整、线性化、信号形式变换、滤波、阻抗匹配等</p><h4 id="主要实现方式："><a href="#主要实现方式：" class="headerlink" title="主要实现方式："></a>主要实现方式：</h4><p>模拟电路（集成器件）</p><blockquote><p><strong>转换电路、检测电路、信号调理电路之间的界限并不很明确，但功能作用明确</strong></p></blockquote><h3 id="接口与数域"><a href="#接口与数域" class="headerlink" title="接口与数域"></a>接口与数域</h3><p>系统模块化和输出标准化的意义：使得不必深入了解各功能模块内部原理及结构，就可对整个系统进行设计、实现且便于维护。</p><h4 id="接口与数域-1"><a href="#接口与数域-1" class="headerlink" title="接口与数域"></a>接口与数域</h4><h5 id="接口："><a href="#接口：" class="headerlink" title="接口："></a>接口：</h5><p>实现两功能模块间电气参数连接的部分。</p><p>接口电路可工作在同一电气参数范围，如将传感器输出的模拟信号调理成标准输出信号；</p><p>也可将信号从一个数域变换到另一数域，如A/D转换电路；</p><p>另一项关键作用是实现标准化。</p><h5 id="数域："><a href="#数域：" class="headerlink" title="数域："></a>数域：</h5><p>用来表示或传输信息的某种参量的名称。</p><p><strong>模拟数域</strong>的信息由信号幅度(如电压、电流)携载；<br><strong>时间数域</strong>的信息由时间关系(周期/频率、脉宽或相位)携载<br><strong>数字数域</strong>的信号由脉冲数或“0”和“1”的编码串携载。 </p><h2 id="传感器的性能评价与选用"><a href="#传感器的性能评价与选用" class="headerlink" title="传感器的性能评价与选用"></a>传感器的性能评价与选用</h2><h3 id="传感器的总特性"><a href="#传感器的总特性" class="headerlink" title="传感器的总特性"></a>传感器的总特性</h3><p>主要包括传感器与被测对象和后接仪器装置组成的测量系统的<strong>输入与输出的匹配、传感器的机械特性和工作特性</strong>等</p><ul><li>机械特性<ul><li>与储运、安装、对外连接（电源、机械、流体等）相关的（材料、力学等）特性和（环境、密封等）条件</li></ul></li><li>工作特性<ul><li>包括<strong>静态特性、动态特性、环境特性</strong>（施加特定外部条件<br> 时与施加之后的性能表现）</li></ul></li><li>传感器的误差等</li></ul><h4 id="传感器误差"><a href="#传感器误差" class="headerlink" title="传感器误差"></a>传感器误差</h4><p><strong>误差：</strong>对被测量的测量值(结果)与其真值(真实值)之差</p><p><strong>理想传感器</strong>：仅敏感特定输入；输出与输入呈唯一且稳定的关系（最好是线性）；输出量可真实反映输入量的变化，等等</p><hr><p>表达方式：</p><ul><li><strong>绝对误差</strong>：测量值与真值或标准值之差，简称误差;</li><li><strong>相对误差</strong>：测量值的绝对误差与标准值之比的百分数;</li><li><strong>引用误差</strong>：仪表测量示值误差与其测量范围上限的百分比</li></ul><p>性质分类：</p><ul><li><strong>系统误差</strong>：在相同条件下，对同一被测量进行多次重复测量时，某种保持恒定或按一定规律变化的误差</li><li><strong>随机误差</strong>：在相同条件下，对同一被测量进行多次重复测量时，受偶然因素影响而出现的其绝对值和符号以不可知方式变化的误差</li><li><strong>粗大误差</strong>：在测量结果中有明显错误的误差。含此误差的测量数据称为坏值，应予以剔除</li></ul><hr><p>误差原因</p><ul><li><strong>介入误差</strong>- 特点：不可避免,  影响程度不同；</li><li><strong>应用误差</strong>- 原因：原理或设计的缺陷等；</li><li><strong>特性参数误差</strong>- 原因：固有；影响使用及有效工作范围；</li><li>动态误差- 原因：对快变信号的响应滞后：</li><li>环境误差- 原因：环境参量变化或外界因素</li></ul><h2 id="静态特性"><a href="#静态特性" class="headerlink" title="静态特性"></a>静态特性</h2><h3 id="静态特性："><a href="#静态特性：" class="headerlink" title="静态特性："></a>静态特性：</h3><p>传感器在被测量处于稳定状态时的输出-输入(静态函数)关系。表征传感器的工作质量，由传感器内部结构参数决定。</p><blockquote><p>静态测量是指测量过程中<strong>被测量保持恒定不变</strong>(即，系统处于稳定状态)时的测量。当被测量为缓慢变化量，但在一次测量的时间段内变动的幅值在测量精度范围内，这时的测量也可当做静态测量来处理</p><p><strong>静态标准条件</strong>是指没有加速度、振动、冲击(除非这些参数本身就是被测量)的影响，环境温度一般为室温20±5℃，相对湿度不大于85%，大气压力为101.3±8kPa(760±60mmHg)的情况</p></blockquote><h3 id="传感器的输出-输入静态函数关系："><a href="#传感器的输出-输入静态函数关系：" class="headerlink" title="传感器的输出- 输入静态函数关系："></a>传感器的输出- 输入静态函数关系：</h3><script type="math/tex; mode=display">y=a_0+a_1x+a_2x^2+\cdots+a_nx^n</script><h3 id="静态函数关系的特殊情况："><a href="#静态函数关系的特殊情况：" class="headerlink" title="静态函数关系的特殊情况："></a>静态函数关系的特殊情况：</h3><ul><li>理想线性关系</li><li>非线性项中仅有奇次项， 有y(x)=−y(−x)的对称性</li><li>非线性项中仅有偶次项，有y(x)=y(−x)的对称性</li></ul><h3 id="差动技术："><a href="#差动技术：" class="headerlink" title="差动技术："></a>差动技术：</h3><p>将两个相同特性的传感器差动组合，可有效消除偶次非线性项</p><h3 id="测量范围和量程："><a href="#测量范围和量程：" class="headerlink" title="测量范围和量程："></a>测量范围和量程：</h3><p>量程是指检测系统测量上限和测量下限</p><h3 id="评价指标-线性度（非线性偏差）："><a href="#评价指标-线性度（非线性偏差）：" class="headerlink" title="[评价指标]线性度（非线性偏差）："></a>[评价指标]线性度（非线性偏差）：</h3><p>表征传感器的校准曲线与拟合直线的偏差程度</p><script type="math/tex; mode=display">\begin{gather}r_L=\pm\frac{\Delta_{Lmax}}{y_{FS}}\times100\%\\\\\Delta_{Lmax}为最大偏差；y_{FS}为满量程时的输出值\end{gather}</script><p><img src="image-20200831094759259.png" alt="image-20200831094759259"></p><p>方法(d)兼顾零点和最大偏差</p><h3 id="评价指标-灵敏度："><a href="#评价指标-灵敏度：" class="headerlink" title="[评价指标]灵敏度："></a>[评价指标]灵敏度：</h3><p>传感器的输出增量与相应的输入增量之比</p><ul><li>对于线性传感器,灵敏度是传感器特性直线段的斜率</li><li>非线性传感器的灵敏度, s=dy/dx</li></ul><h3 id="评价指标-迟滞："><a href="#评价指标-迟滞：" class="headerlink" title="[评价指标]迟滞："></a>[评价指标]迟滞：</h3><p>传感器对正向(输入增大)和反向(输入减小)输入的<strong>实际响应特性曲线的不重合程度</strong></p><ul><li>迟滞环：正、反向特性曲线形成的闭环</li><li>迟滞误差：为正、反行程输出的最大差值与满量程输出值y<sub>FS</sub>之比</li></ul><h3 id="评价指标-重复性及其他："><a href="#评价指标-重复性及其他：" class="headerlink" title="[评价指标]重复性及其他："></a>[评价指标]重复性及其他：</h3><p><img src="image-20200831100059321.png" alt="image-20200831100059321"></p><ul><li><strong>综合误差</strong>(精度)：传感器的示值与被测量真值之间的最大偏差。通常是综合考虑室温下传感器的<strong>线性度</strong>r<sub>L</sub>（非线性误差）、<strong>迟滞误差</strong>r<sub>H</sub>和<strong>重复性误差</strong>r<sub>R</sub>的综合值</li><li>量程（测量范围）、灵敏度、分辨力是衡量传感器<strong>基本功能特性</strong>的指标，决定其工作能力；</li><li>线性度、重复性、迟滞、漂移、稳定性、综合误差是反映<strong>精度特性</strong>的指标，决定传感器在何种程度上能完成其测量</li></ul><h2 id="动态特性"><a href="#动态特性" class="headerlink" title="动态特性"></a>动态特性</h2><h3 id="动态特性："><a href="#动态特性：" class="headerlink" title="动态特性："></a>动态特性：</h3><p>传感器对随时间变化的输入量的响应特性；反映了传感器的输出能真实再现变化的输入量的能力</p><blockquote><p>动态特性，常用的两种方法有<strong>频率响应分析法</strong>和<strong>瞬态响应分析法</strong></p></blockquote><h4 id="时间常数："><a href="#时间常数：" class="headerlink" title="时间常数："></a><strong>时间常数</strong>：</h4><p>时域内研究传感器对“标准”输入信号的响应特性</p><h4 id="保持幅值稳定的响应带宽："><a href="#保持幅值稳定的响应带宽：" class="headerlink" title="保持幅值稳定的响应带宽："></a>保持幅值稳定的<strong>响应带宽</strong>：</h4><p>在频域内借助传递函数研究传感器对正弦输入的响应特性，包括幅频特性和相频特性</p><ul><li>幅频特性：线性系统在正弦输入下的输出幅值与输入幅值之比，以$|H(j\omega)|$表示；</li><li>相频特性：输入与输出之间随频率而变的相位特性，以$\varphi(\omega)$表示</li></ul><p>$0&lt;\omega &lt;\omega_1$内幅频特性稳定，相频特性线性</p><h4 id="频率响应特性："><a href="#频率响应特性：" class="headerlink" title="频率响应特性："></a><strong>频率响应特性</strong>：</h4><p>拓宽固有频率，则在指定精度下的平坦区间也将拓宽</p><p>典型一阶传感器的频率特性为：</p><script type="math/tex; mode=display">H(j\omega)=\frac{A}{1+j\omega\tau}</script><p><strong>一阶频率特性</strong>的特征参数可用3 dB频率$\omega_c$表示，即: $\omega_c=1/\tau$。此处$\tau$称为传感器的时间常数。</p><p><img src="image-20200831111151205.png" alt="image-20200831111151205"></p><h2 id="传感器的时域响应与动态品质评价"><a href="#传感器的时域响应与动态品质评价" class="headerlink" title="传感器的时域响应与动态品质评价"></a>传感器的时域响应与动态品质评价</h2><p>时间响应特性与动态品质的关系</p><ul><li>时间常数$\tau_0$。传感器输出值由零上升到稳定值的63.2％所需要的时间</li><li>上升时间$t_r$。响应从最初稳态值的5％或10％上升，第一次达稳态值的90％或95%所需的时间。</li><li>响应时间$t_s$。输入量开始起作用到输出进入规定的稳定值范围所需的时间，一般与规定误差一同给出。(读数等待时间)</li><li>超调量$\sigma_p$。指输出第一次达到稳定值又超出稳定值而出现的最大偏差，用相对稳定值的百分比来表示，如$\sigma_p=y_m/y(\infty)$为20％。</li><li>峰值时间$t_p$。传感器输出值由零上升超过稳定值，到达第一个峰值所需要的时间</li></ul><h2 id="传感器的标定"><a href="#传感器的标定" class="headerlink" title="传感器的标定"></a>传感器的标定</h2><p>标定：</p><p>利用已知量输入到传感器，测量其相应输出量，进而<strong>得到传感器输出−输入特性</strong>的过程。 </p><p>校准：</p><p>传感器使用或存储后的性能<strong>复测</strong>。校准与标定本质相同。</p><p>目的：</p><p>通过实验和实验数据处理得到传感器数学模型及性能指标。</p><p>标定系统：</p><p>标定实际是针对整个传感器系统的实验，需构建相应系统。 </p><h2 id="传感器的精度，精密度、不确定度概念"><a href="#传感器的精度，精密度、不确定度概念" class="headerlink" title="传感器的精度，精密度、不确定度概念"></a>传感器的精度，精密度、不确定度概念</h2><p><strong>精度：</strong>即精确度(accuracy)，指测量被测量得到的某一<strong>测量值与该被测量真值的符合程度</strong>。真值已知时才有意义。 </p><p><strong>精密度：</strong>指<strong>测量的重复程度</strong>，即对某一稳定的被测量，由同一测量者，在相同条件下，连续重复测量多次得到测量结果的分散程度。精密度不需知道被测量的真值。 </p><p><strong>不确定度：</strong>指对应于某一<strong>测量值的一个区间</strong>，任何重复性的测量结果将出现在这一区间内。</p><p><strong>不确定度区间</strong>通过对实验结果进行<strong>不确定度估计</strong>得到。</p><p>用不确定度表达测量结果时，应尽可能将不确定度的区间缩小，再加上置信概率(测量值落在该区间的可能程度)</p><h2 id="传感器设计和选用的三原则"><a href="#传感器设计和选用的三原则" class="headerlink" title="传感器设计和选用的三原则"></a>传感器设计和选用的三原则</h2><p>整体需要原则</p><p>高可靠性原则 </p><p>高性价比原则  </p><ol><li>依据测量对象和使用条件确定传感器类型</li><li>线性范围与量程【量程是否满足要求，并考虑使用过程中使传感器尽可能处在最佳工作段（一般为满量程的2/3以上处）和过载量】</li><li>灵敏度【在线性范围内传感器的灵敏度足够高，使得相同输入下的输出较大，有利于后续处理。但灵敏度太高，外界混入噪声容易，幅度也大，容易使测量系统进入非线性区，影响测量精度】</li><li>精度</li><li>频率响应特性【频率响应范围宽，同时希望传感器的响应延迟越短越好。】</li><li>稳定性【适应环境；减小环境影响】</li></ol><h2 id="传感器类型-1"><a href="#传感器类型-1" class="headerlink" title="传感器类型"></a>传感器类型</h2><p>按变换分类：</p><ul><li>一类将被测量直接转换为电量，即敏感元件一次完成变换；</li><li>一类借助电、磁、光、热、位移、力等物理量之间的相互转换最后转换成电量，即敏感元件将被测量转换为中间量，再由转换元件变换为电量。</li></ul><p>按构成分类：</p><ul><li><strong>基本型</strong>的将光、磁、热、力、气体等量变换成电量；</li><li><strong>组合型</strong>的组合、应用基本型的器件经过二次或以上的转换，最终变换为电量。</li></ul><h2 id="电阻传感"><a href="#电阻传感" class="headerlink" title="电阻传感"></a>电阻传感</h2><p>用敏感电阻被测量的变化转换成电阻值变化</p><h3 id="偏转法"><a href="#偏转法" class="headerlink" title="偏转法"></a>偏转法</h3><p>用恒压源供电测电阻电流，或用恒流源供电测电阻电压(恒流激励电阻测量法)；两者是最简单的偏转法。</p><h3 id="双读数法-比例法-："><a href="#双读数法-比例法-：" class="headerlink" title="双读数法(比例法) ："></a>双读数法(比例法) ：</h3><p>先读固定电阻的端电压<em>U</em>r=<em>IR</em>r，再读串接的待测电阻端电压<em>U</em>o=<em>IR</em>o；</p><h3 id="分压法"><a href="#分压法" class="headerlink" title="分压法"></a>分压法</h3><p>用于测阻值变化范围很大的以及非线性敏感的电阻检测方法</p><h3 id="电桥法"><a href="#电桥法" class="headerlink" title="电桥法"></a>电桥法</h3><p>惠斯通电桥常用于测量小的阻值变化。</p><p>采用远距离传感器进行高精度测量时，必须考虑引线电阻影响（有的电阻受温度变化带来误差）。</p><p>惠斯通电桥的<strong>三引线平衡测量法</strong>可以克服上述问题</p><p><img src="image-20200831160631326.png" alt="image-20200831160631326"></p><ul><li>其引线1和3须相同且经受相同温度变化，引线2则无关紧要</li><li>前述四引线法可完全克服引线影响，但成本相对增加</li></ul><hr><p>不平衡电桥的非线性补偿法: <strong>差动测量</strong></p><p>电桥法(半桥)/电桥法(全桥)</p><p>全桥差动电路的输出也为线性，且灵敏度比半桥式高一倍。</p><script type="math/tex; mode=display">k=R_1/R_4=R_2/R_3</script><p><strong>对于k=1的电桥，灵敏度高，但非线性严重</strong></p><p>非线性问题的其他对策：</p><ol><li><p>牺牲灵敏度换线性，例如取k=10或更大，并提高供电电压以提高灵敏度；</p><p>受传感器自热限制，实际中宜采用小占空比的矩形电压作激励信号。</p></li><li><p><strong>用模拟或数字技术使输出线性化</strong>。</p></li></ol><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>测电阻的一般方法：偏差法、分压法、平衡和不平衡电桥法</li><li>电阻测量中的常见问题：自热和引线电阻影响、非线性、电源电压波动影响</li><li>常见对策：限制工作电流、三线或四线电阻法、降低灵敏度、采用差动电桥、借助A/D转换器进行比例测量。</li></ul><h2 id="电容传感"><a href="#电容传感" class="headerlink" title="电容传感"></a>电容传感</h2><ul><li>变极距的电容传感器的灵敏度与极距平方成反比，以极距变化为输入可得到高灵敏度。</li><li>对于变电介质的电容位移传感器，传感器电容与输入位移呈线性关系。</li></ul><p>差动方式降低非线性，同时使灵敏度提高1倍</p><hr><h3 id="作用形式："><a href="#作用形式：" class="headerlink" title="作用形式："></a>作用形式：</h3><ul><li>直接作用式<ul><li>电容变换器，不需弹性元件，直接感受被测量</li><li>例如测量引起电容两极板之间介质的介电常数变化的因素</li></ul></li><li>间接作用式<ul><li>电容传感器由弹性元件与电容变换器组成。</li><li>由敏感元件感受被测量，输出中间变量，如极板间距变化或有效面积变化，电容变换器再将中间变量转换为电容变化输出。</li></ul></li></ul><h3 id="测量"><a href="#测量" class="headerlink" title="测量"></a>测量</h3><p>影响电容测量的主要因素：</p><ul><li><strong>激励频率</strong>：</li></ul><p>低频时电容器呈电阻特性、高频呈容性和感性；激励频率高，对测量电路输入阻抗的要求低，利于测量，但过高时对电路要求高、功耗相对大；频率应适中。</p><ul><li><strong>激励信号</strong>:</li></ul><p>常用方波，但其响应输出带宽需比激励信号频率高10倍以上，而其他波形的响应输出带宽一般为1/2或1/3，以正弦波为激励，测量精度高，但功耗也高。</p><ul><li>连接电缆/导线带来的<strong>寄生电容</strong>（分布式）：</li></ul><p>寄生电容与传感电容并联，且容量可能与信号电容平级或更大，因此，其影响很大。对策：尽量缩短连线。</p><hr><p>主要测量电路：各种<strong>振荡器、电桥、充/放电</strong>等，从克服寄生电容影响和微型化及其他性能考虑，集成化方式实现为最好</p><h4 id="振荡器式检测电路"><a href="#振荡器式检测电路" class="headerlink" title="振荡器式检测电路"></a>振荡器式检测电路</h4><p>原理：<strong>使振荡器频率受敏感电容控制</strong>，转换为<strong>测频率</strong>问题；</p><p>常用类型：RC振荡器式和LC振荡器式。</p><p>RC式特点：简单，但频率稳定性不高、灵敏度较低，不适于分辨率高于0.01pF的场合。</p><p>RC张弛振荡器<strong>将电容转为频率或脉宽</strong>，但易受杂散或电缆电容影响。</p><p>将<strong>张弛振荡器与数字电路结合</strong>，使抑制高、低频干扰的能力强，振荡频率稳定，不受寄生电容影响，有效提高精度。</p><h4 id="充-放电式电路："><a href="#充-放电式电路：" class="headerlink" title="充/放电式电路："></a>充/放电式电路：</h4><p>利用方波控制电路中的模拟开关，实现对被测电容的充/放电控制，形成受控的波形宽度</p><h2 id="电感"><a href="#电感" class="headerlink" title="电感"></a>电感</h2><p>以磁场为媒介或基于电磁感应，利用被测量产生或引起的<strong>磁阻变化</strong>使传感线圈的电感变化实现感测。</p><blockquote><p>性能特点：</p><p>结构简单可靠，输出功率大，抗干扰能力强，对工作环境要求不高，灵敏度和分辨力较高，传感器输出信号强，线性度和重复性较好；但频率响应低、不宜快速动态测量、尺寸因线圈限制难以减小</p></blockquote><h3 id="自感式传感器"><a href="#自感式传感器" class="headerlink" title="自感式传感器"></a>自感式传感器</h3><p>将被测非电量的变化转换成自感变化，在线圈形状及线圈匝数不变的情况下，可通过变磁阻实现自感系数变化。</p><h4 id="变气隙型自感式传感器"><a href="#变气隙型自感式传感器" class="headerlink" title="变气隙型自感式传感器"></a>变气隙型自感式传感器</h4><p>传感器的衔铁因被测体带动而产生同步位移时，引起磁路中气隙磁阻相应变化，导致线圈电感变化。</p><p>特点：</p><p>灵敏度高，但非线性严重，只能用于小位移测量。</p><h4 id="气隙面积变化型自感式传感器"><a href="#气隙面积变化型自感式传感器" class="headerlink" title="气隙面积变化型自感式传感器"></a>气隙面积变化型自感式传感器</h4><p>根据电感与磁路磁阻的关系，当<em>d</em> 固定，改变气隙导磁面积<em>S</em>0时，<em>L</em> 随 <em>S</em>0变化。当衔铁随被测量只产生左右位移D<em>x</em>时，<em>L</em>是位移D<em>x</em>的单值函数。</p><p>特点：<br><strong>输入与输出为线性关系</strong>，但可测的线性范围受磁路限制而有限。</p><h4 id="螺管型自感式传感器"><a href="#螺管型自感式传感器" class="headerlink" title="螺管型自感式传感器"></a>螺管型自感式传感器</h4><p>传感器的螺管线圈中插入一活动衔铁，衔铁在螺管中运动时磁阻变化引起<em>L</em>变化。该类传感器实际常用差动结构。</p><blockquote><p>初始时，铁芯置于两线圈</p><p>中央，当铁芯移动时，两线圈的电感产生</p><p>相反方向的增、减，然后将两个电感接入</p><p>测量电桥的相邻桥臂，可得比单线圈工作</p><p>方式更高的灵敏度和更好的线性度。</p></blockquote><h3 id="互感式传感器"><a href="#互感式传感器" class="headerlink" title="互感式传感器"></a>互感式传感器</h3><p><strong>互感式传感器实质是变压器</strong>，其一次线圈接稳定的交流激励，二次线圈因感应产生相应输出；被测位移或转角等使互感变化，输出电压随之变化。</p><p>其二次侧常用两个线圈反串联接成差动形式，这种传感器又称差动变压器。</p><p>实用较多的是<strong>螺管式差动变压器</strong></p><blockquote><p>零点残余电压(零残)：实际中铁芯居中时<em>e</em>o＝<em>U</em>0，不为零, <em>U</em>0即零残。</p><p>原因：两个二次线圈的电气参数不可能完全相同、制作结构不对称以及铁芯的磁化曲线存在非线性。</p><p>影响：零点残余电压使传感器在零点附近不灵敏，并可能使后接放大器提前饱和，可能使某些执行机构产生误动作。</p><p>对策：有各种补偿电路，其中差动变压器输出端接相敏检波电路，可判断铁芯位移方向，也能消除零点残余电压。</p></blockquote><h3 id="电涡流式传感器"><a href="#电涡流式传感器" class="headerlink" title="电涡流式传感器"></a>电涡流式传感器</h3><p>原理：金属块置于变化磁场中或在磁场中运动时，金属导体内部会产生感应电流，这种在导体内是自身闭合的电流称为电涡流或涡流。</p><p>可对一些参数进行<strong>非接触</strong>连续测量</p><p>传感器类型：</p><ol><li>高频反射式，常用来测位移、振动等物理量；</li><li>低频透射式，多用于材料厚度测量。</li></ol><h3 id="电感参数测量"><a href="#电感参数测量" class="headerlink" title="电感参数测量"></a>电感参数测量</h3><h4 id="单线圈参数"><a href="#单线圈参数" class="headerlink" title="单线圈参数"></a>单线圈参数</h4><p>测量方式主要有<strong>调幅式和调频式</strong>。</p><p>单线圈工作的传感器的测量电路常用交流电桥。</p><hr><h5 id="调频式测量与电路："><a href="#调频式测量与电路：" class="headerlink" title="调频式测量与电路："></a>调频式测量与电路：</h5><p>传感线圈接入LC振荡器回路，间距改变时，在涡流影响下<strong>传感线圈的电感变化导致振荡频率变化</strong>。</p><h5 id="调幅式测量："><a href="#调幅式测量：" class="headerlink" title="调幅式测量："></a>调幅式测量：</h5><p>传感线圈和测量电路的电容<em>C</em>并联组成谐振回路。石英晶振起恒流源作用。</p><h4 id="双线圈（差动）"><a href="#双线圈（差动）" class="headerlink" title="双线圈（差动）"></a>双线圈（差动）</h4><p>差动自感传感器的测量电路主要采用<strong>两个敏感线圈的交流桥</strong>。</p><p>差动互感传感器则将两二次线圈反串连接输出；为辨别铁芯移动方向和消除零残，常用<strong>差动整流或相敏检波电路</strong>。</p><h1 id="Chap6-物理效应传感器"><a href="#Chap6-物理效应传感器" class="headerlink" title="Chap6 物理效应传感器"></a>Chap6 物理效应传感器</h1><p>物理效应传感器</p><p>常用的物理效应：</p><ul><li>弹性效应</li></ul><h2 id="弹性效应"><a href="#弹性效应" class="headerlink" title="弹性效应"></a>弹性效应</h2><p>弹性材料在<strong>弹性变形范围</strong>内能感受相应的力作用而产生弹性变形，外力消失后又能恢复原状的现象。</p><p>压力- 位移特性是<strong>非线性关系</strong>。</p><h3 id="基本特性"><a href="#基本特性" class="headerlink" title="基本特性"></a>基本特性</h3><h4 id="刚度："><a href="#刚度：" class="headerlink" title="刚度："></a>刚度：</h4><p>弹性元件产生<strong>单位位移所需的力</strong>(或压力)；它反映弹性元件受外力作用时<strong>抵抗变形</strong>的能力。用符号<em>k</em>表示，则：</p><script type="math/tex; mode=display">k=\lim\limits_{\Delta\omega\to0}\frac{\Delta F}{\Delta \omega}=\frac{dF}{d\omega}</script><h4 id="灵敏度："><a href="#灵敏度：" class="headerlink" title="灵敏度："></a>灵敏度：</h4><p>作用于弹性元件上单位力（或压力）所产生的变形；它是刚度的倒数；用符号K代表，</p><script type="math/tex; mode=display">K=\frac{d\omega}{dF}\</script><p><strong>若弹性特性为线性，则灵敏度为常数</strong>；弹性特性为非线性，则灵敏度为变数，也即表示此弹性元件在弹性变形范围内，各种受力情况下的变形量不相等。</p><h4 id="固有频率"><a href="#固有频率" class="headerlink" title="固有频率:"></a>固有频率:</h4><p>弹性元件的动态特性很大程度上由其固有频率决定，为减少动态误差应提高其固有频率。但实际计算时只给出<strong>最低固有频率</strong>，也可用下式估算：</p><script type="math/tex; mode=display">\begin{gather}f=\frac{1}{2\pi}\sqrt{\frac{k}{m_e}}\\\\m_e为元件的等效质量\end{gather}</script><h4 id="其他因素"><a href="#其他因素" class="headerlink" title="其他因素"></a>其他因素</h4><p><strong>材料性能</strong>影响弹性元件的特性；<strong>元件结构</strong>对其功能和性能有影响；<strong>温度变化</strong>会改变材料的弹性模量。</p><h2 id="电阻应变效应"><a href="#电阻应变效应" class="headerlink" title="电阻应变效应"></a>电阻应变效应</h2><p>电阻应变是<strong>力作用的结果</strong>，涉及<strong>应力</strong>、<strong>应变</strong>、<strong>弹性模量</strong>和<strong>泊松比</strong>等概念。</p><ul><li><p>应力：</p><p>力/受力面积；应力为正，表物体受到拉力作用；应力为负，表示物体受压。应力作用的结果是使物体产生应变。 </p></li><li><p>应变：</p><p>应力所致长度变化/未加应力时的原长。</p></li><li><p>应变与应力呈线性关系，其斜率为物体的弹性模量E=应力/应变</p></li><li><p>对于线性拉伸或压缩，弹性模量称为杨氏模量E；</p><p>对于剪应力，相关的弹性模量称为剪切模量S。</p></li></ul><h3 id="应变效应"><a href="#应变效应" class="headerlink" title="应变效应"></a>应变效应</h3><p>元件受力作用产生应变时，其电阻值发生变化的现象称应变效应；此效应工作的元件称应变片。</p><p>灵敏系数k定义为<strong>电阻的相对变化与应变之比</strong>，即：$k=(\Delta R/R_0)/\varepsilon_L$,   其中R<sub>0</sub>是无应变时的电阻。</p><p>应变片的电阻变化可用下式表示：</p><script type="math/tex; mode=display">\Delta R/R_0=(1+2\mu)\varepsilon_L+C(1-2\mu)\varepsilon_L=k\varepsilon_L\\\\元件的纵向应变\varepsilon_L=\frac{\Delta l}{l}</script><p><strong>可知，金属材料的应变效应主要由结构尺寸变化造成，灵敏系数主要由$(1+2\mu)$决定</strong></p><h3 id="金属应变片"><a href="#金属应变片" class="headerlink" title="金属应变片"></a>金属应变片</h3><p>金属电阻应变片的<strong>组成</strong>：</p><p>保护片+敏感栅+基底+引线</p><blockquote><p>敏感栅为金属丝或箔，粘贴在绝缘基底上，上面再贴一层绝缘保护片，然后在敏感栅的两引出点引线</p></blockquote><p>灵敏系数：敏感栅存在横向效应等因素影响，使<strong>应变片的灵敏系数小于敏感栅材料的灵敏系数</strong>。</p><p>通常应变片的灵敏系数通过实验由给定应变下的电阻值变化确定，即：$K=(\Delta R/R)/\varepsilon$。</p><h3 id="半导体应变片"><a href="#半导体应变片" class="headerlink" title="半导体应变片"></a>半导体应变片</h3><p>半导体应变片主要基于半导体的压阻效应，直接用<strong>单晶锗或硅</strong>等材料经切割、研磨、切条、接引线、粘贴等工艺制成。</p><p>相对金属应变片，半导体应变片的<strong>灵敏度系数很高，温度稳定性和重复性差</strong>。     </p><h3 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h3><ul><li><p>金属应变片的应变效应以结构尺寸变化为主，灵敏系数相对小；</p></li><li><p>半导体应变片的应变效应主要基于电阻率变化(压阻效应)，其灵敏系数大。</p></li></ul><p>应变片的应用：主要用于<strong>结构应力、应变分析和作转换元件</strong></p><blockquote><p>在第一类应用中，将应变片贴于待测构件的测量部位，测量构件的应力或应变</p><p>在第二类应用中，应变片作为转换元件贴于弹性元件上，与弹性元件组合实现测量力/压力及位移、加速度的传感器</p></blockquote><p>应变电阻测量常用<strong>电桥法</strong>。</p><p>为提高灵敏度、克服非线性，常用<strong>半桥差动</strong> 或<strong>全桥差动</strong> 方式。</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>测量范围广</li><li>线性度好，精度较高，误差可小于0.1%或更小</li><li>频响好</li><li>性能稳定，工作可靠，性价比高</li><li>适应恶劣环境、大加速度和振动条件</li></ul><p>须考虑横向效应所致<strong>横向灵敏度与补偿温度影响</strong></p><h2 id="压阻效应"><a href="#压阻效应" class="headerlink" title="压阻效应"></a>压阻效应</h2><p>即<strong>半导体晶体受力作用后阻值增加或减小</strong>的现象。</p><blockquote><p>本征半导体的压阻效应机理：半导体因受机械力作用，使<strong>晶格间隔改变</strong>，从而引起其<strong>禁带宽度(电子运动的能级)变化</strong>从而导致电阻变化。 </p></blockquote><p>压阻元件基于压阻效应，在半导体材料基片上经<strong>扩散电阻</strong>而制成。作为敏感元件的基片受外力作用而变形，使基片上的扩散电阻组成的电桥产生不平衡输出。</p><h3 id="压阻系数"><a href="#压阻系数" class="headerlink" title="压阻系数"></a>压阻系数</h3><h3 id="固态压阻器件"><a href="#固态压阻器件" class="headerlink" title="固态压阻器件"></a>固态压阻器件</h3><h2 id="压电效应"><a href="#压电效应" class="headerlink" title="压电效应"></a>压电效应</h2><p>外力沿压电材料特定的晶向作用使晶体变形，使得相对的晶面上产生电荷，去掉外力后压电材料又重回不带电状态，这种由<strong>外力作用而使材料产生电极化</strong>的现象称为<strong>正压电效应</strong>。</p><p>压电效应可逆。</p><p>在压电材料特定晶向<strong>施加电场时，不仅有极化现象发生，还产生机械形变</strong>；去掉电场，应力和形变也随之消失，这种现象称为<strong>逆压电效应</strong>。</p><h4 id="压电元件的等效电路和测量电路"><a href="#压电元件的等效电路和测量电路" class="headerlink" title="压电元件的等效电路和测量电路"></a>压电元件的等效电路和测量电路</h4><h4 id="压电式压力传感器"><a href="#压电式压力传感器" class="headerlink" title="压电式压力传感器"></a>压电式压力传感器</h4><h4 id="压电式加速度传感器"><a href="#压电式加速度传感器" class="headerlink" title="压电式加速度传感器"></a>压电式加速度传感器</h4><h2 id="光电效应"><a href="#光电效应" class="headerlink" title="光电效应"></a>光电效应</h2><p>物质<strong>在光照作用下释放电子</strong>的现象称为光电效应；</p><h3 id="外光电效应："><a href="#外光电效应：" class="headerlink" title="外光电效应："></a>外光电效应：</h3><p>光照射使电子逸出金属表面的现象。</p><h3 id="内光电效应："><a href="#内光电效应：" class="headerlink" title="内光电效应："></a>内光电效应：</h3><p>物质受到光照时其内部原子释放的电子留在体内，使物质的电导率变化或产生光生电动势的现象。</p><h4 id="光电导效应"><a href="#光电导效应" class="headerlink" title="光电导效应"></a>光电导效应</h4><h4 id="光生伏特效应"><a href="#光生伏特效应" class="headerlink" title="光生伏特效应"></a>光生伏特效应</h4><h4 id="光电器件"><a href="#光电器件" class="headerlink" title="光电器件"></a>光电器件</h4><h5 id="光电池"><a href="#光电池" class="headerlink" title="光电池"></a>光电池</h5><h5 id="光敏二极管"><a href="#光敏二极管" class="headerlink" title="光敏二极管"></a>光敏二极管</h5><h5 id="光敏三极管"><a href="#光敏三极管" class="headerlink" title="光敏三极管"></a>光敏三极管</h5><h5 id="光敏电阻"><a href="#光敏电阻" class="headerlink" title="光敏电阻"></a>光敏电阻</h5><h4 id="光电器件的主要特性"><a href="#光电器件的主要特性" class="headerlink" title="光电器件的主要特性"></a>光电器件的主要特性</h4><h5 id="光照特性"><a href="#光照特性" class="headerlink" title="光照特性"></a>光照特性</h5><h5 id="光谱特性"><a href="#光谱特性" class="headerlink" title="光谱特性"></a>光谱特性</h5><h5 id="响应时间"><a href="#响应时间" class="headerlink" title="响应时间"></a>响应时间</h5><h5 id="温度特性"><a href="#温度特性" class="headerlink" title="温度特性"></a>温度特性</h5><h5 id="峰值探测率"><a href="#峰值探测率" class="headerlink" title="峰值探测率"></a>峰值探测率</h5><h4 id="典型集成光电检测器件"><a href="#典型集成光电检测器件" class="headerlink" title="典型集成光电检测器件"></a>典型集成光电检测器件</h4><h3 id="光电传感器的构成与类型"><a href="#光电传感器的构成与类型" class="headerlink" title="光电传感器的构成与类型"></a>光电传感器的构成与类型</h3><h4 id="构成"><a href="#构成" class="headerlink" title="构成"></a>构成</h4><h4 id="常用光源"><a href="#常用光源" class="headerlink" title="常用光源"></a>常用光源</h4><h4 id="光电传感器类型"><a href="#光电传感器类型" class="headerlink" title="光电传感器类型"></a>光电传感器类型</h4><h2 id="红外传感原理与探测器"><a href="#红外传感原理与探测器" class="headerlink" title="红外传感原理与探测器"></a><strong>红外传感原理与探测器</strong></h2><p>红外光的最大特点：存在光热效应、辐射热量。</p><h3 id="红外测温原理"><a href="#红外测温原理" class="headerlink" title="红外测温原理"></a>红外测温原理</h3><h4 id="基尔霍夫定律"><a href="#基尔霍夫定律" class="headerlink" title="基尔霍夫定律"></a>基尔霍夫定律</h4><h4 id="普朗克定律"><a href="#普朗克定律" class="headerlink" title="普朗克定律"></a>普朗克定律</h4><h4 id="维恩位移定理"><a href="#维恩位移定理" class="headerlink" title="维恩位移定理"></a>维恩位移定理</h4><h4 id="斯特藩−波尔兹曼定律"><a href="#斯特藩−波尔兹曼定律" class="headerlink" title="斯特藩−波尔兹曼定律"></a>斯特藩−波尔兹曼定律</h4><h3 id="红外探测器分类"><a href="#红外探测器分类" class="headerlink" title="红外探测器分类"></a>红外探测器分类</h3><p>基于热效应的<strong>热探测器</strong>, 如热释电探测器、热电偶、热电阻、气动探测器等；<br>基于光电效应的<strong>光子探测器</strong>, 如光电导探测器、光生伏特探测器、光电子探测器等。</p><blockquote><p><strong>光子探测器</strong>比热探测器反应灵敏，响应快得多，一般响应时间为10−9s或更短; 热探测器在ms级以上；要在很低温度下工作，需配致冷器, 是选择(光谱)性探测器.</p><p><strong>热探测器</strong>在室温下工作不需制冷；在整个红外波段可有平坦的光谱响应(又称无选择性探测器)</p></blockquote><h3 id="红外探测器性能参数"><a href="#红外探测器性能参数" class="headerlink" title="红外探测器性能参数"></a>红外探测器性能参数</h3><h4 id="响应率"><a href="#响应率" class="headerlink" title="响应率"></a>响应率</h4><h4 id="光谱响应"><a href="#光谱响应" class="headerlink" title="光谱响应"></a>光谱响应</h4><h4 id="噪声等效功率"><a href="#噪声等效功率" class="headerlink" title="噪声等效功率"></a>噪声等效功率</h4><h4 id="探测率"><a href="#探测率" class="headerlink" title="探测率"></a>探测率</h4><h4 id="响应时间-1"><a href="#响应时间-1" class="headerlink" title="响应时间"></a>响应时间</h4><h2 id="光纤传感"><a href="#光纤传感" class="headerlink" title="光纤传感"></a>光纤传感</h2><p>在传光过程中，光纤易受外界因素如压力、温度、电磁场等变化影响，<strong>使光纤中光波的参数如光强、相位、频率等变化</strong>。测出光波参数的变化，可得相应的被测量。</p><h3 id="光纤种类"><a href="#光纤种类" class="headerlink" title="光纤种类"></a>光纤种类</h3><p><strong>按材料分类</strong>：多组分(材料成分)、石英系列、液芯和塑料等四类光纤</p><p><strong>按纤芯折射率分类</strong>：阶跃型(SIF)、渐变型(GIF)</p><p><strong>按传输模式数分类</strong>：分单模(SMF)和多模(MMF)光纤</p><h2 id="传光原理"><a href="#传光原理" class="headerlink" title="传光原理"></a>传光原理</h2><p>斯涅尔定律</p><h2 id="光纤特性"><a href="#光纤特性" class="headerlink" title="光纤特性"></a>光纤特性</h2><h3 id="光纤损耗"><a href="#光纤损耗" class="headerlink" title="光纤损耗"></a>光纤损耗</h3><h3 id="色散"><a href="#色散" class="headerlink" title="色散"></a>色散</h3><h2 id="光纤传感器分类"><a href="#光纤传感器分类" class="headerlink" title="光纤传感器分类"></a>光纤传感器分类</h2><h3 id="按光纤所起作用分类"><a href="#按光纤所起作用分类" class="headerlink" title="按光纤所起作用分类"></a>按光纤所起作用分类</h3><h4 id="功能（FF）型："><a href="#功能（FF）型：" class="headerlink" title="功能（FF）型："></a><strong>功能</strong>（FF）<strong>型</strong>：</h4><p>光纤既传光又作敏感元件。光纤受被测对象作用使光参量如光强、相位、偏振态等得到调制，携带了被测信息。</p><h4 id="非功能（NNF）型："><a href="#非功能（NNF）型：" class="headerlink" title="非功能（NNF）型："></a><strong>非功能</strong>（NNF）<strong>型</strong>：</h4><p>光纤只传光，入射和出射光纤之间有敏感元件，光纤不连续。对待测对象的调制由光转换敏感元件实现。</p><h3 id="按光纤中的光被调制的原理-光纤敏感原理-分类"><a href="#按光纤中的光被调制的原理-光纤敏感原理-分类" class="headerlink" title="按光纤中的光被调制的原理(光纤敏感原理)分类"></a>按光纤中的光被调制的原理(光纤敏感原理)分类</h3><h4 id="强度调制光纤传感器"><a href="#强度调制光纤传感器" class="headerlink" title="强度调制光纤传感器"></a>强度调制光纤传感器</h4><p>利用外界因素改变光纤中的光强，通过测光强变化来检测外界物理量。</p><h4 id="相位调制型光纤传感器"><a href="#相位调制型光纤传感器" class="headerlink" title="相位调制型光纤传感器"></a>相位调制型光纤传感器</h4><p>利用被测量改变光纤中光波相位，通过检测相位变化测量被测量。</p><blockquote><p>传感器中调制相位的常用物理效应：应变效应、光弹效应、磁致伸缩效应、声光效应、光热效应、萨格纳克效应等。</p></blockquote><h4 id="频率调制光纤传感器"><a href="#频率调制光纤传感器" class="headerlink" title="频率调制光纤传感器"></a>频率调制光纤传感器</h4><p>利用外界因素改变光频率，通过检测光频率变化测量被测量。频率调制并不改变光纤特性，光纤仅传输光。频率调制基于<strong>光学多普勒效应</strong>。</p><h4 id="偏振调制型光纤传感器"><a href="#偏振调制型光纤传感器" class="headerlink" title="偏振调制型光纤传感器"></a>偏振调制型光纤传感器</h4><p>单模光纤中的光是线偏振光可用<strong>两个相互垂直的偏振分量</strong>来等效。</p><p>偏振调制机制都包括：<strong>电光、磁光和光弹性</strong>这三种</p><h3 id="按测量对象分类"><a href="#按测量对象分类" class="headerlink" title="按测量对象分类:"></a>按测量对象分类:</h3><p>光纤压力、位移、温度、流量等传感器。</p><h2 id="光纤传感器的组成"><a href="#光纤传感器的组成" class="headerlink" title="光纤传感器的组成"></a>光纤传感器的组成</h2><p>基本组成：光源+光纤耦合器+光纤+光探测器等。</p><h3 id="光源"><a href="#光源" class="headerlink" title="光源"></a>光源</h3><h3 id="光纤耦合器"><a href="#光纤耦合器" class="headerlink" title="光纤耦合器"></a>光纤耦合器</h3><h3 id="光纤"><a href="#光纤" class="headerlink" title="光纤"></a>光纤</h3><h3 id="光探测器"><a href="#光探测器" class="headerlink" title="光探测器"></a>光探测器</h3><h2 id="磁电效应"><a href="#磁电效应" class="headerlink" title="磁电效应"></a>磁电效应</h2><p>根据电磁感应定律线圈感应电势大小取决于线圈匝数和穿过线圈的磁通变化率。磁通变化率与所加磁场强度、磁路磁阻及线圈相对于磁场的运动速度有关，改变任一参数，均导致电势变化，从而得到不同结构的磁电式（也称电动式）传感器。</p><h3 id="磁电式传感器分类："><a href="#磁电式传感器分类：" class="headerlink" title="磁电式传感器分类："></a>磁电式传感器分类：</h3><p>动圈式</p><p>动磁铁式</p><p>磁阻式</p><h2 id="霍尔效应"><a href="#霍尔效应" class="headerlink" title="霍尔效应"></a>霍尔效应</h2><h3 id="霍尔元件"><a href="#霍尔元件" class="headerlink" title="霍尔元件"></a>霍尔元件</h3><h3 id="霍尔元件的主要参数"><a href="#霍尔元件的主要参数" class="headerlink" title="霍尔元件的主要参数"></a>霍尔元件的主要参数</h3><h4 id="输入电阻和输出电阻"><a href="#输入电阻和输出电阻" class="headerlink" title="输入电阻和输出电阻"></a>输入电阻和输出电阻</h4><h4 id="额定控制电流Ic"><a href="#额定控制电流Ic" class="headerlink" title="额定控制电流Ic"></a>额定控制电流Ic</h4><h4 id="灵敏度"><a href="#灵敏度" class="headerlink" title="灵敏度"></a>灵敏度</h4><h4 id="磁场的线性"><a href="#磁场的线性" class="headerlink" title="磁场的线性"></a>磁场的线性</h4><h4 id="不平衡电压"><a href="#不平衡电压" class="headerlink" title="不平衡电压"></a>不平衡电压</h4><h4 id="温度特性-1"><a href="#温度特性-1" class="headerlink" title="温度特性"></a>温度特性</h4><p>补偿法I：输入端并联电阻</p><p>补偿法II：热敏电阻法</p><h2 id="磁电阻效应"><a href="#磁电阻效应" class="headerlink" title="磁电阻效应"></a>磁电阻效应</h2><h3 id="非磁体（半导体）的磁电阻效应"><a href="#非磁体（半导体）的磁电阻效应" class="headerlink" title="非磁体（半导体）的磁电阻效应"></a>非磁体（半导体）的磁电阻效应</h3><p>物理磁阻效应:弱磁场中材料电阻率随磁场增大的效应;<br>几何磁阻效应:由半导体形状改变引起的阻值变化效应</p><h3 id="强磁性金属的磁电阻效应"><a href="#强磁性金属的磁电阻效应" class="headerlink" title="强磁性金属的磁电阻效应"></a>强磁性金属的磁电阻效应</h3><h4 id="强磁阻效应"><a href="#强磁阻效应" class="headerlink" title="强磁阻效应"></a>强磁阻效应</h4><p>Ni-Fe、Ni-Co基合金等高磁导率的金属称强磁性金属，强磁场中强磁性金属的电阻率随磁场增强而减小</p><h4 id="定向-或各向异性-磁电阻（AMR）效应"><a href="#定向-或各向异性-磁电阻（AMR）效应" class="headerlink" title="定向(或各向异性)磁电阻（AMR）效应"></a>定向(或各向异性)磁电阻（AMR）效应</h4><p>在弱磁场中，当磁场强度大于某一值时，<strong>强磁性金属的电阻率与磁场强度无关，只与磁场和电流的方向夹角有关</strong>，磁阻呈各向异性，此现象称为<strong>AMR效应</strong>，即平行于外磁场方向的强磁性金属磁敏电阻的电流方向的电阻率和垂直外磁场方向的电流方向的电阻率发生变化的效应。</p><p>强磁性磁阻器件主要利用其<strong>定向磁阻效应</strong></p><h3 id="磁敏电阻元件-磁阻元件"><a href="#磁敏电阻元件-磁阻元件" class="headerlink" title="磁敏电阻元件(磁阻元件)"></a>磁敏电阻元件(磁阻元件)</h3><p>半导体材料确定的情况下，磁阻元件的电阻与磁感应强度成平方关系，仅适用磁场强度较弱的情况。在强磁场环境中，半导体阻值与磁感应强度呈线性关系。</p><h2 id="磁致伸缩效应"><a href="#磁致伸缩效应" class="headerlink" title="磁致伸缩效应"></a>磁致伸缩效应</h2><p>压磁效应是磁致伸缩效应的逆效应。</p><p>压磁应力灵敏度:   单位机械应力引起的磁导率相对变化</p><h2 id="热阻效应"><a href="#热阻效应" class="headerlink" title="热阻效应"></a>热阻效应</h2><p>物质<strong>电阻率随温度变化</strong>的现象。</p><h3 id="金属电阻"><a href="#金属电阻" class="headerlink" title="金属电阻"></a>金属电阻</h3><h3 id="半导体电阻"><a href="#半导体电阻" class="headerlink" title="半导体电阻"></a>半导体电阻</h3><h2 id="热电效应"><a href="#热电效应" class="headerlink" title="热电效应"></a>热电效应</h2><h3 id="热电效应（塞贝克效应）"><a href="#热电效应（塞贝克效应）" class="headerlink" title="热电效应（塞贝克效应）"></a>热电效应（塞贝克效应）</h3><h3 id="接触电势"><a href="#接触电势" class="headerlink" title="接触电势"></a>接触电势</h3><h3 id="温差电势"><a href="#温差电势" class="headerlink" title="温差电势"></a>温差电势</h3><p>综合上两式表明，两种不同电极材料可组成热电偶，热电偶回路中形成的热电势是热电偶两连接端的温度差的函数。</p><blockquote><p>热电偶的特点：敏感元件和转换元件为一体、直接将与被测温度对应的热能转换成电能、测温范围较宽。</p></blockquote><h2 id="热释电效应"><a href="#热释电效应" class="headerlink" title="热释电效应"></a>热释电效应</h2><h2 id="超声波传感器"><a href="#超声波传感器" class="headerlink" title="超声波传感器"></a>超声波传感器</h2><p>超声测距和物位测量是超声最成功的应用领域之一。</p><h3 id="超声波换能器"><a href="#超声波换能器" class="headerlink" title="超声波换能器"></a>超声波换能器</h3><p>习惯上把超声的发射和接收部分均称为超声波换能器。</p><ul><li><p>按结构分为直式换能器、斜式换能器等；</p></li><li><p>按作用原理分为压电式、磁致伸缩式、电磁式等。</p></li></ul><p>实用中压电式换能器最常见。</p><h2 id="声表面波原理-surface-acoustic-wave，SAW"><a href="#声表面波原理-surface-acoustic-wave，SAW" class="headerlink" title="声表面波原理(surface acoustic wave，SAW)"></a>声表面波原理(surface acoustic wave，SAW)</h2><h3 id="声表面波叉指换能器"><a href="#声表面波叉指换能器" class="headerlink" title="声表面波叉指换能器"></a>声表面波叉指换能器</h3><p>目前唯一实用SAW换能器，SAW传感器的关键器件</p><h3 id="声表面波谐振器"><a href="#声表面波谐振器" class="headerlink" title="声表面波谐振器"></a>声表面波谐振器</h3><p>SAW谐振器是SAW传感器的一个关键, 它由SAW振荡器(SAW resonator, SAWR)或SAW延迟线与放大器、匹配网络组成。SAWR由IDT及金属栅条式反射器构成</p>]]></content>
    
    
    <categories>
      
      <category>知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>复习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>汪洋</title>
    <link href="/blogsite/2020/08/28/%E6%B1%AA%E6%B4%8B/"/>
    <url>/blogsite/2020/08/28/%E6%B1%AA%E6%B4%8B/</url>
    
    <content type="html"><![CDATA[<p>和往常一样，今天的N城迎来了本周的第三个雨天。我对于这样的天气并不意外，大小不一的建筑，各形各色的人，花花绿绿的伞，这些东西我在这个城市已经太过熟悉。今天单位没有什么太多的事情，把最后一份维修报告的文件打印出来放到主任的桌子上，出门的时候关掉单位的灯和空调，临走前不要忘记往嘴里塞一颗薄荷糖，其他的倒也没什么了。为什么要塞薄荷糖？润色一下这颗有些潮湿的心。呵呵，想吃罢了。</p><p> <br/></p><p>我工作的地方在N城的中央，这里的短租房虽然价格贵，但是好在离公司不远，从中央车站搭上三号线，往林场方向跑两站就到了。如果说我的生活有什么有趣的事情，值得挂齿的就是我的楼下是一片汪洋。红灯区，唯一能够激起我作为一个男人的感兴趣的事情。实话实说吧，我对那些女人并不感兴趣，红灯区的存在也让这样一个陈旧的小区陷入了奇怪的氛围，我能做的就是快速的走开并尽快上楼，我不能够明白她们是怎样在脸上堆砌出那些奇怪笑容的，大概生活各有难处吧。低头不见抬头见，我家楼下的房客也是汪洋大海中的一条小鱼。</p><p>  <br/></p><p>老式小区，几层楼的高度不会有电梯的存在，这栋楼的走廊也成了唯一的我和那位房客为数不多的交集。她是一个离婚的女人，面容姣好，虽然看起来岁数已经不小了但是保养的很精致。我的注意点大多放在那个每天都很难准时回家的她的女儿的身上，时常能够在楼上听到她们母女俩的吵架，看来她的女儿并不是一个让她省心的人。偶尔想想，换作是我在这样的环境下上学读书，和这样的一个母亲在一起生活，想必我也不能接受吧。不知道为什么，似乎是因为天气的原因，她并没有开张。她站在门口，穿着很暴露的吊带衫，脸上挂着浓浓的妆，一份神情慌张的样子，看起来像是要出门。出于礼貌，上楼的我和她打了个照面。</p><p>  <br/></p><p>“回来了？挺早的嘛。”</p><p>“还好吧，工作不是很忙。”</p><p>  <br/></p><p>“外面雨大吗？”</p><p>“挺大的，和昨天一样。”</p><p>  <br/></p><p>在我和她快要擦肩而过的时候，她喊住了我。</p><p>  <br/></p><p>“帮我个忙可以吗？你知道的我女儿不是很听我话，她在离这里不远的F巷，昨晚她和同学一起鬼混的一夜没有回来。现在外面雨这么大，我想给她送把伞。”</p><p>  <br/></p><p>我背对着她没有作声。</p><p>  <br/></p><p>“你知道的……我穿成这样也不大好意思出门，我也担心我和女儿在发生什么争执，被别人看了笑话，本来就不是一个特别体面的人。不知道你方不方便帮我把她接回来。靠近年边了，家里多少也有一些囤货，你要不嫌弃的话，晚上可以一起吃顿便饭。”</p><p>  <br/></p><p>我并不是一个特别喜欢推脱的人，我转身笑笑拒绝了晚饭，但还是从她的手中接过伞答应把她女儿找回来。F巷很近，两个转角罢了。等我走到楼梯口时，她的女儿就站在我的面前。我拿着伞愣愣的看着她，她看了一眼我手中的伞。</p><p>  <br/></p><p>“我妈喊你来找我的？”</p><p>“嗯。”</p><p>“怎么？把我找回来她给你什么好处？”</p><p>“你妈不方便出门罢了，什么好处好处的。”</p><p>  <br/></p><p>“免费让你来一发作为报答吗？”</p><p>她露出了奇怪的笑容，这样的笑容和那些女人脸上所堆砌的笑有所不同，却又那么相似。她说的这些话是我从来没有想到的，但是我并不感到奇怪，现在我想做的只是赶紧把她领上楼带回去。</p><p>  <br/></p><p>“我像是这样的人吗？回吧，你妈妈还担心着呢。”</p><p>我笑了一下，笑自己也笑那个姑娘。准备转身上楼，心里还多少有一些侥幸，自己不需要撑着伞在雨中去慌忙的找一个并不熟悉的人，更何况自己独来独往惯了。</p><p>  <br/></p><p>女孩站在雨里，纹丝不动。雨水倾灌而下，她的长发挂在肩上，看起来像是在水中泡开的紫菜。我看她没动，想着叛逆期的女孩多少有些固执，我在楼道里把手向外伸出去，想着哄一下让她赶紧回家。女孩发了疯一般把我拽到她的旁边。她紧紧攥着我的手不放，每一根手指都紧紧的束缚着我，并且她用一种近乎仇敌般的眼神瞪了我一眼。</p><p>  <br/></p><p>“那我呢？那我呢？想过我吗？嗯？”</p><p>  <br/></p><p>我不知所措的站在雨里，和这个女孩一起。</p><p>  <br/></p><p>背后，这栋近五十年历史的老住宅楼像往常一样在雨中沉默无声，如同汪洋中一条即将搁浅在礁岸或是迷失于深海的小鱼。和往常不一样的，在五楼的窗口。女孩的母亲靠在窗前看着我，脸上泛出一丝与往日一般的笑。</p><p>  <br/></p><hr><p> <br/></p><p>“轰——”低沉的一声响雷，在潮湿的空气中震撼着我的鼓膜，击碎了我正在升温的朦胧梦境。楼下的靡靡之音，已经持续了半个午夜。</p><p>我听说，海洋中的氧气只会在大雨时增加。推开已经生了锈的半扇窗，让被雨洗刷两天的空气洗刷我孤独的躯体，尽管那声音毫无遮拦地闯进我的脑海。</p><p>也只有在这种时候，才能尽情释放我作为人的天性。因为，我早已能轻松分辨，这就是她的声音。我本来不喜欢雨，只有她，是我在这该死雨天的唯一慰藉。</p><p> <br/></p><p>我拉着女孩的手，快步跑回了楼道。</p><p>“我知道，我知道。但是不要淋雨嘛，容易感冒。先回去吧。”</p><p>女孩没有说话，神情并不情愿，但在我的要求下，还是任由我牵着她的手一起走上了五楼。</p><p>  <br/></p><p>她的母亲此刻正站在门前满脸懊恼，我问起缘由，她说：</p><p>“你拿的那把伞坏了，我正要下去拦住你换一把，出了门才发现忘带钥匙了，唉瞧我这记性。”</p><p>“那要不先来我家坐坐吧，她也可以先在我家洗澡。”</p><p>“那怎么好意思。”</p><p>“不洗会着凉的，而且反正我家也就我一个人，冷清着呢。”</p><p>“好吧，还不快谢谢人家？”她母亲向我抛了个媚眼然后眼神一凛看向了我身旁的她。</p><p>“谢谢哥哥。”她说完顿了一下，瞪了一眼她的母亲。</p><p>接着她拽着我的手腕，一言不发，拉着我迅速上了楼，将她母亲甩在了身后。她使了极大的力气，甚至令我的胳膊都有些疼痛，就像是拽着没有生命的重物。而她母亲嘴角的那一抹弧度，我没有一丝察觉。</p><p>  <br/></p><p>天色已晚，只能明天再找开锁师傅了。她母亲说去找朋友家借宿。</p><p>我家只有一张床，但沙发勉强可以睡一个人。在我的挽留下，女孩睡在我的卧室，而我在沙发上对付一晚。</p><p>  <br/></p><p>电视机的声音被雨夺去，闪烁的画面表明正在播放的是海洋鱼类纪录片。蓝莹莹的光在昏黑的夜里格外像一团鬼火，映着我蜷缩在沙发上的躯壳，像是一只钙化了的鹦鹉螺。</p><p>  <br/></p><p>“哥哥。”她站在卧室门口喊我。</p><p>我从昏沉中惊醒。她已走到我的身前。临时借她的白衬衫明显大了，包裹了她原本婀娜的身姿，头发散着，如青丝落雪，我见犹怜。她慢慢解开纽扣，轻抖左肩，滑落一片素，无瑕三尺酥。</p><p>  <br/></p><p>“这一次，我就不收费了哦。”这是我闭上双眼前听到的最后一句话。</p><p>  <br/></p><p>  <br/></p><p>“据研究，由于生存竞争加剧，小鱼有可能会在海底窒息。”电视上滚动字幕介绍着远洋科考队的新发现。</p><p>茫茫暴雨之下的汪洋之底，新落下了两粒晶莹的水滴，似乎，像海水一样苦涩而咸。</p>]]></content>
    
    
    <categories>
      
      <category>文</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小说</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据挖掘</title>
    <link href="/blogsite/2020/08/04/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    <url>/blogsite/2020/08/04/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/</url>
    
    <content type="html"><![CDATA[<p>期末考试前复习<code>数据挖掘与大数据分析</code>课程，做一个笔记总结，也以便以后查阅。</p><span id="more"></span><h1 id="Chapter-1-简介"><a href="#Chapter-1-简介" class="headerlink" title="Chapter.1 简介"></a>Chapter.1 简介</h1><p><a href="https://ke.qq.com/webcourse/index.html#cid=968590&amp;term_id=101064256&amp;taid=32603282&amp;lite=1&amp;vid=5285890804313344045">https://ke.qq.com/webcourse/index.html#cid=968590&amp;term_id=101064256&amp;taid=32603282&amp;lite=1&amp;vid=5285890804313344045</a></p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="什么是大数据？"><a href="#什么是大数据？" class="headerlink" title="什么是大数据？"></a>什么是大数据？</h3><p>大数据指，数据量规模巨大到无法通过传统数据库和软件技术在合理时间内处理、并整理成为人类所能解读的信息的，巨量的结构化或非结构化的数据。</p><h3 id="什么是数据挖掘？"><a href="#什么是数据挖掘？" class="headerlink" title="什么是数据挖掘？"></a>什么是数据挖掘？</h3><p>广义上指，从大量数据中挖掘有趣模式和知识的过程。</p><h2 id="大数据4V特征"><a href="#大数据4V特征" class="headerlink" title="大数据4V特征"></a>大数据4V特征</h2><ul><li><strong>Volume</strong> 数据规模大</li><li><strong>Velocity</strong> 数据流分析要求输入输出速度快</li><li><strong>Variety</strong> 数据有很多不同形式</li><li><strong>Veracity</strong> 数据的不准确性 [需要对数据的来源和类型进行验证，需要处理数据中的噪声和异常点，还要考虑到数据的暂时性，等等综合因素影响到数据的准确性和可信度]</li></ul><h2 id="数挖主要任务"><a href="#数挖主要任务" class="headerlink" title="数挖主要任务"></a>数挖主要任务</h2><ol><li>分类</li><li>聚类</li><li>关联规则挖掘</li><li>离群点检测</li></ol><h2 id="KDD过程"><a href="#KDD过程" class="headerlink" title="KDD过程"></a>KDD过程</h2><p><strong><em>数据挖掘是KDD的核心！</em></strong></p><p><img src="kdd.png" alt="kdd"></p><h1 id="Chapter-2-认识数据以及数据预处理"><a href="#Chapter-2-认识数据以及数据预处理" class="headerlink" title="Chapter.2 认识数据以及数据预处理"></a>Chapter.2 认识数据以及数据预处理</h1><h2 id="属性类型"><a href="#属性类型" class="headerlink" title="属性类型"></a>属性类型</h2><h3 id="分类型（Categorical）"><a href="#分类型（Categorical）" class="headerlink" title="分类型（Categorical）"></a>分类型（Categorical）</h3><p><strong>标称（Nominal）-（特殊：二元）</strong><br>例: ID 号、眼球颜色、邮政编码<br><strong>序数（ Ordinal ）</strong><br>例: 军阶 、 GPA、用 {tall, medium, short}表示的高</p><p>此两者一般为离散的。</p><h3 id="数值型（Numerical）"><a href="#数值型（Numerical）" class="headerlink" title="数值型（Numerical）"></a>数值型（Numerical）</h3><p><strong>区间（Interval）</strong><br>例: 日历、摄氏或华氏温度.<br><strong>比率（Ratio）</strong><br>例: 开氏温度、长度、计数</p><p>此两者一般为连续的。</p><hr><h3 id="离散属性-Discrete-Attribute"><a href="#离散属性-Discrete-Attribute" class="headerlink" title="离散属性(Discrete Attribute)"></a>离散属性(Discrete Attribute)</h3><p><strong>有限或无限可数个值</strong><br>例: 邮政编码、计数、文档集的词</p><p><strong>常表示为整数变量或字符串变量</strong>   </p><h3 id="连续属性-Continuous-Attribute"><a href="#连续属性-Continuous-Attribute" class="headerlink" title="连续属性(Continuous Attribute)"></a>连续属性(Continuous Attribute)</h3><p><strong>属性值为实数</strong><br>例: 温度、高度、重量</p><p><strong>实践中, 实数只能用有限位数字的数度量和表示.</strong></p><p><strong>连续属性一般用浮点变量表示</strong></p><hr><p><strong>二元属性(binary attributes)</strong></p><p>离散属性的特例<br>仅取两个不同值，常用0、1表示</p><h3 id="对称的二元属性"><a href="#对称的二元属性" class="headerlink" title="对称的二元属性"></a>对称的二元属性</h3><p>两个值有同等重要性</p><p>例：性别</p><h3 id="非对称的二元属性-重要"><a href="#非对称的二元属性-重要" class="headerlink" title="非对称的二元属性[重要!]"></a>非对称的二元属性[重要!]</h3><p>通常，一个值比另一个更重要<br><strong>重要的值通常比较少出现，通常用1表示</strong><br>例如，化验结果{阴性，阳性}，其中阳性较少，但更值得关注</p><h2 id="数据的统计描述"><a href="#数据的统计描述" class="headerlink" title="数据的统计描述"></a>数据的统计描述</h2><h3 id="中心性"><a href="#中心性" class="headerlink" title="中心性"></a>中心性</h3><ul><li><p>均值(mean)</p></li><li><p>众数(mode)</p><p>一个数据集中可能有多个众数</p></li><li><p>中位数(median)</p><p>近似值估计(线性插值方法)：</p><p><img src="image-20200804232835061.png" alt=""></p></li><li><p>中列数(midrange)</p><p><strong>数据集的最大和最小值的平均值</strong></p></li></ul><h3 id="散度"><a href="#散度" class="headerlink" title="散度"></a>散度</h3><ul><li><p>极差：max-min</p></li><li><p>四分位数(Quantile)：3个数将数据分成四等分</p></li><li><p>四分位数极差：Q3-Q1的距离</p></li><li><p>方差</p></li><li><p>标准差</p></li><li><p>五数概括：[min,Q1,median,Q3,max]</p><p>可以用<strong>盒图(boxplot)</strong>表示</p></li></ul><h2 id="相似性度量"><a href="#相似性度量" class="headerlink" title="相似性度量"></a>相似性度量</h2><h3 id="标称属性"><a href="#标称属性" class="headerlink" title="标称属性"></a>标称属性</h3><p>i与j两个对象相异度度量方法:</p><script type="math/tex; mode=display">\begin{gathered}d(i,j)=\frac{p-m}{p}\\\\m：状态相同的变量数目,p：变量总数\end{gathered}</script><p><strong>计算二元变量的相似度：</strong></p><p>首先获取列联表</p><div class="table-container"><table><thead><tr><th></th><th></th><th>对象j</th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td>1</td><td>0</td><td>sum</td></tr><tr><td><strong>对象i</strong></td><td>1</td><td>q</td><td>r</td><td>q+r</td></tr><tr><td></td><td>0</td><td>s</td><td>t</td><td>s+t</td></tr><tr><td></td><td>sum</td><td>q+s</td><td>r+t</td><td>p</td></tr></tbody></table></div><blockquote><p><strong>对称:</strong> 二元变量的两个状态具有同等价值</p><p><strong>不对称</strong>: 二元变量的两个状态的输出不是同样重要</p></blockquote><p><strong>对称</strong>二元变量的相异度计算——简单匹配：</p><script type="math/tex; mode=display">d(i,j)=\frac{r+s}{q+r+s+t}</script><p><strong>不对称</strong>二元变量的相异度计算：</p><blockquote><p><strong><em>对于非对称二元变量，负匹配数目t被忽略，即分母中删去0与0的匹配数。</em></strong></p></blockquote><script type="math/tex; mode=display">\begin{gathered}d(i,j)=\frac{r+s}{q+r+s}=1-\frac{q}{q+r+s}=1-Jaccard(i,j)\\\\Jaccard系数用于比较有限样本集之间的相似性，该系数越大，相似度越高。\end{gathered}</script><h3 id="数值属性"><a href="#数值属性" class="headerlink" title="数值属性"></a>数值属性</h3><p>常使用<strong>距离</strong>来度量两个数据对象之间的相异性</p><p><strong>闵可夫斯基(Minkowski)距离</strong>：</p><script type="math/tex; mode=display">\begin{gathered}d(i,j)=\sqrt[q]{|x_{i1}-x_{j1}|^{q}+|x_{i2}-x_{j2}|^{q}+\cdots+|x_{ip}-x_{jp}|^{q}}\\\\其中i和j是两个p-维数据对象(q为正整数)\end{gathered}</script><p><strong>曼哈顿(Manhattan)距离</strong>：上式中q=1</p><p><strong>欧几里德(Euclidean)距离</strong>：上式中q=2</p><p>另外距离也可以加权计算。</p><h3 id="数据标准化-归一化"><a href="#数据标准化-归一化" class="headerlink" title="数据标准化/归一化"></a>数据标准化/归一化</h3><h4 id="数据标准化："><a href="#数据标准化：" class="headerlink" title="数据标准化："></a>数据标准化：</h4><ol><li><p>计算平均绝对偏差</p><script type="math/tex; mode=display">\begin{gathered}s_{f}=\frac{1}{n}(|x_{1f}-m_{f}|+|x_{2f}-m_{f}|+\cdots+|x_{nf}-m_{f}|)\\\\其中m_{f}=\frac{1}{n}(x_{1f}+x_{2f}+\cdots+x_{nf})\end{gathered}</script></li><li><p>计算标准化的度量值</p><script type="math/tex; mode=display">Z_{if}=\frac{x_{if}-m_{f}}{s_{f}}</script></li></ol><p>使用<strong>平均绝对偏差</strong>比使用<strong>标准差</strong>更具有鲁棒性</p><h4 id="数据归一化-！！-："><a href="#数据归一化-！！-：" class="headerlink" title="数据归一化[！！]："></a>数据归一化[！！]：</h4><p>计算混合类型变量描述的对象的相异度的基本思想是，将不同类型的变量组合在单个相异度矩阵中, <strong>把所有变量转换到共同的值域区间[0.0, 1.0]上</strong> 。</p><ul><li>最大最小法</li></ul><script type="math/tex; mode=display">x'=\frac{x-x_{min}}{x_{max}-x_{min}}</script><ul><li>z-score</li></ul><script type="math/tex; mode=display">x'=\frac{x-\mu}{\sigma}</script><h3 id="其他相似性度量方式"><a href="#其他相似性度量方式" class="headerlink" title="其他相似性度量方式"></a>其他相似性度量方式</h3><p>余弦相似性（向量内积空间的夹角）<br>马氏距离 （考虑数据局部分布）<br>相关系数 （<a href="#相关分析：计算相关系数-皮尔逊系数">皮尔森系数</a>）<br>KL散度（数据分布比较） </p><h2 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h2><h3 id="数据清理-！！"><a href="#数据清理-！！" class="headerlink" title="数据清理[！！]"></a>数据清理[！！]</h3><ul><li>空缺值。<strong>用平均值或相近的样本平均值或用空值替代空缺值。</strong></li><li>处理噪声数据，删除孤立点。可用分箱、聚类、回归等方法处理噪声。</li></ul><h3 id="数据集成"><a href="#数据集成" class="headerlink" title="数据集成"></a>数据集成</h3><ul><li>冗余数据分析<ul><li>数值型：相关分析</li><li>标称型：卡方检验</li></ul></li><li>集成多个数据库、数据立方体或文件</li></ul><h4 id="相关分析：计算相关系数-皮尔逊系数"><a href="#相关分析：计算相关系数-皮尔逊系数" class="headerlink" title="相关分析：计算相关系数(皮尔逊系数)"></a>相关分析：计算相关系数(皮尔逊系数)</h4><script type="math/tex; mode=display">\begin{align}r_{A,B}&=\frac{\sum_{i=1}^{n}(a_{i}-\overline{A})(b_{i}-\overline{B})}{(n-1)\sigma_{A}\sigma_{B}}\\&=\frac{\sum_{i=1}^{n}(a_{i}b_{i})-n\overline{A}\overline{B}}{(n-1)\sigma_{A}\sigma_{B}}\\\\\sigma_{A}，\sigma_{B}&为各自标准差,\sum_{i=1}^{n}(a_{i}b_{i})=A\cdot B\end{align}\\</script><p>r=0不相关，r&gt;0正相关，r&lt;0负相关</p><h4 id="卡方检验-！！重要！！"><a href="#卡方检验-！！重要！！" class="headerlink" title="卡方检验[！！重要！！]"></a><strong>卡方检验[！！重要！！]</strong></h4><p>σij是(ai,bj)的观测频度（实际计数）<br>eij是(ai,bj)的期望频度（单位是次数）<br>N是数据元组的个数</p><script type="math/tex; mode=display">\begin{gathered}\chi^2=\sum_{i=1}^c\sum_{j=1}^r\frac{(\sigma_{ij}-e_{ij})^2}{e_{ij}}\\\\e_{ij}=\frac{count(A=a_{i})*count(b=b_{j})}{N}\\\\自由度:(c-1)*(r-1)\\\\\chi^2越大，两者无关系的概率越小，有关系的概率越大\end{gathered}</script><p><img src="chi-square.png" alt="chi-square"></p><h3 id="数据归约"><a href="#数据归约" class="headerlink" title="数据归约"></a>数据归约</h3><ul><li>得到数据集的压缩表示，但可以得到相同或相近的结果</li><li>数据归约策略：<ul><li>维归约:小波分析、PCA、特征筛选</li><li>数量归约：回归、聚类、采样、数据立方体聚集</li><li>数据压缩：使用变换</li></ul></li></ul><hr><p><strong>小波变换:</strong></p><p>保存小波较大的系数进行原始数据的压缩，主要用于图像分析中。</p><p><strong>PCA——Principal component analysis（主成分分析），K-L变换:</strong></p><p>基本思想是找到一个投影，其能表示数据的最大变化</p><h4 id="特征筛选-！！-用到信息熵"><a href="#特征筛选-！！-用到信息熵" class="headerlink" title="特征筛选[！！] 用到信息熵"></a>特征筛选[！！] 用到信息熵</h4><p><a name='信息熵'></a></p><p><strong>信息熵</strong>：刻画系统的混乱程度</p><script type="math/tex; mode=display">\begin{gathered}H(X)=-\sum_{i=1}^np(x_{i})\log p(x_{i})\\\\p(x_i)为X出现x_i的概率\end{gathered}</script><p>条件信息熵：在已知X的基础上需要多少信息来描述Y</p><script type="math/tex; mode=display">H(Y|X)=\sum_{x\in\chi}p(x)H(Y|X=x)</script><p><strong>信息增益</strong>：刻画在已知X的基础上需要节约多少信息来描述Y</p><script type="math/tex; mode=display">IG(Y|X)=H(Y)-H(Y|X)</script><p>特征筛选即<strong>选择对分类变量Y信息增益大的特征</strong>，删去信息增益小的特征。</p><h3 id="数据变换"><a href="#数据变换" class="headerlink" title="数据变换"></a>数据变换</h3><ul><li>规范化（归一化）和聚集</li></ul><h3 id="数据离散化"><a href="#数据离散化" class="headerlink" title="数据离散化"></a>数据离散化</h3><ul><li>将连续数据进行离散处理<ul><li>通过将属性域划分为区间，减少给定连续属性值的个数。区间的标号可以代替实际的数据值。</li></ul></li><li>用高层概念代替底层属性值<ul><li>通过使用高层的概念（比如：青年、中年、老年）来替代底层的属性值（比如：实际的年龄数据值）来规约数据。</li></ul></li></ul><h1 id="Chapter-3-关联规则挖掘"><a href="#Chapter-3-关联规则挖掘" class="headerlink" title="Chapter.3 关联规则挖掘"></a>Chapter.3 关联规则挖掘</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><ul><li><p>关联规则挖掘</p><ul><li>产生频繁项集：发现满足最小支持度阈值的所有项集，这些项集称作频繁项集。</li><li>产生规则：从上一步发现的频繁项集中提取<strong>所有高置信度</strong>的规则，这些规则称作<strong>强规则</strong>（strong rule）。</li></ul></li><li><p>频繁模式：数据库中频繁出现的项集。</p></li><li><p>项集(Itemset)：包含0个或多个项的集合。包含k个项的项集称为k-项集。</p></li><li><p>支持度计数(Support Count)：包含特定项集的事务个数。</p></li><li><p>支持度(Support)：包含项集的事务数与总事务数的比值。</p></li><li><p>关联规则：关联规则是形如 X→Y的蕴含表达式, 其中 X 和 Y 是不相交的项集<br>例子:    {Milk, Diaper} → {Beer} </p><ul><li>支持度 support (X→Y): 确定<strong>项集的频繁程度</strong>。<script type="math/tex; mode=display">\begin{gathered}support(X\rightarrow Y)=P(X\cup Y)\\\\P(X\cup Y) 表示事务包含集合A和B中每个项的概率 \end{gathered}</script></li></ul></li><li><p>置信度confidence(X→Y)：确定<strong>Y在包含X的事务中出现的频繁程度</strong>。</p><script type="math/tex; mode=display">  confidence(X\rightarrow Y)=P(X|Y)=\frac{support(X\cup Y)}{support(X)}</script></li></ul><h2 id="Apriori算法"><a href="#Apriori算法" class="headerlink" title="Apriori算法"></a>Apriori算法</h2><h3 id="基本思想"><a href="#基本思想" class="headerlink" title="基本思想"></a>基本思想</h3><p><strong>如果一个项集是频繁的，则它的所有子集一定也是频繁的。相反，如果一个项集是非频繁的，则它的所有超集也一定是非频繁的</strong>。</p><blockquote><p>这种基于支持度度量修剪指数搜索空间的策略称为<strong>基于支持度的剪枝</strong>（support-based pruning）。</p><p>这种剪枝策略依赖于支持度度量的一个关键性质，即一个项集的支持度决不会超过它的子集的支持度。这个性质也称为<strong>支持度度量的反单调性</strong>（anti-monotone）。</p></blockquote><h3 id="Apriori流程和计算-！！！！"><a href="#Apriori流程和计算-！！！！" class="headerlink" title="Apriori流程和计算[！！！！]"></a>Apriori流程和计算[！！！！]</h3><p>由长度为k的频繁项集（通过连接，剪枝）产生长度为 (k+1) 的候选项集, 并且根据 DB扫描筛选这些候选。</p><ol><li>连接：将L<sub>k</sub>（频繁k-项集的集合）中<strong>所有项随机组合</strong>，得到所有可能的k+1项集的集合。</li><li>剪枝：将连接得到的集合中<strong>含有不频繁子集的(k+1)-项集删去</strong>，得到候选k+1项集的集合。</li><li>扫描：计算所有候选项集的支持度技术，<strong>将小于最小支持度计数的项集删去</strong>，得到频繁k+1项集的集合。</li></ol><h3 id="找到强关联规则-！！"><a href="#找到强关联规则-！！" class="headerlink" title="找到强关联规则[！！]"></a>找到强关联规则[！！]</h3><p>将频繁项集的集合Y划分成两个非空子集X和Y-X，使得X→Y-X满足置信度阈值。</p><p>例：</p><blockquote><p>如果 {A,B,C,D} 是频繁项集, 候选项集为:</p><p>ABC →D,     ABD →C,     ACD →B,     BCD →A, A →BCD,    B →ACD,    C → ABD,     D →ABC，AB →CD,    AC → BD,     AD → BC,     BC →AD, BD →AC,     CD →AB    </p><p>一般，计算关联规则的置信度并不需要再次扫描事务数据集。</p><p><strong>规则{A,B,C} →{D}的置信度为support(ABCD)/ support (ABC)。</strong></p></blockquote><h3 id="挑战和改进"><a href="#挑战和改进" class="headerlink" title="挑战和改进"></a>挑战和改进</h3><ul><li>挑战<ul><li>事务数据库的多遍扫描</li><li>数量巨大的候选</li><li>候选支持度计数繁重的工作量</li></ul></li><li>改进Apriori的基本思想<ul><li>减少事务数据库的扫描遍数</li><li>压缩候选数量</li><li>便于候选计数</li></ul></li><li>方法<ul><li>哈希散列项集计数——压缩候选k项集</li><li>事务压缩——删除不可能对寻找频繁项集有用的事务</li><li>划分——分而治之【项集在DB中是频繁的, 它必须至少在DB的一个划分中是频繁的】</li><li>抽样——选取原数据库的一个样本, 使用Apriori 算法在样本中挖掘频繁模式</li></ul></li></ul><h2 id="FP增长算法-Frequent-Pattern-Growth"><a href="#FP增长算法-Frequent-Pattern-Growth" class="headerlink" title="FP增长算法(Frequent-Pattern Growth)"></a>FP增长算法(Frequent-Pattern Growth)</h2><h3 id="如何构造FP树"><a href="#如何构造FP树" class="headerlink" title="如何构造FP树"></a>如何构造FP树</h3><ol><li>支持度排序：扫描一次数据集，确定每个项的支持度计数。而将频繁项按照支持度的递减排序(<strong>为了给每个{a,b,c…}内部的字母排序</strong>)。L = {a:8, b:7, c:6, d:5, e:3} </li><li>构建FP树：第二次扫描数据集，在处理每个事务时无视(删去)其中的非频繁项，例：<ol><li>读入第一个事务{a, b}之后，创建标记为a和b的结点。然后形成null-&gt;a-&gt;b路径。该路径上的所有结点的频度计数为1。</li><li>读入第二个事务{b,c,d}之后，为项b,c和d创建新的结点集。然后，连接结点null-&gt;b-&gt;c-&gt;d，形成一条代表该事务的路径。该路径上的每个结点的频度计数也等于1。</li><li>第三个事务{a，c，d，e}与第一个事务共享一个共同的前缀项a，所以第三个事务的路径null-&gt;a-&gt;c-&gt;d-&gt;e与第一个事务的路径null-&gt;a-&gt;b部分重叠。因为它们的路径重叠，所以结点a的频度计数增加为2。</li><li>继续该过程，直到每个事务都映射到FP树的一条路径。</li></ol></li></ol><blockquote><p>注意：尽管前两个事务具有一个共同项b，但是它们的路径不相交，因为这两个事务没有共同的前缀</p></blockquote><p><img src="image-20200807133204031.png" alt=""></p><p><img src="image-20200807133307221.png" alt=""></p><h3 id="如何挖掘频繁模式-！！"><a href="#如何挖掘频繁模式-！！" class="headerlink" title="如何挖掘频繁模式[！！]"></a>如何挖掘频繁模式[！！]</h3><ol><li><p>对于头表中每项构建条件模式基（一个“子数据库”，由FP树中与该后缀模式一起出现的前缀路径集组成）</p></li><li><p>构建条件FP树（根据对应项头表，将条件模式基看作为事务数据库，构造每一个频繁项的条件FP树，且删去了每棵树的非频繁节点）</p></li><li><p>挖掘频繁项集</p><ol><li>如果该项的条件FP树为单个路径，则<strong>包含该项</strong>的频繁项集由该项与路径下所有节点组合。</li><li>如果该项的条件FP树为多路径，则针对树包含的每个项<strong>再次迭代</strong>，挖掘<strong>包含该项</strong>的频繁项集（即迭代得到的频繁项集加上该项）。</li></ol></li></ol><h3 id="两算法区别"><a href="#两算法区别" class="headerlink" title="两算法区别"></a>两算法区别</h3><ol><li>范式不同。产生、测试得到频繁项集 vs 在FP树上直接提取。</li><li>时间复杂度不同。FP增长算法比Apriori快了一个数量级。</li><li>内存占用不同。FP树使用内存较多。</li><li>FP更复杂，实现难度更大。</li></ol><h2 id="评估方法"><a href="#评估方法" class="headerlink" title="评估方法"></a>评估方法</h2><p>支持度、置信度、兴趣因子</p><h1 id="Chapter-4-分类"><a href="#Chapter-4-分类" class="headerlink" title="Chapter.4 分类"></a>Chapter.4 分类</h1><h2 id="基本概念-1"><a href="#基本概念-1" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="监督-无监督"><a href="#监督-无监督" class="headerlink" title="监督/无监督"></a>监督/无监督</h3><p><strong>监督学习（分类/预测）</strong><br>数据集中对象的类标记已知<br>通过类标记的指导下学习数据中的模式<br>利用获取的模式或者模型对新数据进行分类预测</p><p><strong>无监督的学习（关联规则，聚类分析）</strong><br>数据集中对象的类标记（概念）是未知的<br>挖掘潜在的数据内部模式</p><h3 id="生成-判别"><a href="#生成-判别" class="headerlink" title="生成/判别"></a>生成/判别</h3><p><strong>生成模型（Generative Model）</strong><br>希望从数据中学习/还原出原始的真实数据生成模型。常见的方法是学习数据的联合概率分布。E.g 朴素贝叶斯方法、隐马尔科夫模型等。</p><p><strong>判别模型 (Discriminative Model)</strong><br>从数据中学习到不同类概念的区别从而进行分类。如KNN，SVM, ANN, Decision Tree, etc.</p><h3 id="分类-回归"><a href="#分类-回归" class="headerlink" title="分类/回归"></a>分类/回归</h3><p><strong>分类</strong></p><p>根据训练数据集和类标号属性，构建模型来分类现有数据和分类新数据</p><p><strong>预测/回归</strong></p><p>建立连续函数值模型，预测连续值或趋势比如预测空缺值</p><h2 id="分类算法"><a href="#分类算法" class="headerlink" title="分类算法"></a>分类算法</h2><h3 id="决策树"><a href="#决策树" class="headerlink" title="决策树[!]"></a>决策树[!]</h3><p>构造过程——决策归纳树算法（是一个贪心算法）</p><p>树以代表训练样本的单个结点开始。<br>如果样本都在同一个类，则该结点成为树叶，并用该类标记。<br>否则，算法选择最有分类能力的属性作为决策树的当前结点。<br>根据当前决策结点属性取值的不同，将训练样本数据集分为若干子集，每个取值形成一个分枝，有几个取值形成几个分枝。针对上一步得到的一个子集，重复进行先前步骤，递归形成每个划分样本上的决策树。一旦一个属性出现在一个结点上，就不必在该结点的任何后代考虑它。<br>递归划分步骤仅当下列条件之一成立时停止：<br>①给定结点的所有样本属于同一类。<br>②没有剩余属性可以用来进一步划分样本。<br>③如果某一分枝，没有满足该分支中已有分类的样本，则以样本的多数类创建一个树叶。</p><h3 id="属性选择"><a href="#属性选择" class="headerlink" title="属性选择"></a>属性选择</h3><h4 id="属性选择度量"><a href="#属性选择度量" class="headerlink" title="属性选择度量"></a>属性选择度量</h4><p>又称分裂规则，决定给定节点上的元组如何分裂<br>具有最好度量得分的属性（对分出的数据类别越“纯”）选定为分裂属性</p><h4 id="三种度量"><a href="#三种度量" class="headerlink" title="三种度量"></a>三种度量</h4><ul><li>信息增益</li><li>信息增益率</li><li>Gini指标</li></ul><p><a href="#信息熵">信息增益</a></p><p>信息增益率</p><script type="math/tex; mode=display">\begin{gathered}Info(D)=-\sum_{i=1}^mp_i\log _2(p_i)\\\\Info_A(D)=\sum_{j=1}^v\frac{|D_{j}|}{|D|}\times Info(D)\\\\(用A分裂D得到v个部分需要的信息)\\\\Gain_{A}(D)=Info(D)-Info_A(D)\\\\(信息增益)\\\\SplitInfo_{A}(D)=-\sum_{j=1}^v\frac{|D_{j}|}{|D|}\times\log_{2}(\frac{|D_{j}|}{|D|})\\\\GainRatio_{A}=\frac{Gain_{A}(D)}{SplitInfo_{A}(D)}\\\\(增益率)\end{gathered}</script><p><img src="image-20200807195604165.png" alt=""></p><h3 id="KNN"><a href="#KNN" class="headerlink" title="KNN"></a>KNN</h3><h4 id="基本思想-1"><a href="#基本思想-1" class="headerlink" title="基本思想"></a>基本思想</h4><p>选择与待分类样本距离最小的K个样本作为X的K个最近邻，最后以X的K个最近邻中的大多数所属的类别作为X的类别。</p><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><p>算距离：给定测试对象，计算它与训练集中的每个对象的距离；<br>找邻居：圈定距离最近的k个训练对象，作为测试对象的近邻；<br>做分类：根据这k个近邻归属的主要类别，来对测试对象分类。</p><h4 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h4><p>简单。适合多标签问题。</p><p>懒惰学习(收到样本后保存整个训练集，预测时才计算，而非用训练集提前算出模型)算法计算量大，内存开销大。样本不平衡时效果不好。可解释性差。</p><h3 id="朴素贝叶斯分类"><a href="#朴素贝叶斯分类" class="headerlink" title="朴素贝叶斯分类"></a>朴素贝叶斯分类</h3><p><strong>计算</strong></p><script type="math/tex; mode=display">\begin{gather}P(H|X)=\frac{P(X|H)P(H)}{P(X)}\\\\[H后验概率=X似然概率\times H先验概率\div X先验概率]\end{gather}</script><p>将有最高后验概率的类作为预测结果，</p><p>即让P(X|C<sub>i </sub>)P(C<sub>i </sub>)最大化。</p><p><strong>假设</strong></p><p>类条件独立：</p><p>给定元组的类标号，假定属性值有条件地相互独立（即属性间不存在依赖关系）</p><h3 id="SVM"><a href="#SVM" class="headerlink" title="SVM"></a>SVM</h3><p>追求结构风险最小化</p><p>支持向量/小样本 </p><p>最大间隔化思想-有泛化能力</p><h4 id="基本思想-2"><a href="#基本思想-2" class="headerlink" title="基本思想"></a>基本思想</h4><p><img src="image-20200807201347022.png" alt=""></p><p>分类面H的表达式：wx+b=0</p><p>支持向量为两分界面Plus-Plane(H1)\Minus-Plane(H2)上的样本点对应向量。</p><p>线性可分：<br>求解使得超平面具有最大内间间隔的w，b参数；（<strong>条件最优化问题！！！</strong>）</p><script type="math/tex; mode=display">\begin{gather}\min\limits_{w,b}\frac{1}{2}||w||^2 \\\\s.t.     y_i(wx_i+b)\ge 1\\\\(乘以y_i相当于判断绝对值，将所有点分开)\end{gather}</script><p>将问题转化为对偶问题进行快速求解；（凸二次规划问题利用Lagrange乘子法）</p><p>改进：加入松弛变量和惩罚因子的SVM</p><p>非线性问题：核函数</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>过拟合问题</p><ul><li>增加数据</li><li>删去异常点</li><li>增加正则项</li><li>Train-Validation-Test</li></ul><p>决策树中的过拟合</p><ul><li>限制层高</li><li><p>数少的节点不再分割</p></li><li><p>先剪枝/后剪枝</p></li></ul><p>Naive Bayes 贝叶斯理论</p><p>人工神经网络 感知机 BP网络</p><h2 id="集成学习"><a href="#集成学习" class="headerlink" title="集成学习"></a>集成学习</h2><h3 id="学习准则"><a href="#学习准则" class="headerlink" title="学习准则"></a>学习准则</h3><p>准确性</p><p>多样性：多个算法组合</p><h3 id="集成策略-！！"><a href="#集成策略-！！" class="headerlink" title="集成策略[！！]"></a>集成策略[！！]</h3><p>Bagging</p><p>Boosting</p><p>Stacking</p><h2 id="评估"><a href="#评估" class="headerlink" title="评估"></a>评估</h2><p>准确率：识别率</p><p>精度：被分类器标记为正类的样本实际为“正类”的比例</p><p>召回率：正样本标记为正的百分比</p><p>F1：精度和召回率的调和平均值</p><p>当类不平衡时：灵敏度（正确识别的正样本的百分比） ， 特效性（正确识别的负样本的百分比）</p><h1 id="Chapter-5-聚类及离群点检测"><a href="#Chapter-5-聚类及离群点检测" class="headerlink" title="Chapter.5 聚类及离群点检测"></a>Chapter.5 聚类及离群点检测</h1><h2 id="什么是聚类"><a href="#什么是聚类" class="headerlink" title="什么是聚类"></a>什么是聚类</h2><p>就是将数据分为多个簇(Clusters)，使得在同一个簇内对象之间具有较高的相似度，而不同簇之间的对象差别较大。</p><ul><li><p>探索数据内部潜在的自然分组结构</p></li><li><p>无监督学习（无类别信号）</p></li></ul><h2 id="聚类算法分类-！！"><a href="#聚类算法分类-！！" class="headerlink" title="聚类算法分类[！！]"></a>聚类算法分类[！！]</h2><ul><li>划分方法（partitioning  method）<ul><li>K-means算法</li></ul></li><li>层次的方法（hierarchical method）<ul><li>AGNES算法（自底向上、凝聚算法）</li><li>DIANA算法（自顶向下、分裂算法）</li></ul></li><li>基于密度的方法（density-based method）<ul><li>DBSCAN算法</li></ul></li><li>基于网格的方法（grid-based method）<ul><li>STING算法</li></ul></li></ul><h3 id="K-means"><a href="#K-means" class="headerlink" title="K-means"></a>K-means</h3><p>属于划分方法</p><h4 id="目标："><a href="#目标：" class="headerlink" title="目标："></a>目标：</h4><p>将数据集D划分为K个互不相容的簇，使得簇内对象互相相似，簇间差异大。</p><h4 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h4><ol><li>设定K，随机选取K个初始值，作为簇中心点。</li><li>将所有对象分配到最近的簇中（即找到与之距离最小的簇中心点）。</li><li>重新计算每个簇的中心点，并计算所有点到其所属簇中心的距离之和E。</li><li>迭代。继续重新分配并计算E。</li><li>当E收敛不变时结束。</li></ol><h4 id="优缺点-1"><a href="#优缺点-1" class="headerlink" title="优缺点"></a>优缺点</h4><ul><li>优点：<ul><li>经典算法，简单、快速。</li><li>对处理大数据集，该算法是相对可伸缩和高效率的。</li></ul></li><li>缺点<ul><li>必须事先给出k（不是 parameter-free clustering algorithms）</li><li>对初值敏感，对于不同的初始值，可能会导致不同结果。</li><li>不适合于发现非球形状的簇或者大小差别很大的簇。（这适合使用DBSCAN）</li><li>对于“噪声”和孤立点数据是敏感的（ K-中心点）</li></ul></li></ul><h3 id="DBSCAN"><a href="#DBSCAN" class="headerlink" title="DBSCAN"></a>DBSCAN</h3><p>基于密度的聚类算法。</p><h4 id="思想："><a href="#思想：" class="headerlink" title="思想："></a>思想：</h4><p>对于一个类中的每个对象，在其给定半径的领域中包含的对象不能少于某一给定的最小数目<br>在DBSCAN中，发现一个类的过程是基于这样的事实：一个类能够被其中的任意一个核心对象所确定</p><h4 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h4><ol><li>对象的ε-临域（ Eps 近邻）：以该对象为圆心，半径ε内的区域。</li><li>核心对象：如果一个对象的ε-临域至少包含最小数目MinPts个对象，则称该对象为核心对象。</li><li>直接密度可达：给定一个对象集合D，如果p是在q的ε-邻域内，而q是一个核心对象，我们说对象p从对象q出发是直接密度可达的。（<strong>核心对象到其邻域内的对象都是直接密度可达的，单向关系</strong>）</li><li>密度可达的：如果存在一个对象链p1，p2，…，pn，p1=q，pn=p，对pi∈D，（1&lt;=i&lt;=n），pi+1是从pi关于ε和MitPts直接密度可达的，则对象p(pn)是从对象q(p1)关于ε和MinPts密度可达的。（<strong>对象链从p1到pn-1全为核心对象，且距离不得超过ε，这样才密度可达pn。pn可以不是核心对象</strong>）</li><li>密度相连的：如果对象集合D中存在一个对象o，使得对象p和q是从o关于ε和MinPts密度可达的，那么对象p和q是关于ε和MinPts密度相连的。（<strong>o到p密度可达，o到q密度可达，则p和q密度相连，中间经过对象全为核心对象。p,q可以不是核心对象</strong>）</li><li>噪声: 一个基于密度的簇是基于密度可达性的最大的密度相连对象的集合。<strong>不包含在任何簇中</strong>的对象被认为是“噪声”</li></ol><h4 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤"></a>步骤</h4><p>DBSCAN算法描述<br>算法5-5 DBSCAN  </p><p>输入：包含n个对象的数据库，半径ε，最少数目MinPts。<br>输出：所有生成的簇，达到密度要求。</p><ol><li>REPEAT</li><li>从数据库中抽取一个未处理过的点；</li><li>IF 抽出的点是核心点 THEN找出所有从该点密度可达的对象，形成一个簇</li><li>ELSE 抽出的点是边缘点(非核心对象)，跳出本次循环，寻找下一点；</li><li>UNTIL 所有点都被处理；</li></ol><h2 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h2><h3 id="什么是离群点"><a href="#什么是离群点" class="headerlink" title="什么是离群点"></a>什么是离群点</h3><blockquote><p>“离群点是一个数据对象，它显著不同于其它数据对象，好像它是被不同的机制产生的一样。”</p></blockquote><h3 id="离群点种类"><a href="#离群点种类" class="headerlink" title="离群点种类"></a>离群点种类</h3><ul><li>全局离群点</li><li>局部离群点</li><li>集体离群点</li></ul><h4 id="LOF"><a href="#LOF" class="headerlink" title="LOF"></a>LOF</h4><p>局部异常因子(Local Outlier Factor) </p><p>计算公式暂略</p><blockquote><p>n对象<em>p</em>的局部异常因子表示<em>p</em>的异常程度，局部异常因子愈大，就认为它更可能异常；反之则可能性小。</p><p>n簇内靠近核心点的对象的<em>LOF</em>接近于1，那么不应该被认为是局部异常。而处于簇的边缘或是簇的外面的对象的LOF相对较大，如前面图中对象o1， o2。 </p></blockquote><h1 id="Chapter-6-大数据分析"><a href="#Chapter-6-大数据分析" class="headerlink" title="Chapter.6 大数据分析"></a>Chapter.6 大数据分析</h1><h2 id="哈希技术"><a href="#哈希技术" class="headerlink" title="哈希技术"></a>哈希技术</h2><h3 id="整体框架"><a href="#整体框架" class="headerlink" title="整体框架"></a>整体框架</h3><p><img src="image-20200824102425400.png" alt=""></p><h3 id="Shingling"><a href="#Shingling" class="headerlink" title="Shingling"></a>Shingling</h3><p>一个文档的 k-shingle (或 k-gram) 是指连续k个字符一起出现的序列。</p><blockquote><p>Example: k=2; doc = abcab.  Set of 2-shingles = {ab, bc, ca}.<br>Option: regard shingles as a bag, and count ab twice.</p></blockquote><p>一个文档可以通过k-shingles来很好表示.</p><h3 id="Min-Hash-最小哈希"><a href="#Min-Hash-最小哈希" class="headerlink" title="Min-Hash 最小哈希"></a>Min-Hash 最小哈希</h3><p>思想：</p><p>先给出n个随机序数列，用来代替原矩阵的行的序号（相当于n种矩阵换行的方式）。</p><p>定义哈希函数h(C)=第C列从上到下出现的第一个1（故称为“最小哈希”）的行序号在n个随机序数列中的对应数。</p><p>h(C)为[1,n]的列向量，在签名矩阵中位于第C列。</p><h4 id="计算签名矩阵-！！"><a href="#计算签名矩阵-！！" class="headerlink" title="计算签名矩阵[！！]"></a>计算签名矩阵[！！]</h4><p>实际实现时不用生成n个随机序数列，而是使用n个哈希函数（例如：h(r)=r mod 5)代替。</p><p>假设原数据矩阵为[X,Y]大小。</p><p>通过对C列从Row1到RowX的<strong>每个为1的元素的行号r</strong>依次计算多个哈希h(r)，找出并保留得到的对于C列来说每种哈希函数的最小哈希值。</p><p>得到一个签名矩阵[n,Y]，其中位于(x,y)的元素代表第y列的<strong>所有对应元素为1的行号</strong>在第x个哈希函数下计算得到的最小哈希值。</p><p>而这时</p><script type="math/tex; mode=display">Sim(C_i,C_j)=Pr(h(C_i)=h(C_j))</script><h4 id="通过签名矩阵寻找相似的签名"><a href="#通过签名矩阵寻找相似的签名" class="headerlink" title="通过签名矩阵寻找相似的签名"></a>通过签名矩阵寻找相似的签名</h4><p>计算<strong>签名矩阵</strong>两列中相同数字占比。</p><p>签名矩阵中相似的两项在输入矩阵中也可能相似。</p><h4 id="检测签名相似的是否真的相似"><a href="#检测签名相似的是否真的相似" class="headerlink" title="检测签名相似的是否真的相似"></a>检测签名相似的是否真的相似</h4><p>【注意】计算<strong>输入矩阵</strong>中的两列二元非对称变量（0-1变量）的相似度Similarity：需要删去负匹配数目（0与0匹配）后，计算正匹配（1与1匹配）所占比例</p><h3 id="局部敏感哈希Locality-Sensitive-Hashing，LSH"><a href="#局部敏感哈希Locality-Sensitive-Hashing，LSH" class="headerlink" title="局部敏感哈希Locality-Sensitive Hashing，LSH"></a>局部敏感哈希Locality-Sensitive Hashing，LSH</h3><p>将签名矩阵按行分块(band)，比如r行1块，对于每一块中的每列计算哈希（哈希桶数目尽量多）。</p><p>如果这块中有某两列落在一个bucket中，说明这两列可能相同。</p><p>相似的两列，至少有1band会出现落在同个bucket的candidate pair。</p><h2 id="数据流挖掘"><a href="#数据流挖掘" class="headerlink" title="数据流挖掘"></a>数据流挖掘</h2><h3 id="数据流挑战"><a href="#数据流挑战" class="headerlink" title="数据流挑战"></a>数据流挑战</h3><p>数据流是无限长度的；是不断进化的；</p><ul><li>Single Pass Handling （单遍处理）</li><li>Memory Limitation （内存限制）</li><li>Low Time Complexity （低时间复杂度）</li><li>Concept Drift （概念漂移）</li></ul><h3 id="概念漂移-！！"><a href="#概念漂移-！！" class="headerlink" title="概念漂移[！！]"></a>概念漂移[！！]</h3><p>模型尝试预测的目标变量的某个统计属性随时间发生不可预料的变化。</p><p>从本质上说，概念漂移指，数据流的概率分布P(C|X)随时间发生变化。</p><p>P(C|X)：在数据条件下，类别的概率分布。</p><h3 id="概念漂移的检测方法"><a href="#概念漂移的检测方法" class="headerlink" title="概念漂移的检测方法"></a>概念漂移的检测方法</h3><p>基于分布的检测：ADWIN</p><p>基于错误率的检测：PHT</p><p>漂移检测方法：DDM</p><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>VFDT (Very Fast Decision Tree)</p><p>根据Hoeffding Bound利用少量数据构造动态决策树：</p><ul><li>计算输入数据的所有属性的信息增益，找到增益最大的两个属性A,B。</li><li>在每个节点检查两者增益的差G(A)-G(B)若大于Hoeffding Bound，就基于该属性分裂。</li><li>如果不大于，继续输入数据，并重新计算增益。</li></ul><h3 id="聚类"><a href="#聚类" class="headerlink" title="聚类"></a>聚类</h3><p>线上+线下</p><p>线上：数据抽象，将数据整理成节省空间的数据结构。</p><p>线下：用聚类算法找到数据划分</p><h4 id="线上："><a href="#线上：" class="headerlink" title="线上："></a>线上：</h4><p>微簇：将非常靠近的一簇数据点当作一个点。</p><p>将数据点宏观抽象，以微簇形式维护到内存中，且是<strong>动态变化</strong>的。</p><p><strong>簇特征</strong>(Cluster Feature) </p><p>CF=(N,LS,SS)</p><blockquote><p>N：点的个数</p><p>LS：（线性）所有行向量的和，即每维（每一列）的数据之和</p><p>SS：（平方）所有行向量的平方和</p></blockquote><p><strong>CF具有可加/减性！！可以实现动态增量计算</strong></p><h4 id="线下：Kmeans-DBSCAN"><a href="#线下：Kmeans-DBSCAN" class="headerlink" title="线下：Kmeans/DBSCAN"></a>线下：Kmeans/DBSCAN</h4><h2 id="Hadoop-Spark"><a href="#Hadoop-Spark" class="headerlink" title="Hadoop/Spark"></a>Hadoop/Spark</h2><h3 id="什么是Hadoop-Spark"><a href="#什么是Hadoop-Spark" class="headerlink" title="什么是Hadoop/Spark"></a>什么是Hadoop/Spark</h3><p>Hadoop是一个基于MapReduce的分布式超大数据集处理软件框架。</p><blockquote><p>关键词：处理大数据，分布式计算，使用大量廉价的商用硬件</p></blockquote><p>Spark也是分布式计算环境，它启用了内存分布数据集，除了能够提供交互式查询外，它还可以优化迭代工作负载。它是对 Hadoop 的补充，可以在 Hadoop 文件系统中并行运行。</p><blockquote><p>但不同于MapReduce的是——Job中间输出结果可以保存在内存中，从而不再需要读写HDFS，因此Spark能更好地适用于数据挖掘与机器学习等需要迭代的MapReduce的算法。</p></blockquote><h3 id="Hadoop设计准则"><a href="#Hadoop设计准则" class="headerlink" title="Hadoop设计准则"></a>Hadoop设计准则</h3><ul><li><p><strong>Automatic parallelization &amp; distribution</strong><br>Hidden from the end-user</p></li><li><p><strong>Fault tolerance and automatic recovery</strong><br>Nodes/tasks will fail and will recover automatically</p></li><li><p><strong>Clean and simple programming abstraction</strong><br>Users only provide two functions “map” and “reduce”</p></li></ul><h3 id="Hadoop生态"><a href="#Hadoop生态" class="headerlink" title="Hadoop生态"></a>Hadoop生态</h3><p><img src="6422782-fbfd2b834ed3707d.png" alt=""></p><h3 id="HDFS-——-存储"><a href="#HDFS-——-存储" class="headerlink" title="HDFS —— 存储[!]"></a>HDFS —— 存储[!]</h3><p>Hadoop Distributed File System</p><h4 id="Namenode"><a href="#Namenode" class="headerlink" title="Namenode"></a>Namenode</h4><p>维护文件分块存储信息的元数据。（文件本身默认按64M每block分块。）</p><p>Namenode通过心跳机制持续检测Datanode。</p><h4 id="Datanode"><a href="#Datanode" class="headerlink" title="Datanode"></a>Datanode</h4><p>保存分块过的文件数据，默认每个block会复制三份保存在不同Datanode上。</p><h3 id="MapReduce-——-计算"><a href="#MapReduce-——-计算" class="headerlink" title="MapReduce —— 计算"></a>MapReduce —— 计算</h3><p>Input &gt;&gt; Map Task &gt;&gt; Shuffle&amp;Sort &gt;&gt; Reduce &gt;&gt; Output</p><blockquote><p>Users only provide the “Map” and “Reduce” functions.</p><p>“Shuffle&amp;Sort”相当于自动将所有块映射后的某种键值对合并送到对应reduce函数中。</p></blockquote><p>Kmeans先在各块中分配簇(map)，再更新中心点(reduce)。</p><p>KNN先在各块中找本地近邻点(map)，再从所有本地近邻点中找到全局近邻点(reduce)。</p><h3 id="MapReduce-vs-Spark"><a href="#MapReduce-vs-Spark" class="headerlink" title="MapReduce vs Spark[!]"></a>MapReduce vs Spark[!]</h3><p>MapReduce存在缺点：</p><ul><li><p>适合单遍计算，多遍算法效率低。</p></li><li><p>使用广播，没有高效率的数据分享方法，多轮IO操作导致很慢。</p></li></ul><p>而Spark的优点：</p><ul><li><p>使用RDD,<strong>resilient distributed dataset</strong> (弹性分布式数据集)，它是存在内存中的只读数据库，速度快。</p></li><li><p>Spark提供多个语言的API以供调用。</p></li></ul><h3 id="RDD-操作"><a href="#RDD-操作" class="headerlink" title="RDD 操作"></a>RDD 操作</h3><p><img src="image-20200824144319721.png" alt=""></p><p>transformations类似map，在已有数据集上得到新的数据集。</p><blockquote><p>所有transformations都是lazy的，只有需要actions时才进行前置的transformations</p></blockquote><p>actions类似reduce，汇总分布的数据并处理。</p><p>transformations和actions是函数类型的统称，不是具体的某个函数。</p>]]></content>
    
    
    <categories>
      
      <category>知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>复习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QQ音乐API</title>
    <link href="/blogsite/2020/08/02/QQMusic/"/>
    <url>/blogsite/2020/08/02/QQMusic/</url>
    
    <content type="html"><![CDATA[<p>在做微信小程序MusicMood期间没有实现QQ音乐的API。现在参考大佬文章之后实现了搜索并下载免费音乐的API功能。主要由python编写，需导入sign.js。<a href="https://github.com/MediocrityXT/QQmusicAPI">项目地址</a></p><span id="more"></span><h1 id="QQ音乐API"><a href="#QQ音乐API" class="headerlink" title="QQ音乐API"></a>QQ音乐API</h1><ol><li>搜索音乐，获得歌曲列表和对应songmid</li><li>找到所需歌曲songmid，对服务器申请url</li><li>拼接得到歌曲.m4a下载地址。</li></ol><h2 id="搜索音乐"><a href="#搜索音乐" class="headerlink" title="搜索音乐"></a>搜索音乐</h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">__get_songs</span>(<span class="hljs-params">self, name</span>):<br>    num = <span class="hljs-number">10</span>        <br>    url = <span class="hljs-string">&#x27;https://c.y.qq.com/soso/fcgi-bin/client_search_cp?p=1&amp;n=&#x27;</span>+<span class="hljs-built_in">str</span>(num)+<span class="hljs-string">&#x27;&amp;w=&#x27;</span>+name+<span class="hljs-string">&#x27;&amp;format=json&#x27;</span><br>    response = requests.get(url, headers=self.headers).json()[<span class="hljs-string">&#x27;data&#x27;</span>][<span class="hljs-string">&#x27;song&#x27;</span>][<span class="hljs-string">&#x27;list&#x27;</span>]<br>    <span class="hljs-keyword">return</span> response<br></code></pre></div></td></tr></table></figure><p>设定只显示歌曲搜索结果前10首。(经测试最大可单次请求显示60首)</p><p>response结构如下：</p><p><img src="image-20200803013211735.png" alt="image-20200803013211735"></p><p>我们本文只用到了response[index]下的<code>&#39;pay&#39;</code>,<code>&#39;singer&#39;</code>,<code>&#39;songname&#39;,&#39;songmid&#39;</code></p><h2 id="申请url"><a href="#申请url" class="headerlink" title="申请url"></a>申请url</h2><p>下面是我从浏览器中取出的播放器http请求，作用是申请播放url。</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">https</span>://u.y.qq.com/cgi-bin/musics.fcg?-=getplaysongvkey38596056557178904&amp;g_tk=<span class="hljs-number">1129808082</span>&amp;sign=zzajfni56vio18b757db87998ebda87d74e3535f6a5ce&amp;loginUin=<span class="hljs-number">1184849208</span>&amp;hostUin=<span class="hljs-number">0</span>&amp;format=json&amp;inCharset=utf8&amp;outCharset=utf-<span class="hljs-number">8</span>&amp;notice=<span class="hljs-number">0</span>&amp;platform=yqq.json&amp;needNewCode=<span class="hljs-number">0</span>&amp;data=%<span class="hljs-number">7</span>B%<span class="hljs-number">22</span>req%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>B%<span class="hljs-number">22</span>module%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>CDN.SrfCdnDispatchServer%<span class="hljs-number">22</span>%<span class="hljs-number">2</span>C%<span class="hljs-number">22</span>method%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>GetCdnDispatch%<span class="hljs-number">22</span>%<span class="hljs-number">2</span>C%<span class="hljs-number">22</span>param%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>B%<span class="hljs-number">22</span>guid%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">226068873117</span>%<span class="hljs-number">22</span>%<span class="hljs-number">2</span>C%<span class="hljs-number">22</span>calltype%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A0%<span class="hljs-number">2</span>C%<span class="hljs-number">22</span>userip%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">22</span>%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D%<span class="hljs-number">2</span>C%<span class="hljs-number">22</span>req_0%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>B%<span class="hljs-number">22</span>module%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>vkey.GetVkeyServer%<span class="hljs-number">22</span>%<span class="hljs-number">2</span>C%<span class="hljs-number">22</span>method%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>CgiGetVkey%<span class="hljs-number">22</span>%<span class="hljs-number">2</span>C%<span class="hljs-number">22</span>param%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>B%<span class="hljs-number">22</span>guid%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">226068873117</span>%<span class="hljs-number">22</span>%<span class="hljs-number">2</span>C%<span class="hljs-number">22</span>songmid%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">5</span>B%<span class="hljs-number">2200008</span>daw1ekJfX%<span class="hljs-number">22</span>%<span class="hljs-number">5</span>D%<span class="hljs-number">2</span>C%<span class="hljs-number">22</span>songtype%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">5</span>B0%<span class="hljs-number">5</span>D%<span class="hljs-number">2</span>C%<span class="hljs-number">22</span>uin%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">221184849208</span>%<span class="hljs-number">22</span>%<span class="hljs-number">2</span>C%<span class="hljs-number">22</span>loginflag%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A1%<span class="hljs-number">2</span>C%<span class="hljs-number">22</span>platform%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">2220</span>%<span class="hljs-number">22</span>%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D%<span class="hljs-number">2</span>C%<span class="hljs-number">22</span>comm%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>B%<span class="hljs-number">22</span>uin%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A1184849208%<span class="hljs-number">2</span>C%<span class="hljs-number">22</span>format%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>json%<span class="hljs-number">22</span>%<span class="hljs-number">2</span>C%<span class="hljs-number">22</span>ct%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A24%<span class="hljs-number">2</span>C%<span class="hljs-number">22</span>cv%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A0%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D<br></code></pre></div></td></tr></table></figure><p><img src="image-20200802144412138.png" alt="image-20200802144412138"></p><p>这个部分最麻烦的部分在于</p><p><strong>需要正确的sign参数来保障request中data合法性</strong></p><p>即在本地对data的签名要被服务器验算正确才能获取到purl</p><p><del>面向百度编程，启动！</del></p><p>从浏览器中寻找生成sign参数的原理，并找到其对应匿名函数<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://blog.csdn.net/Houdr243/article/details/107678692">[1]</span></a></sup>并将__sign_hash_20200305存到js文件。</p><p>再通过大佬的手动debug分析<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://blog.csdn.net/weixin_44159306/article/details/106292092">[2]</span></a></sup>，简写调用生成sign的js代码。</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">getSecuritySign</span>(<span class="hljs-params">data</span>)&#123;<br>    <span class="hljs-keyword">let</span> str = <span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789&#x27;</span>;<br>    <span class="hljs-keyword">let</span> count = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * <span class="hljs-number">7</span> + <span class="hljs-number">10</span>);<br>    <span class="hljs-keyword">let</span> sign = <span class="hljs-string">&#x27;zza&#x27;</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; count ; i++)&#123;<br>        sign += str[<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * <span class="hljs-number">36</span>)];<br>    &#125;<br>    sign += <span class="hljs-title function_">__sign_hash_20200305</span>(<span class="hljs-string">&#x27;CJBPACrRuNy7&#x27;</span>+data);<br>    <span class="hljs-keyword">return</span> sign<br>&#125;<br><br></code></pre></div></td></tr></table></figure><p><del>这段代码别说2个小时了，给我20小时都搞不来，大佬太关键</del></p><p>通过在浏览器中进行网页调试找到getSecuritySign的函数所在，并探明函数所需要的参数r.data.data内容。</p><p><img src="image-20200802152011005.png" alt="image-20200802152011005"></p><p>data模板固定，只需要替换songmid即可得到不同歌曲对应data。将替换好的data送入__get_Sign中得到sign参数。</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">__get_Sign</span>(<span class="hljs-params">self,data</span>):<br>    <span class="hljs-built_in">print</span>(os.path.realpath(__file__))<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(os.path.realpath(__file__)+<span class="hljs-string">&#x27;/../sign.js&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        js_content = f.read()<br>    js_exec = execjs.<span class="hljs-built_in">compile</span>(js_content)<br>    sign = js_exec.call(<span class="hljs-string">&#x27;getSecuritySign&#x27;</span>,data)<br>    <span class="hljs-keyword">return</span> sign<br></code></pre></div></td></tr></table></figure><p>随后利用data和sign请求url。</p><h2 id="拼接下载地址"><a href="#拼接下载地址" class="headerlink" title="拼接下载地址"></a>拼接下载地址</h2><p>对于上面的http请求，我们只取response[‘req_0’][‘data’][‘midurlinfo’][0][‘purl’]，并将purl与cdn域名<code>https://isure.stream.qqmusic.qq.com/</code>拼接即得到.m4a下载地址。</p><h2 id="其他无关紧要的发现"><a href="#其他无关紧要的发现" class="headerlink" title="其他无关紧要的发现"></a>其他无关紧要的发现</h2><blockquote><p>var l=”getplaysongvkey”+(Math.random()+””).replace(“0.”,””);</p></blockquote><p>对u.y.qq.com/cgi-bin/musics.fcg发送的get请求中:</p><p>getplaysongvkey后面的实际上是随机数</p><p>g_tk是函数getACSRFToken获得的令牌</p><p>loginUin以及<code>comm</code>字段中的uin是登录者的QQ号</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://blog.csdn.net/Houdr243/article/details/107678692">https://blog.csdn.net/Houdr243/article/details/107678692</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://blog.csdn.net/weixin_44159306/article/details/106292092">https://blog.csdn.net/weixin_44159306/article/details/106292092</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>爬虫</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序开发体验</title>
    <link href="/blogsite/2020/07/30/wxprogram/"/>
    <url>/blogsite/2020/07/30/wxprogram/</url>
    
    <content type="html"><![CDATA[<p><img src="vlcsnap-2019-02-19-18h40m16s972.png" alt="vlcsnap-2019-02-19-18h40m16s972"></p><p><img src="vlcsnap-2019-02-19-18h40m30s526.png" alt="vlcsnap-2019-02-19-18h40m30s526"></p><p>十天时间说来不长，主要有如下收获</p><ul><li>GitHub版本管理使用</li><li>js、json编写页面脚本</li><li>html与css前端实现</li><li>nodejs云函数与云数据库开发</li><li><del>箭头函数与回调</del></li></ul><p>项目代码<a href="https://github.com/MediocrityXT/WXminiProgram">https://github.com/MediocrityXT/WXminiProgram</a></p><h1 id="微信小程序开发"><a href="#微信小程序开发" class="headerlink" title="微信小程序开发"></a>微信小程序开发</h1><h2 id="个人相册-miniprogram-1"><a href="#个人相册-miniprogram-1" class="headerlink" title="个人相册    miniprogram-1"></a>个人相册    <code>miniprogram-1</code></h2><h3 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h3><blockquote><p>本地从相机拍摄或图库上传图片<del>不知道为什么api的两个选择都是从图库上传没有区别</del>，选择已有相册/新建相册存入，并可以查看各相册。</p></blockquote><p><img src="image-20200730232143254.png" alt="上传后预览界面" title="上传后预览界面"></p><p><img src="image-20200730230947938.png" alt="相册界面"></p><p>这个部分实现比较简单，可以通过这个作业对微信小程序的结构有一个基本了解，并且接触到前后端的基本工作范围。<del>前四天熬到3点把云上传和云查看功能做完然后发现其实这是后几天的工作QAQ</del></p><h3 id="图像处理功能"><a href="#图像处理功能" class="headerlink" title="图像处理功能"></a>图像处理功能</h3><blockquote><p>可以对图片进行基础的处理（如水印、美颜等）</p></blockquote><p>看完云开发guidebook我信心满满，挑明了sharp库随便用用就行，介不似送吗？</p><p>于是我开始了 <strong><em>长达两天的导库尝试</em></strong> </p><blockquote><p>什么叫做放弃希望啊？——战术后仰 </p></blockquote><p>拿着sharp和jimp在本地小程序和云函数两侧反复横跳，不断尝试导入、构建、接着失败之后，我咨询到的某位同学表示：<code>我用的canvas加css滤镜做的，其它的不会</code></p><p><strong>惊为天人！</strong></p><p>canvas???未曾设想的道路…</p><p>于是就变成了导入选定图片到画布然后加上text成为水印图</p><p><img src="image-20200730234005493.png" alt="图像处理页面" title="图像处理界面"></p><p>（水印text为微信用户名，上面的图是本地原图，下面是画布效果）<del>竟然画布里的画质比上面的还好</del></p><p>至于css滤镜…只能本地显示不能保存修改啊…何况css不支持随着js变量直接更改滤镜参数…所以…滤镜按钮现在是个摆设嘿嘿</p><p>（html用style标签好像可以做到给样式传变量）</p><h2 id="MusicMood-miniprogram-3"><a href="#MusicMood-miniprogram-3" class="headerlink" title="MusicMood    miniprogram-3"></a>MusicMood    <code>miniprogram-3</code></h2><h3 id="设计文档"><a href="#设计文档" class="headerlink" title="设计文档"></a>设计文档</h3><blockquote><h2 id="音乐情绪MusicMood小程序"><a href="#音乐情绪MusicMood小程序" class="headerlink" title="音乐情绪MusicMood小程序"></a>音乐情绪MusicMood小程序</h2><h4 id="【基本功能】"><a href="#【基本功能】" class="headerlink" title="【基本功能】"></a>【基本功能】</h4><p>获取音乐，暂停和播放，拖动进度条。</p><h4 id="【核心功能-记录情绪】"><a href="#【核心功能-记录情绪】" class="headerlink" title="【核心功能 记录情绪】"></a>【核心功能 记录情绪】</h4><p>选择该按钮的同时下方会出现两个可拖动条：</p><p>无共鸣——有共鸣（调动起自己的情绪）</p><p>深情——平静——动感</p><p>[可附加]在按下评论的歌曲时间点，输入你的感想。还允许上传一张图片。</p><h4 id="【核心功能-重播情绪】"><a href="#【核心功能-重播情绪】" class="headerlink" title="【核心功能 重播情绪】"></a>【核心功能 重播情绪】</h4><p>你可以通过其他用户获得你发送的链接/在主页选择其他用户的名字，选择特定歌曲，在听歌的同时观看其他用户听到此处记录下来的情绪和评论。</p><p>最好将情绪数据可视化，比如显示波形图，波形图的笔触大小与共鸣度成正比，上下波动与第二个条相关。</p><p>在歌曲播放到对应时间时会弹出对应评论。如果有对应图片也会一并显示。</p><h4 id="【数据库设计】"><a href="#【数据库设计】" class="headerlink" title="【数据库设计】"></a>【数据库设计】</h4><ul><li>Userid</li><li>music</li><li>mood<ul><li>timeSample []</li><li>resonanceSample []</li><li>feelingSample []</li></ul></li><li>comment<ul><li>time</li><li>words</li><li>pic</li></ul></li></ul></blockquote><h3 id="获取音乐"><a href="#获取音乐" class="headerlink" title="获取音乐"></a>获取音乐</h3><p>最初准备使用QQ音乐的API，根据它web播放器的原理来实现搜索歌曲、下载歌曲。在研究一天之后，发现这几年QQ音乐的接口不断升级，没有现成教程，难以使用其下载API，只完成了搜索API的接入；另外发现小程序开发内置的官方音频组件<code>innerAudioContext</code>不支持m4a文件类型。</p><blockquote><p>题外话，我交完代码之后发现网易云音乐支持外链，也有可以直接获取免费mp3音频的API，完全可以满足我的项目需求。QAQ</p></blockquote><p>随后决定让用户从手机存储中上传音乐。但是我又发现微信只有图片选择上传API<code>wx.chooseImage</code>，不支持其他类型文件。如果非要实现，可能得用<code>FileSystemManager</code>来从头实现该选择与上传的功能，十分复杂。</p><p>最后，我决定在云存储里预置两首测试音乐<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="ＴＲＡ＄Ｈ - ＡＬＯＮＥ.mp3 ，邓丽君 - 独上西楼.mp3">[1]</span></a></sup>，通过<code>button</code>选歌😓。</p><h3 id="音乐播放器"><a href="#音乐播放器" class="headerlink" title="音乐播放器"></a>音乐播放器</h3><p><img src="image-20200801011806200.png" alt="image-20200801011806200"></p><p>用slider做了一个简单的进度条，获取<code>duration</code>和<code>currentTime</code>并通过format将描述转为分：秒。</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-attr">format</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">origin</span>)&#123;<br>  <span class="hljs-keyword">let</span> time=origin.<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">0</span>)<br>  <span class="hljs-keyword">let</span> second = time%<span class="hljs-number">60</span><br>  <span class="hljs-keyword">let</span> minute = (time-second)/<span class="hljs-number">60</span><br>  <span class="hljs-keyword">if</span>(second&lt;<span class="hljs-number">10</span>)&#123;<br>    <span class="hljs-keyword">return</span> minute+<span class="hljs-string">&#x27;:0&#x27;</span>+second<br>  &#125;<br>  <span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">return</span> minute+<span class="hljs-string">&#x27;:&#x27;</span>+second<br>  &#125; <br>&#125;,<br></code></pre></div></td></tr></table></figure><p>另外innerAudioContext在Page()前面就加上<code>const innerAudioContext = wx.createInnerAudioContext();</code>在onShow()加入<code>register</code>函数以启动所有长效监听函数。</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-attr">registerAudioContext</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-keyword">let</span> that = <span class="hljs-variable language_">this</span><br>  innerAudioContext.<span class="hljs-title function_">onCanplay</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    innerAudioContext.<span class="hljs-property">duration</span>; <span class="hljs-comment">//必须写，不然获取不到。。。</span><br>  &#125;)<br>  innerAudioContext.<span class="hljs-title function_">onTimeUpdate</span>(<span class="hljs-function">(<span class="hljs-params">res</span>)=&gt;</span>&#123;      <span class="hljs-comment">//随着时间变化 取样  但是这个函数发生的时间间隔不稳定 或许有需要时可以使用setInterval()来在外界单独写一个监听函数</span><br>    that.<span class="hljs-title function_">setData</span>(&#123;<br>      <span class="hljs-attr">audioDuration</span>: that.<span class="hljs-title function_">format</span>(innerAudioContext.<span class="hljs-property">duration</span>),<br>      <span class="hljs-attr">audioCurrent</span>: that.<span class="hljs-title function_">format</span>(innerAudioContext.<span class="hljs-property">currentTime</span>),<br>      <span class="hljs-attr">sliderTime</span>: innerAudioContext.<span class="hljs-property">currentTime</span>/innerAudioContext.<span class="hljs-property">duration</span> * <span class="hljs-number">100</span><br>    &#125;);<br>    that.<span class="hljs-title function_">sample</span>()<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;取样于&#x27;</span>+innerAudioContext.<span class="hljs-property">currentTime</span>)<br>  &#125;)<br>  innerAudioContext.<span class="hljs-title function_">onPlay</span>(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>    that.<span class="hljs-title function_">setData</span>(&#123;<br>      <span class="hljs-attr">isPlaying</span>:<span class="hljs-literal">true</span><br>    &#125;)<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;onPlay触发&#x27;</span>+res)<br>  &#125;)<br>  innerAudioContext.<span class="hljs-title function_">onPause</span>(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>    that.<span class="hljs-title function_">setData</span>(&#123;<br>      <span class="hljs-attr">isPlaying</span>:<span class="hljs-literal">false</span><br>    &#125;)<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;onPause触发&#x27;</span>+res)<br>  &#125;)<br>  innerAudioContext.<span class="hljs-title function_">onEnded</span>(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>    that.<span class="hljs-title function_">setData</span>(&#123;<br>      <span class="hljs-attr">isPlaying</span>: <span class="hljs-literal">false</span><br>    &#125;)<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;播放结束&#x27;</span> + res);<br>  &#125;)<br>  innerAudioContext.<span class="hljs-title function_">onError</span>(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>      <span class="hljs-comment">// 播放音频失败的回调</span><br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;播放音频失败&#x27;</span> + res);<br>    &#125;)<br>    innerAudioContext.<span class="hljs-title function_">onStop</span>(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>    that.<span class="hljs-title function_">setData</span>(&#123;<br>      <span class="hljs-attr">isPlaying</span>: <span class="hljs-literal">false</span><br>    &#125;)<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;播放终止stop&#x27;</span> + res);<br>    &#125;)<br>&#125;,<br></code></pre></div></td></tr></table></figure><h3 id="数据库所用云函数"><a href="#数据库所用云函数" class="headerlink" title="数据库所用云函数"></a>数据库所用云函数</h3><p>唯一数据库云函数<code>uploadMood</code>用来新增mood记录。同用户同音乐新上传的mood会重写代替以前的mood记录。</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-comment">// 云函数入口文件</span><br><span class="hljs-keyword">const</span> cloud = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;wx-server-sdk&#x27;</span>)<br><br>cloud.<span class="hljs-title function_">init</span>(&#123;<br>  <span class="hljs-attr">env</span>: cloud.<span class="hljs-property">DYNAMIC_CURRENT_ENV</span><br>&#125;)<br><span class="hljs-keyword">const</span> db = cloud.<span class="hljs-title function_">database</span>()  <span class="hljs-comment">//获取数据库的引用</span><br><br><span class="hljs-comment">// 云函数入口函数</span><br><span class="hljs-built_in">exports</span>.<span class="hljs-property">main</span> = <span class="hljs-keyword">async</span> (event, context) =&gt; &#123;<br>  <span class="hljs-keyword">let</span> check = db.<span class="hljs-title function_">collection</span>(<span class="hljs-string">&quot;musicmood&quot;</span>).<span class="hljs-title function_">where</span>(&#123;<br>    <span class="hljs-attr">music</span>:event.<span class="hljs-property">music</span>,<br>    <span class="hljs-attr">openid</span>:event.<span class="hljs-property">openid</span><br>  &#125;).<span class="hljs-title function_">get</span>()<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(check)<br>  <span class="hljs-keyword">if</span>(check)&#123;<br>    <span class="hljs-keyword">await</span> db.<span class="hljs-title function_">collection</span>(<span class="hljs-string">&quot;musicmood&quot;</span>).<span class="hljs-title function_">where</span>(&#123;<br>      <span class="hljs-attr">music</span>:event.<span class="hljs-property">music</span>,<br>      <span class="hljs-attr">openid</span>:event.<span class="hljs-property">openid</span><br>    &#125;).<span class="hljs-title function_">remove</span>()<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> db.<span class="hljs-title function_">collection</span>(<span class="hljs-string">&quot;musicmood&quot;</span>).<span class="hljs-title function_">add</span>(&#123;<br>      <span class="hljs-attr">data</span>:&#123;<br>        <span class="hljs-attr">music</span>:event.<span class="hljs-property">music</span>,<br>        <span class="hljs-attr">openid</span>:event.<span class="hljs-property">openid</span>,<br>        <span class="hljs-attr">time</span>:event.<span class="hljs-property">timeSample</span>,<br>        <span class="hljs-attr">resonance</span>:event.<span class="hljs-property">resonanceSample</span>,<br>        <span class="hljs-attr">feeling</span>:event.<span class="hljs-property">feelingSample</span><br>      &#125;<br>    &#125;)<br>    .<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res)<br>    &#125;)<br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-variable language_">console</span>.<span class="hljs-property">error</span>)<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="重播情绪"><a href="#重播情绪" class="headerlink" title="重播情绪"></a>重播情绪</h3><p>首先选择用户（未实现），获得对应openid之后访问数据库，请求该用户的音乐mood和comment记录，选择播放音乐后在本地播放音乐同时将数据可视化。</p><p><del>以下为倒叙</del></p><p>可视化需要将存在云上的取样数组解开并得到对应时间的情绪具体数值。<code>desample</code>将判断超过取样time就取出resonance和feeling数值。</p><p>所以需要考虑到<code>onTimeUpdate</code>监听方法的时间间隔不稳定（0.1s-0.3s间不定)，可能对情绪重播效果存在负面影响。</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-attr">desample</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-keyword">let</span> index = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">index</span><br>  <span class="hljs-keyword">let</span> timeSample = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">timeSample</span><br>  <span class="hljs-keyword">if</span>(index == timeSample.<span class="hljs-property">length</span>) <span class="hljs-keyword">return</span> <span class="hljs-comment">//index不能超过Sample长度</span><br>  <span class="hljs-keyword">let</span> resonanceSample = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">resonanceSample</span><br>  <span class="hljs-keyword">let</span> feelingSample = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">feelingSample</span><br>  <br>  <span class="hljs-keyword">if</span>(timeSample[index]&lt;=innerAudioContext.<span class="hljs-property">currentTime</span>)&#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>      <span class="hljs-attr">resonance</span>:resonanceSample[index],<br>      <span class="hljs-attr">feeling</span>:feelingSample[index]<br>    &#125;)<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>      <span class="hljs-attr">index</span>:index+<span class="hljs-number">1</span><br>    &#125;)<br>  &#125;<br>&#125;,<br></code></pre></div></td></tr></table></figure><p>因为已经在数据库设置所有人可读，所以使用本地函数<code>getMood</code>读取数据即可。</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-attr">getMood</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-keyword">const</span> db = wx.<span class="hljs-property">cloud</span>.<span class="hljs-title function_">database</span>()<br>  db.<span class="hljs-title function_">collection</span>(<span class="hljs-string">&quot;musicmood&quot;</span>).<span class="hljs-title function_">where</span>(&#123;<br>    <span class="hljs-attr">music</span>:<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">musicUrl</span>,<br>    <span class="hljs-attr">openid</span>:<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">openid</span><br>  &#125;).<span class="hljs-title function_">get</span>()<br>  .<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span>=&gt;</span>&#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>      <span class="hljs-attr">timeSample</span>:res.<span class="hljs-property">data</span>[<span class="hljs-number">0</span>].<span class="hljs-property">time</span>,<br>      <span class="hljs-attr">resonanceSample</span>:res.<span class="hljs-property">data</span>[<span class="hljs-number">0</span>].<span class="hljs-property">resonance</span>,<br>      <span class="hljs-attr">feelingSample</span>:res.<span class="hljs-property">data</span>[<span class="hljs-number">0</span>].<span class="hljs-property">feeling</span><br>    &#125;)<br>  &#125;)<br>  .<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">err</span>=&gt;</span>&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err)<br>  &#125;)<br>&#125;,<br></code></pre></div></td></tr></table></figure><p>在获取openid的时候出现了一些问题：login云函数回调速度较慢，必须要异步才能对getMood传入正确openid而非undefined。</p><p>Promise对象使用异步较难，<del>没研究明白</del>所以使用<code>setInterval</code>多次检测openid存在即可调用下一步函数。</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-attr">chooseUser</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getOpenId</span>()<br>    <span class="hljs-keyword">let</span> inter = <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">()=&gt;</span>&#123;    <span class="hljs-comment">//用定时器多次实验实现异步</span><br>      <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">openid</span>)&#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getMood</span>()<br>        <span class="hljs-built_in">clearInterval</span>(inter)<br>      &#125;<br>    &#125;,<span class="hljs-number">100</span>)<br>&#125;,<br></code></pre></div></td></tr></table></figure><h2 id="总结感想"><a href="#总结感想" class="headerlink" title="总结感想"></a>总结感想</h2><p>网络API对于构造http请求中header的referer有限制，只能写明由微信小程序发出。</p><p>官方提供组件存在一些小问题，但是没有其他选择可以代替，否则只能从头写自定义组件。</p><p>云函数端只能引入node.js库；本地微信开发者工具也难以导入已经<code>npm install</code>的sharp/jimp等图像处理库，扩展性受限。</p><p><strong>但是，</strong></p><ol><li><p>微信小程序逻辑简单，便于学习。</p></li><li><p>提供的微信api在移动端适配良好，功能强大。</p></li><li><p>免费的云存储和数据库，非常方便，管理简单。</p></li><li><p>微信开发者工具编译器比较强大，代码格式要求不严，编程比较轻松。</p></li><li><p>左侧直接预览手机显示效果，测试十分简单，还可以微信直接扫码，真机测试。</p></li></ol><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>ＴＲＡ＄Ｈ - ＡＬＯＮＥ.mp3 ，邓丽君 - 独上西楼.mp3<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感悟</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>markdown笔记/hexo记录</title>
    <link href="/blogsite/2020/07/29/hexo/"/>
    <url>/blogsite/2020/07/29/hexo/</url>
    
    <content type="html"><![CDATA[<h1 id="博客期待实现功能"><a href="#博客期待实现功能" class="headerlink" title="博客期待实现功能"></a>博客期待实现功能</h1><p><strong>Hexo PDF问题</strong>:能不能对于pdf进行显示 而且不是控件中移动 而是每页每页像图片一样放在博文里 不用滚动条</p><p>Hexo可以用api来实现返回不同的首页显示文字。可以增加显示每天天气、温度的功能？ =&gt; 只需要找到好用的天气API</p><h1 id="初出茅庐"><a href="#初出茅庐" class="headerlink" title="初出茅庐"></a>初出茅庐</h1><p><del>这typora怎么用微软输入法打第一个汉字的时候自动跑到Front-Matter字段去了 好烦</del></p><p>第一次使用markdown，记录一下 <del>复制来的</del></p><figure class="highlight plaintext"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs undefined">*斜体文本*<br>_斜体文本_<br>**加粗文本**<br>***斜体加粗文本***<br>~~下划线文本~~<br></code></pre></div></td></tr></table></figure><p>井号 <code>#</code> 加空格 产生标题</p><h2 id="Emoji"><a href="#Emoji" class="headerlink" title="Emoji"></a>Emoji</h2><p>每个Emoji对应一个Unicode</p><p>在typora markdown里表现方法：</p><blockquote><p>&amp;#x1f605；或者&amp;#128517； (&amp;#加编码加冒号为html里面标识特殊符号的方法；该表情Unicode为U+1F601，1F601前面加x表示十六进制/转为十进制)</p></blockquote><p>&#x1f605;&#128517;</p><blockquote><p>: sweat_smile :   两冒号中间加英文 typora中的快速打法 其他地方可能不兼容</p></blockquote><p>:sweat_smile:</p><blockquote><p>直接mac输入法打出来的也是可以显示的</p></blockquote><p>😅</p><h2 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h2><p>使用latex格式输入公式，<em>typora使用mathjax渲染</em></p><script type="math/tex; mode=display">\{\frac{a}{(1+b)}\cdot2\pi\alpha\}</script><p>\begin{gathered}实现公式全部居中对齐</p><p>\begin{align}配合&amp;可以自定义对齐点，没有&amp;时靠右对齐</p><p><strong>*注意⚠️：换行时因为hexo默认渲染引擎对mathjax支持不好，编译时转义反斜杠，需要输入四个\而不是两个\才能正确在页面中实现换行。*</strong></p><p><a href="https://wenghonghui.github.io/2020/03/05/hexo-mathjax/">解决办法</a>：<br>hexo-renderer-marked换成hexo-renderer-kramed</p><blockquote><p>在文章 Front-matter 里指定 <code>math: true</code> 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度</p></blockquote><p>H<sub>2</sub>O——typora自带<code>&lt;sub&gt;</code>标签实现下标</p><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>这里截取一段微信小程序代码 来自<code>musicmood</code> <del>小程序真难做啊</del></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-attr">getMood</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-keyword">const</span> db = wx.<span class="hljs-property">cloud</span>.<span class="hljs-title function_">database</span>()<br>  db.<span class="hljs-title function_">collection</span>(<span class="hljs-string">&quot;musicmood&quot;</span>).<span class="hljs-title function_">where</span>(&#123;<br>    <span class="hljs-attr">music</span>:<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">musicUrl</span>,<br>    <span class="hljs-attr">openid</span>:<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">openid</span><br>  &#125;).<span class="hljs-title function_">get</span>()<br>  .<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span>=&gt;</span>&#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>      <span class="hljs-attr">timeSample</span>:res.<span class="hljs-property">data</span>[<span class="hljs-number">0</span>].<span class="hljs-property">time</span>,<br>      <span class="hljs-attr">resonanceSample</span>:res.<span class="hljs-property">data</span>[<span class="hljs-number">0</span>].<span class="hljs-property">resonance</span>,<br>      <span class="hljs-attr">feelingSample</span>:res.<span class="hljs-property">data</span>[<span class="hljs-number">0</span>].<span class="hljs-property">feeling</span><br>    &#125;)<br>  &#125;)<br>  .<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">err</span>=&gt;</span>&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err)<br>  &#125;)<br>&#125;<br></code></pre></div></td></tr></table></figure><p>-别来</p><p>-危险</p><p>-<strong>前</strong> <strong>后</strong> <strong>夹</strong> <strong>击</strong></p><p><img src="QQ图片20200730152128.jpg" alt="累了.jpg"></p><h2 id="图片问题"><a href="#图片问题" class="headerlink" title="图片问题"></a>图片问题</h2><p>typora解析图片的根目录和hexo博客部署之后有点差别。typora可读入<code>![a](/a.jpg)</code>该相对路径下的图片。但是hexo部署之后只可读入<code>![a](a.jpg)</code>该相对路径下的图片。若需要在Front Matter部分加入<code>typora-root-url: ./$fileName</code>可以减少要删的，从删<code>$fileName/</code>到只删<code>/</code>，但实质没有区别。</p><p>如果有超多图片的可以考虑用正则表达式批量删除<code>/</code></p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">&lt;https:<span class="hljs-regexp">//</span>www.baidu.com&gt;<br></code></pre></div></td></tr></table></figure><p><a href="https://www.baidu.com" title="有标识的超链接，百度网">百度</a>有链接标记，<em>即下面的数字1，也可以是任何文字</em>，便于作者自己统一更新文章链接</p><hr><p>还有一种是脚注，与上面会标蓝的链接的注释不同。</p><p>百度<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="网址为www.baidu.com"><a href="https://www.baidu.com" title="有标识的超链接，百度网">1</a></span></a></sup></p><hr><p>不知道为什么分割线粗细随机</p><blockquote><p>还有[百度]（<a href="https://www.baidu.com">https://www.baidu.com</a>)</p></blockquote><p><a href="https://www.baidu.com/#dada">百度</a></p><hr><p>这里也可以在括号中输入#(标题名称)做到<strong>页面内跳转</strong></p><p><a href="#超链接">实例</a></p><hr><h1 id="解决的Hexo问题"><a href="#解决的Hexo问题" class="headerlink" title="解决的Hexo问题"></a>解决的Hexo问题</h1><p>banner加载不了    =&gt;     <strong><em>注意文件后缀名</em></strong></p><p>图片无法get    =&gt;    本地预览的时候在文件夹里，实际生成网址在根目录，需要手动删去图片前文件夹名</p><p>能不能每次new的时候自动生成更多Front-Matter字段？ =&gt; 博客目录scaffolds文件夹下就是hexo new生成文件的模板</p><p>Hexo-generator-index的lib里的generator负责index页面的文章排序。</p><p>Hexo Front Matter字段都是YAML语言，冒号后面必须加空格，字段名本身不区分大小写；<br>如果想要多标签、多分类，两种写法:</p><ol><li>分行</li></ol><figure class="highlight subunit"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs subunit"><span class="hljs-keyword">tags:</span><br>- tag1<br>- tag2<br></code></pre></div></td></tr></table></figure><ol><li>元组</li></ol><figure class="highlight subunit"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs subunit"><span class="hljs-keyword">tags:</span> [tag1,tag2]<br></code></pre></div></td></tr></table></figure><p>本地favicon预览不到 =&gt; safari不给localhost显示favicon，chrome可以</p><p>对网站大图标和小图标都进行了优化：Apple-Touch-Icon是显示在Safari书签栏的大LOGO。<br>图标搜索的优先级如下：</p><ul><li>如果没有跟相应设备推荐尺寸一致的图标，那个会优先使用比推荐尺寸大，但最接近推荐尺寸的图标。</li><li>如果没有比推荐尺寸大的图标，会优先选择最接近推荐尺寸的图标。</li><li>如些有多个图标符合推荐尺寸，会优先选择包含关键字precomposed的图标。</li></ul><p>比如知乎的Size有60x60,76x76,120x120,152x152<br>不周山博客的Size只有180x180但显示了</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>网址为www.baidu.com<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>折腾</tag>
      
      <tag>感悟</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>雨 水 江</title>
    <link href="/blogsite/2020/07/25/rain/"/>
    <url>/blogsite/2020/07/25/rain/</url>
    
    <content type="html"><![CDATA[<center>    <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=300 height=80 src="//music.163.com/outchain/player?type=2&id=546281919&auto=0&height=66"></iframe></center><blockquote><center>雨入花心自成甘苦，水归器内各关方圆。    <p align = 'right'>      ——王以太《Liquor Whisper》     </p></center></blockquote><h1 id="雨-水-江"><a href="#雨-水-江" class="headerlink" title="雨 水 江"></a>雨 水 江</h1><p>雨不停地下了两天。它砸在地上，砸在窗上，砸在耳膜上，砸在脑海里。</p><p>尽管开门之后看到的雨像是一道水帘隔绝了我和世界，但我必须要出去。既然万物皆为隐喻，出去即进来。我直奔病灶。</p><p>长江。</p><p>原本流到这里的江水应该平缓温顺，如同江边被阳光照射翻卷焦脆蜷缩的绿叶。但当我踏过水翻过山到达时，江面已经淹没了原有的河岸。杂乱的水花正在向上翻腾又随后落回，像是在光明边缘蠢蠢欲动的野兽。看不到头与尾的江水正在扩大，吞占了人间的疆域。两把稍微歪斜的长椅被封住嘴鼻只得靠双眼相互凝望，一张独脚的小桌失去了他的大半截身体，白底黑字的告示牌上印着的前半句话“珍爱生命”与下半句“禁止游泳”不知是否还来得及道别。一切都正在被这相连的雨和水侵蚀。</p><p>今日的江水速度极快，一艘运沙的驳船于江心拉响汽笛，如奔马般嘶鸣着便裹挟着江水瞬息消失在我灰白的世界。</p><p>这灰白色掩盖了一切泥黄色、草绿色、铁黑色。无形的灰色从天落到地，无声于各处凝为有形的水。落到江中的自不必说，无人知无人晓，悄然从世界里隐没。可是雨，落到草地，落到花坛，落到石桥，落到低洼，落到屋檐，则化为水。这样的水是灰色世界扩张的先锋和獠牙。内涝和积水随之而来，将人间的秩序践踏。</p><p>秩序将主动排除异常，将落在人间的水沿着不同的路线送入世界的出口，那唯一低吼着的江。在秩序齿轮转动的空隙间却出现了一缕生命的微光。让我们看看生命的起始——路旁一个不起眼的灌木花坛，雨倾盆而下自然也将其笼罩。再继续观察——花坛的底座边缘由大理石砌成，斑驳的石板立面上两个微小的缝隙让落到花坛的水以抛物线的形式排出，就像长出了水的触须，以纤细的姿态在风中摆动和交错，看似脆弱却生机勃勃。视角随之而下——水泥地面收集各处的水，用一个微不可察的倾斜角将其往江边送去，开阔逐渐变得狭窄，多股主力汇聚于一点——而在这一点，秩序展现了它生命的轮廓——波光闪烁，运动着的水流却凝于空中固化，在地表形成许多块厚薄不均的鳞片，在不该有纹路的地方生出了纹路，在不该有草木的荒漠上生出了花朵。一切不可触摸的水滴，在这一刻陡然清晰触手可及。</p><p>“不要让雨坠落在我的世界，又或者，不要让水积留于我的世界。”有个声音在哭嚎。我无法让它停止。</p><p>江会把水带走，这是江的职责与宿命。当我被水的来势汹汹和江的浩浩汤汤吸引了双眼迷失了自我时，不要忘记生命其实不在于水位的高低，而在于，雨——水——江。</p>]]></content>
    
    
    <categories>
      
      <category>文</category>
      
    </categories>
    
    
    <tags>
      
      <tag>散文</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
